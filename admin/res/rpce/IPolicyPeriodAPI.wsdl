<?xml version="1.0" encoding="UTF-8"?>
<wsdl:definitions targetNamespace="http://api.webservices.bc.guidewire.com/" xmlns:apachesoap="http://xml.apache.org/xml-soap" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><wsdl:types><schema targetNamespace="http://fault.webservices.bc.guidewire.com/" xmlns="http://www.w3.org/2001/XMLSchema"><import namespace="http://schemas.xmlsoap.org/soap/encoding/"/><complexType name="SOAPException"><xsd:annotation><xsd:documentation>A generic SOAP exception.</xsd:documentation></xsd:annotation><sequence><element name="Message" nillable="true" type="soapenc:string"><xsd:annotation><xsd:documentation>The message associated with this exception</xsd:documentation></xsd:annotation></element><element name="OtherMessages" nillable="true" type="soapenc:string"><xsd:annotation><xsd:documentation>Other messages attached to this exception.  This message may contain information
related to other exceptions that occurred during a SOAP call, but not directly
associated with this particular exception.</xsd:documentation></xsd:annotation></element></sequence></complexType><complexType name="SOAPSenderException"><xsd:annotation><xsd:documentation>SOAPSenderException is the base class for all exceptions that resulted from
a sender error. This usually means that required data was not properly encoded
or was absent. Senders should not send the message again unless some steps have
been taken to make the encoded data valid.</xsd:documentation></xsd:annotation><complexContent><extension base="tns1:SOAPException"><sequence/></extension></complexContent></complexType><complexType name="DataConversionException"><xsd:annotation><xsd:documentation>Thrown by many APIs when they encounter a problem translating a SOAP data object into
an internal system object.</xsd:documentation></xsd:annotation><complexContent><extension base="tns1:SOAPSenderException"><sequence/></extension></complexContent></complexType><complexType name="BadIdentifierException"><xsd:annotation><xsd:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect).</xsd:documentation></xsd:annotation><complexContent><extension base="tns1:DataConversionException"><sequence/></extension></complexContent></complexType><complexType name="PermissionException"><xsd:annotation><xsd:documentation>Thrown when the authenticated SOAP user does not have permission to
perform the requested operation</xsd:documentation></xsd:annotation><complexContent><extension base="tns1:SOAPSenderException"><sequence/></extension></complexContent></complexType><complexType name="RequiredFieldException"><xsd:annotation><xsd:documentation>Thrown when required data is missing from a bean.</xsd:documentation></xsd:annotation><complexContent><extension base="tns1:DataConversionException"><sequence/></extension></complexContent></complexType><complexType name="SOAPServerException"><xsd:annotation><xsd:documentation>SOAPServerException is the base class for all exceptions that resulted from
a server error. This is something of a catch-all exception type insofar as
some things which might in fact be considered SOAPSenderExceptions are reported
as SOAPServerExceptions. Perhaps a rule failed or something else. Generally it
indicates a problem in the server that is likely retryable at some future time.
The database being down, an unavailable plugin, etc would fall into this catagory.</xsd:documentation></xsd:annotation><complexContent><extension base="tns1:SOAPException"><sequence/></extension></complexContent></complexType><complexType name="ServerStateException"><xsd:annotation><xsd:documentation>ServerStateException is thrown when a request is made at a time the
server is in a state that disallows the request. An example is if
an attempt is made to add a claim and the server is in maintenance
mode.</xsd:documentation></xsd:annotation><complexContent><extension base="tns1:SOAPServerException"><sequence/></extension></complexContent></complexType><complexType name="SOAPRetryableException"><xsd:annotation><xsd:documentation>SOAPRetryableException is the class for all exceptions that are retryable
immediately.  The primary example of this is ConcurrentDataChangeException.</xsd:documentation></xsd:annotation><complexContent><extension base="tns1:SOAPException"><sequence/></extension></complexContent></complexType><complexType name="LoginException"><xsd:annotation><xsd:documentation>Class of exceptions thrown when a user tries to log in and an authentication failure occurs.</xsd:documentation></xsd:annotation><complexContent><extension base="tns1:PermissionException"><sequence/></extension></complexContent></complexType><complexType name="EntityStateException"><xsd:annotation><xsd:documentation>Thrown when an attempt is made to manipulate an object that is in a state
that prevents the operation from being performed. An example is trying to
modify a Claim that is marked as closed.</xsd:documentation></xsd:annotation><complexContent><extension base="tns1:SOAPSenderException"><sequence/></extension></complexContent></complexType><complexType name="DuplicateKeyException"><xsd:annotation><xsd:documentation>Throws if a duplicate data exception is detected in the database.  I.e. a unique index violation.</xsd:documentation></xsd:annotation><complexContent><extension base="tns1:DataConversionException"><sequence/></extension></complexContent></complexType><complexType name="FieldConversionException"><xsd:annotation><xsd:documentation>Thrown when a data type cannot be converted into the native data type.</xsd:documentation></xsd:annotation><complexContent><extension base="tns1:DataConversionException"><sequence/></extension></complexContent></complexType><complexType name="FieldFormatException"><xsd:annotation><xsd:documentation>Thrown when the input type does not match the format specified in the metadata.  I.e. a string is too long.</xsd:documentation></xsd:annotation><complexContent><extension base="tns1:DataConversionException"><sequence/></extension></complexContent></complexType><complexType name="UnknownTypeKeyException"><xsd:annotation><xsd:documentation>Thrown when a typekey value isn't available on the server.  This exception can only
happen if the SOAP WSDL that is being used on the remote side is invalid.</xsd:documentation></xsd:annotation><complexContent><extension base="tns1:DataConversionException"><sequence/></extension></complexContent></complexType><complexType name="BatchProcessException"><xsd:annotation><xsd:documentation>SOAP Exception specific to batch process operations</xsd:documentation></xsd:annotation><complexContent><extension base="tns1:SOAPServerException"><sequence/></extension></complexContent></complexType><complexType name="AlreadyExecutedException"><complexContent><extension base="tns1:SOAPSenderException"><sequence/></extension></complexContent></complexType></schema></wsdl:types>
  <wsdl:message name="ServerStateException">
    <wsdl:part name="fault" type="tns1:ServerStateException">
<wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="RequiredFieldException">
    <wsdl:part name="fault" type="tns1:RequiredFieldException">
<wsdl:documentation>Policy period public id cannot be null</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="changeBillingMethodToAgencyBillResponse">
  </wsdl:message>
  <wsdl:message name="PermissionException">
    <wsdl:part name="fault" type="tns1:PermissionException">
<wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="BadIdentifierException">
    <wsdl:part name="fault" type="tns1:BadIdentifierException">
<wsdl:documentation>Policy period public id is not valid</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="changeBillingMethodToAgencyBillRequest">
    <wsdl:part name="policyPeriodID" type="soapenc:string">
<wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="changeBillingMethodToDirectBillResponse">
  </wsdl:message>
  <wsdl:message name="changeBillingMethodToDirectBillRequest">
    <wsdl:part name="createInvoiceForToday" type="xsd:boolean">
<wsdl:documentation/>
    </wsdl:part>
    <wsdl:part name="policyPeriodID" type="soapenc:string">
<wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:portType name="IPolicyPeriodAPI">
<wsdl:documentation>
@deprecated (Since 8.0.1) Use gw.webservice.bc.bc801.BCAPI instead
</wsdl:documentation>
    <wsdl:operation name="changeBillingMethodToAgencyBill" parameterOrder="policyPeriodID">
<wsdl:documentation>Change policy period's billing method from direct bill to agency bill
&lt;br&gt;@deprecated (Since 8.0.1) Use gw.webservice.bc.bc801.BCAPI#changeBillingMethodToAgencyBill instead.</wsdl:documentation>
      <wsdl:input message="impl:changeBillingMethodToAgencyBillRequest" name="changeBillingMethodToAgencyBillRequest">
    </wsdl:input>
      <wsdl:output message="impl:changeBillingMethodToAgencyBillResponse" name="changeBillingMethodToAgencyBillResponse">
    </wsdl:output>
      <wsdl:fault message="impl:ServerStateException" name="ServerStateException">
    </wsdl:fault>
      <wsdl:fault message="impl:RequiredFieldException" name="RequiredFieldException">
    </wsdl:fault>
      <wsdl:fault message="impl:PermissionException" name="PermissionException">
    </wsdl:fault>
      <wsdl:fault message="impl:BadIdentifierException" name="BadIdentifierException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="changeBillingMethodToDirectBill" parameterOrder="createInvoiceForToday policyPeriodID">
<wsdl:documentation>Changes the Billing Method from Agency Bill to Direct Bill.
&lt;p/&gt;
It will try to make it appear as if the original policy period was Direct Bill to begin with and deal with
reallocating commissions, moving invoice items, etc.
&lt;br&gt;@deprecated (Since 8.0.1) Use gw.webservice.bc.bc801.BCAPI#changeBillingMethodToDirectBill instead.</wsdl:documentation>
      <wsdl:input message="impl:changeBillingMethodToDirectBillRequest" name="changeBillingMethodToDirectBillRequest">
    </wsdl:input>
      <wsdl:output message="impl:changeBillingMethodToDirectBillResponse" name="changeBillingMethodToDirectBillResponse">
    </wsdl:output>
      <wsdl:fault message="impl:ServerStateException" name="ServerStateException">
    </wsdl:fault>
      <wsdl:fault message="impl:RequiredFieldException" name="RequiredFieldException">
    </wsdl:fault>
      <wsdl:fault message="impl:PermissionException" name="PermissionException">
    </wsdl:fault>
      <wsdl:fault message="impl:BadIdentifierException" name="BadIdentifierException">
    </wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="IPolicyPeriodAPISoapBinding" type="impl:IPolicyPeriodAPI">
    <wsdlsoap:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="changeBillingMethodToAgencyBill">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="changeBillingMethodToAgencyBillRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:input>
      <wsdl:output name="changeBillingMethodToAgencyBillResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
<wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="ServerStateException" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
<wsdl:documentation>Policy period public id cannot be null</wsdl:documentation>
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="RequiredFieldException" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
<wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="PermissionException" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
<wsdl:documentation>Policy period public id is not valid</wsdl:documentation>
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="BadIdentifierException" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="changeBillingMethodToDirectBill">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="changeBillingMethodToDirectBillRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:input>
      <wsdl:output name="changeBillingMethodToDirectBillResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
<wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="ServerStateException" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
<wsdl:documentation>Policy period public id cannot be null</wsdl:documentation>
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="RequiredFieldException" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
<wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="PermissionException" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
<wsdl:documentation>Policy period public id is not valid</wsdl:documentation>
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="BadIdentifierException" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="IPolicyPeriodAPIService">
<wsdl:documentation>
@deprecated (Since 8.0.1) Use gw.webservice.bc.bc801.BCAPI instead
</wsdl:documentation>
    <wsdl:port binding="impl:IPolicyPeriodAPISoapBinding" name="IPolicyPeriodAPI">
      <wsdlsoap:address location="http://dontuse.defaultvalue.com/IPolicyPeriodAPI"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>