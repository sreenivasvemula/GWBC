function FileData_Pairs(x)
{
x.t("profiler.pop","(frame)");
x.t("tag","alias");
x.t("tag","mytag");
x.t("tag","name");
x.t("tag","thus");
x.t("tag","incurs");
x.t("example","profiler");
x.t("example","frame.setpropertyvalue");
x.t("passed","mymethod");
x.t("parameter","passed");
x.t("parameter","defining");
x.t("parameter","str");
x.t("method","mymethod");
x.t("profiled","code");
x.t("available","future");
x.t("properties","counters");
x.t("provide","information");
x.t("rather","create");
x.t("just","pass-through");
x.t("counters","provide");
x.t("counters","frame");
x.t("counters","used");
x.t("create","static");
x.t("create","time");
x.t("static","final");
x.t("preserve","rather");
x.t("onto","stack");
x.t("currently","properties");
x.t("currently","executed");
x.t("key","concepts");
x.t("examination","code");
x.t("events","consider");
x.t("alias","piece");
x.t("storing","information");
x.t("try","mymethod");
x.t("creates","profiler");
x.t("current","contents");
x.t("current","thread");
x.t("text_val.select","link");
x.t("sample","code");
x.t("profilerframe","frame");
x.t("times","profiler");
x.t("mymethod","better");
x.t("mymethod","(str)");
x.t("mymethod","return");
x.t("time","current");
x.t("time","need");
x.t("slight","performance");
x.t("calls","push");
x.t("calls","pop");
x.t("sections","code");
x.t("whenever","code");
x.t("however","information");
x.t("guidewire","profiler");
x.t("guidewire","application");
x.t("mycode.java","import");
x.t("removes","profiler");
x.t("count","returned");
x.t("require","space");
x.t("link","directly");
x.t("new","frame");
x.t("new","profilertag");
x.t("want","gather");
x.t("start","finish");
x.t("among","things");
x.t("contents","profiler");
x.t("profiler","tag");
x.t("profiler","creates");
x.t("profiler","guidewire");
x.t("profiler","removes");
x.t("profiler","frame");
x.t("profiler","continues");
x.t("profiler","session");
x.t("profiler","profile");
x.t("profiler","stack");
x.t("profiler","frames");
x.t("profiler","profilertag.java");
x.t("profiler","tags");
x.t("profiler","stacks");
x.t("frame","tag");
x.t("frame","onto");
x.t("frame","profiler");
x.t("frame","pushes");
x.t("frame","stack");
x.t("frame","profiler.push");
x.t("frame","information");
x.t("frame","contains");
x.t("care","using");
x.t("messsage","billingcenter");
x.t("invoked","method");
x.t("need","creating");
x.t("pushes","new");
x.t("pushes","frame");
x.t("continues","stores");
x.t("actions","correspond");
x.t("beginning","end");
x.t("guide","using");
x.t("mytag","mycode.java");
x.t("mytag","new");
x.t("mytag","profiler");
x.t("mytag","corresponds");
x.t("initialized","current");
x.t("become","cluttered");
x.t("directly","page");
x.t("text_val.focus","text_val.select");
x.t("name","example");
x.t("name","mytag");
x.t("creating","tag");
x.t("coder","pops");
x.t("functionality","stack");
x.t("no","effect");
x.t("performance","cost");
x.t("performance","information");
x.t("constructor","profilertag");
x.t("corresponds","code");
x.t("long-running","processes");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("introduces","key");
x.t("session","whenever");
x.t("parameters","sql");
x.t("rule","executed");
x.t("profile","profiler");
x.t("standard","push");
x.t("final","profilertag");
x.t("stack","current");
x.t("stack","whenever");
x.t("stack","guidewire");
x.t("stack","profiler");
x.t("stack","frame");
x.t("stack","initialized");
x.t("stack","implements");
x.t("stack","stores");
x.t("stack","push");
x.t("stack","reflect");
x.t("stack","otherwise");
x.t("gather","performance");
x.t("string","parameter");
x.t("int","ret");
x.t("record","sql");
x.t("defining","profilertag");
x.t("thread","profiler");
x.t("thread","call");
x.t("pass-through","calling");
x.t("frames","profiler");
x.t("frames","hold");
x.t("frames","instances");
x.t("frames","stacks");
x.t("error","occurred");
x.t("display","become");
x.t("finally","profiler.pop");
x.t("hold","user-defined");
x.t("hold","memory");
x.t("respectively","piece");
x.t("gw.api.profiler.profiler","profilerframe");
x.t("(profilertag.mytag)","try");
x.t("(profilertag.mytag)","pushes");
x.t("gw.api.profiler.profilertag","class");
x.t("feature","storing");
x.t("space","storage");
x.t("guidewire_selectall","var");
x.t("cost","profiler");
x.t("cause","display");
x.t("function","guidewire_selectall");
x.t("better","create");
x.t("profiling","information");
x.t("implements","standard");
x.t("represents","sections");
x.t("represents","profiler");
x.t("user-defined","properties");
x.t("processes","hold");
x.t("push","profiler");
x.t("push","pop");
x.t("stores","frame");
x.t("stores","profiling");
x.t("row","count");
x.t("cluttered","require");
x.t("things","record");
x.t("returned","rule");
x.t("(str)","finally");
x.t("(str)","frame.setcountervalue");
x.t("piece","code");
x.t("calling","pop");
x.t("code","currently");
x.t("code","calls");
x.t("code","guidewire");
x.t("code","start");
x.t("code","invoked");
x.t("code","introduces");
x.t("code","represents");
x.t("code","represented");
x.t("profilertag.java","profilertag");
x.t("executed","parameters");
x.t("executed","forth");
x.t("executed","code");
x.t("forth","note");
x.t("correspond","beginning");
x.t("end","respectively");
x.t("return","value");
x.t("return","ret");
x.t("thus","time");
x.t("memory","runtime");
x.t("frame.setcountervalue","return");
x.t("pops","profiler");
x.t("whose","code");
x.t("occurred","messsage");
x.t("pop","profiler");
x.t("pop","actions");
x.t("pop","functionality");
x.t("consider","example");
x.t("instances","gw.api.profiler.profilertag");
x.t("instances","gw.api.profiler.profilerframe");
x.t("instances","gw.api.profiler.profilerstack");
x.t("tools","guidewire");
x.t("profiler.push","(profilertag.mytag)");
x.t("value","currently");
x.t("represented","profiler");
x.t("reflect","profiler");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("specific","thread");
x.t("specific","invocation");
x.t("invocation","profiled");
x.t("import","gw.api.profiler.profiler");
x.t("gw.api.profiler.profilerframe","properties");
x.t("ret","mymethod");
x.t("ret","coder");
x.t("takes","string");
x.t("exercise","care");
x.t("page","error");
x.t("str","int");
x.t("information","available");
x.t("information","parameter");
x.t("information","however");
x.t("information","cause");
x.t("information","code");
x.t("information","specific");
x.t("information","corresponding");
x.t("information","system");
x.t("tags","profiler");
x.t("tags","frames");
x.t("tags","represents");
x.t("tags","whose");
x.t("tags","instances");
x.t("profilertag","preserve");
x.t("profilertag","mytag");
x.t("profilertag","name");
x.t("profilertag","takes");
x.t("future","examination");
x.t("application","want");
x.t("runtime","profiler");
x.t("stacks","guidewire");
x.t("stacks","profiler");
x.t("stacks","function");
x.t("stacks","instances");
x.t("stacks","following");
x.t("finish","times");
x.t("billingcenter","system");
x.t("billingcenter","server");
x.t("administration","guide");
x.t("note","exercise");
x.t("otherwise","call");
x.t("call","no");
x.t("call","profiler.push");
x.t("system","events");
x.t("system","administration");
x.t("following","sample");
x.t("corresponding","specific");
x.t("used","among");
x.t("storage","long-running");
x.t("using","feature");
x.t("using","billingcenter");
x.t("understanding","guidewire");
x.t("class","constructor");
x.t("gw.api.profiler.profilerstack","profiler");
x.t("similarly","profiler.pop");
x.t("(frame)","just");
x.t("(frame)","profiler");
x.t("incurs","slight");
x.t("sql","row");
x.t("sql","executed");
x.t("var","text_val=eval");
x.t("effect","similarly");
x.t("server","tools");
x.t("concepts","understanding");
x.t("contains","information");
x.t("frame.setpropertyvalue","parameter");
}
