function FileData_Pairs(x)
{
x.t("decrease","number");
x.t("searching","work");
x.t("active","note");
x.t("active","work");
x.t("active","server");
x.t("available","checkedout");
x.t("available","work");
x.t("parameter","config.xml");
x.t("possible","reduce");
x.t("properties","registry");
x.t("version","work-queue.xml");
x.t("receives","no");
x.t("prepended","string");
x.t("wakes","up");
x.t("studio","configuration");
x.t("integration","guide");
x.t("description","workqueueclass");
x.t("description","instances");
x.t("create","default");
x.t("workers","active");
x.t("workers","create");
x.t("workers","queue");
x.t("workers","configured");
x.t("workers","specific");
x.t("workers","work-queue.xml");
x.t("workers","run");
x.t("workers","except");
x.t("nteger","throttleinterval=");
x.t("required","workqueueclass");
x.t("required","progressinterval");
x.t("instance","batch");
x.t("instance","progressinterval");
x.t("always","creates");
x.t("10","env");
x.t("periodically","checks");
x.t("improve","performance");
x.t("batches","longer");
x.t("reverting","available");
x.t("derived","gosu");
x.t("creates","single");
x.t("creates","least");
x.t("creates","additional");
x.t("uses","value");
x.t("until","configured");
x.t("until","number");
x.t("text_val.select","link");
x.t("batch","items");
x.t("batch","sizes");
x.t("batch","processing");
x.t("batch","processes");
x.t("batch","server");
x.t("workqueueclass","required");
x.t("workqueueclass","guidewire-provided");
x.t("times","billingcenter");
x.t("change","exception");
x.t("retry","count");
x.t("time","entire");
x.t("time","worker");
x.t("time","progressinterval");
x.t("time","process");
x.t("time","milliseconds");
x.t("orphans","billingcenter");
x.t("throttleinterval","optional");
x.t("throttleinterval","positive");
x.t("sleeps","value");
x.t("regardless","workers");
x.t("down","workers");
x.t("queue","workers");
x.t("queue","no");
x.t("queue","attribute");
x.t("queue","logretryablecdcesatdebuglevel");
x.t("queue","configuration");
x.t("queue","specifying");
x.t("queue","classes");
x.t("queue","billingcenter");
x.t("queue","work");
x.t("queue","exhausted");
x.t("queue","operate");
x.t("queue","class");
x.t("queue","per");
x.t("queue","generally");
x.t("queue","specify");
x.t("guidewire","studio");
x.t("guidewire","recommends");
x.t("guidewire","generally");
x.t("listed","base");
x.t("exceeds","progressinterval");
x.t("default","maxpollinterval");
x.t("default","value");
x.t("default","billingcenter");
x.t("default","batchsize");
x.t("count","retrylimit");
x.t("automatically","query");
x.t("checks","work");
x.t("link","directly");
x.t("want","work");
x.t("want","modify");
x.t("element","worker");
x.t("element","attributes");
x.t("servers","workers");
x.t("servers","declare");
x.t("servers","attribute");
x.t("items","available");
x.t("items","time");
x.t("items","orphans");
x.t("items","exceeds");
x.t("items","default");
x.t("items","new");
x.t("items","start");
x.t("items","check");
x.t("items","configured");
x.t("items","rapidly");
x.t("items","impact");
x.t("items","executor");
x.t("items","worker");
x.t("items","larger");
x.t("items","billingcenter");
x.t("items","milliseconds");
x.t("items","work");
x.t("items","batchsize");
x.t("items","remaining");
x.t("items","even");
x.t("new","worker");
x.t("start","up");
x.t("start","worker");
x.t("single","instance");
x.t("single","worker");
x.t("progressinterval=","decimal");
x.t("rebuild","redeploy");
x.t("includes","prepended");
x.t("messsage","billingcenter");
x.t("file","custom");
x.t("workqueue","edit");
x.t("pushes","retry");
x.t("upper","limit");
x.t("wake","up");
x.t("need","increase");
x.t("cpu","load");
x.t("finds","work");
x.t("slowest","work");
x.t("recommends","upper");
x.t("recommends","increase");
x.t("recommends","progressinterval");
x.t("guide","batch");
x.t("guide","general");
x.t("increase","decrease");
x.t("increase","maxpollinterval");
x.t("logged","error");
x.t("check","searching");
x.t("check","up");
x.t("check","work");
x.t("configuring","workers");
x.t("configuring","work");
x.t("configuring","general");
x.t("queues","improve");
x.t("queues","configuring");
x.t("queues","function");
x.t("queues","may");
x.t("queues","using");
x.t("queues","modify");
x.t("directly","page");
x.t("throttleinterval=","decimal");
x.t("declare","worker");
x.t("true","work");
x.t("detects","work");
x.t("text_val.focus","text_val.select");
x.t("wait","retrying");
x.t("no","notification");
x.t("no","non-failed");
x.t("performance","configure");
x.t("performance","negatively");
x.t("edit","work-queue.xml");
x.t("gosu","class");
x.t("guidewire-provided","batch");
x.t("guidewire-provided","work");
x.t("custom","batch");
x.t("custom","work");
x.t("base","version");
x.t("checkedout","worker");
x.t("limit","100");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("server=","string");
x.t("checking","reverting");
x.t("instances=","nteger");
x.t("instances=","teger");
x.t("completed","guidewire");
x.t("config.xml","default");
x.t("up","regardless");
x.t("up","automatically");
x.t("up","detects");
x.t("up","batchsize");
x.t("web","services");
x.t("attempts","check");
x.t("string","progressinterval=");
x.t("string","server=");
x.t("string","indicating");
x.t("string","/work-queue");
x.t("string","worker");
x.t("entire","batchsize");
x.t("concurrent","data");
x.t("subelement","attributes");
x.t("attribute","description");
x.t("thread","configuration");
x.t("thread","management");
x.t("error","level");
x.t("error","occurred");
x.t("error","considered");
x.t("config","workqueue");
x.t("maxpollinterval","60,000");
x.t("maxpollinterval","optional");
x.t("maxpollinterval","prevent");
x.t("queries","work");
x.t("sizes","efficient");
x.t("configured","workers");
x.t("configured","frequency");
x.t("configured","server");
x.t("lone","worker");
x.t("frequency","worker");
x.t("excessive","numbers");
x.t("delay","processing");
x.t("redeploy","billingcenter");
x.t("long","process");
x.t("long","milliseconds");
x.t("means","worker");
x.t("guidewire_selectall","var");
x.t("processing","time");
x.t("processing","configuring");
x.t("processing","work");
x.t("processing","item");
x.t("number","workers");
x.t("number","instances");
x.t("number","retries");
x.t("function","guidewire_selectall");
x.t("indicating","error");
x.t("may","want");
x.t("cannot","configure");
x.t("processes","derived");
x.t("processes","custom");
x.t("processes","assigned");
x.t("particular","worker");
x.t("/work-queue","work-queue");
x.t("characteristics","work");
x.t("reduce","cpu");
x.t("held","batch");
x.t("rapidly","possible");
x.t("assigned","work");
x.t("impact","performance");
x.t("important","guidewire");
x.t("enable","work");
x.t("workqueuebase","cannot");
x.t("notification","worker");
x.t("executor","creates");
x.t("executor","shuts");
x.t("executor","manages");
x.t("executor","created");
x.t("level","worker");
x.t("level","log");
x.t("non-fatal","cdce");
x.t("often","worker");
x.t("retrylimit","logged");
x.t("retrylimit","value");
x.t("retrylimit","optional");
x.t("retrylimit","workitemretrylimit");
x.t("logs","retryable");
x.t("message","includes");
x.t("least","worker");
x.t("100","instances");
x.t("(zero)","means");
x.t("environment","properties");
x.t("environment","particular");
x.t("worker","active");
x.t("worker","receives");
x.t("worker","wakes");
x.t("worker","instance");
x.t("worker","periodically");
x.t("worker","batches");
x.t("worker","guidewire");
x.t("worker","start");
x.t("worker","wake");
x.t("worker","finds");
x.t("worker","check");
x.t("worker","instances=");
x.t("worker","attempts");
x.t("worker","subelement");
x.t("worker","thread");
x.t("worker","held");
x.t("worker","worker");
x.t("worker","instances");
x.t("worker","process");
x.t("worker","takes");
x.t("worker","work");
x.t("worker","threads");
x.t("worker","subelements");
x.t("worker","server");
x.t("progressinterval","required");
x.t("progressinterval","processes");
x.t("progressinterval","greater");
x.t("progressinterval","repeated");
x.t("progressinterval","value");
x.t("progressinterval","billingcenter");
x.t("considers","work");
x.t("greater","time");
x.t("greater","processing");
x.t("repeated","checking");
x.t("logretryablecdcesatdebuglevel","true");
x.t("logretryablecdcesatdebuglevel","optional");
x.t("60,000","milliseconds");
x.t("occurred","messsage");
x.t("allots","worker");
x.t("reverts","remaining");
x.t("longer","progressinterval");
x.t("configuration","parameter");
x.t("configuration","guidewire-provided");
x.t("configuration","config");
x.t("configuration","worker");
x.t("configuration","work-queue");
x.t("configuration","structure");
x.t("instances","want");
x.t("instances","optional");
x.t("instances","reached");
x.t("instances","per");
x.t("amount","time");
x.t("work-queue","element");
x.t("work-queue","workqueueclass=");
x.t("manipulating","work");
x.t("value","important");
x.t("value","(zero)");
x.t("value","amount");
x.t("value","meaning");
x.t("value","work");
x.t("value","controls");
x.t("value","batchsize");
x.t("value","workitemretrylimit");
x.t("additional","worker");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("specific","servers");
x.t("threw","exception");
x.t("workqueueclass=","string");
x.t("process","sleeps");
x.t("process","slowest");
x.t("process","work");
x.t("process","batchsize");
x.t("exception","default");
x.t("exception","became");
x.t("exception","(cdce)");
x.t("cdce","pushes");
x.t("shuts","down");
x.t("services","integration");
x.t("takes","time");
x.t("retrying","work");
x.t("considered","non-fatal");
x.t("distribution","default");
x.t("manages","worker");
x.t("page","error");
x.t("specifying","servers");
x.t("specifying","environment");
x.t("larger","batch");
x.t("good","load");
x.t("registry","element");
x.t("configure","guidewire-provided");
x.t("configure","worker");
x.t("configure","work");
x.t("configure","attributes");
x.t("optional","times");
x.t("optional","delay");
x.t("optional","long");
x.t("optional","number");
x.t("optional","often");
x.t("optional","environment");
x.t("optional","logretryablecdcesatdebuglevel");
x.t("optional","work");
x.t("optional","server");
x.t("data","change");
x.t("query","work");
x.t("information","env");
x.t("meaning","billingcenter");
x.t("result","good");
x.t("locate","work-queue.xml");
x.t("prevent","excessive");
x.t("structure","work-queue.xml");
x.t("orphaned","work");
x.t("became","orphan");
x.t("efficient","result");
x.t("billingcenter","always");
x.t("billingcenter","uses");
x.t("billingcenter","logs");
x.t("billingcenter","considers");
x.t("billingcenter","allots");
x.t("billingcenter","reverts");
x.t("billingcenter","manipulating");
x.t("billingcenter","retries");
x.t("billingcenter","system");
x.t("billingcenter","starts");
x.t("billingcenter","reassigns");
x.t("administration","guide");
x.t("classes","listed");
x.t("milliseconds","throttleinterval");
x.t("milliseconds","wait");
x.t("milliseconds","value");
x.t("milliseconds","billingcenter");
x.t("retries","processing");
x.t("retries","work");
x.t("note","specify");
x.t("work","queue");
x.t("work","items");
x.t("work","queues");
x.t("work","item");
x.t("retryinterval","optional");
x.t("debug","level");
x.t("positive","value");
x.t("exhausted","executor");
x.t("work-queue.xml","guidewire");
x.t("work-queue.xml","rebuild");
x.t("work-queue.xml","file");
x.t("work-queue.xml","custom");
x.t("work-queue.xml","enable");
x.t("work-queue.xml","work-queue");
x.t("operate","work");
x.t("batchprocessbase","progressinterval");
x.t("immediately","retrylimit");
x.t("orphan","work");
x.t("reached","need");
x.t("numbers","queries");
x.t("controls","long");
x.t("created","per");
x.t("system","administration");
x.t("run","locate");
x.t("batchsize","10");
x.t("batchsize","worker");
x.t("batchsize","optional");
x.t("batchsize","work");
x.t("env","optional");
x.t("env","server");
x.t("starts","single");
x.t("management","executor");
x.t("env=","string");
x.t("using","web");
x.t("general","characteristics");
x.t("general","work");
x.t("class","derived");
x.t("class","workqueuebase");
x.t("class","batchprocessbase");
x.t("remaining","until");
x.t("remaining","work");
x.t("retryable","concurrent");
x.t("decimal","worker");
x.t("decimal","env=");
x.t("reassigns","orphaned");
x.t("per","work");
x.t("per","server");
x.t("modify","configuration");
x.t("modify","work-queue.xml");
x.t("negatively","retryinterval");
x.t("(cdce)","debug");
x.t("load","throttleinterval");
x.t("load","distribution");
x.t("var","text_val=eval");
x.t("non-failed","work");
x.t("log","message");
x.t("even","worker");
x.t("attributes","configuring");
x.t("attributes","specifying");
x.t("attributes","configure");
x.t("attributes","billingcenter");
x.t("attributes","work");
x.t("teger","throttleinterval=");
x.t("generally","recommends");
x.t("generally","worker");
x.t("threads","until");
x.t("threads","specific");
x.t("threads","process");
x.t("threads","server");
x.t("item","completed");
x.t("item","threw");
x.t("item","work");
x.t("item","immediately");
x.t("specify","workers");
x.t("specify","retrylimit");
x.t("specify","env");
x.t("workitemretrylimit","retrylimit");
x.t("workitemretrylimit","configuration");
x.t("subelements","work-queue");
x.t("server","start");
x.t("server","maxpollinterval");
x.t("server","lone");
x.t("server","particular");
x.t("server","executor");
x.t("server","optional");
x.t("server","information");
x.t("server","attributes");
}
