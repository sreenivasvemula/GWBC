function FileData_Pairs(x)
{
x.t("example","added");
x.t("method","method");
x.t("method","whenever");
x.t("method","needed");
x.t("method","signature");
x.t("method","name");
x.t("method","getpaidstatus");
x.t("method","determine");
x.t("method","billingcenter");
x.t("method","used");
x.t("method","except");
x.t("method","returns");
x.t("parameter","added");
x.t("parameter","getinvoicestreamperiodicityfor");
x.t("dates","example");
x.t("dates","method");
x.t("dates","custom");
x.t("dates","call");
x.t("invoicepayer","payer");
x.t("7.0.0","new");
x.t("invoice-related","plugins");
x.t("integration","changes");
x.t("integration","7.0");
x.t("related","plugins");
x.t("instance","billingcenteruses");
x.t("summary","refactor");
x.t("plugin","method");
x.t("plugin","interface");
x.t("plugin","changes");
x.t("plugin","dropped");
x.t("user","interface");
x.t("text_val.select","link");
x.t("interface","similar");
x.t("interface","takes");
x.t("payer","invoicestream");
x.t("payer","periodicity");
x.t("payer","changes");
x.t("payer","paymentplan");
x.t("change","account");
x.t("change","iinvoice");
x.t("change","implementation");
x.t("nullable","overrides");
x.t("calls","method");
x.t("what\u2019s","new");
x.t("whenever","new");
x.t("whenever","need");
x.t("needed","invoice");
x.t("link","directly");
x.t("new","method");
x.t("new","invoice");
x.t("new","changed");
x.t("new","days");
x.t("signature","getinvoicestreamperiodicityfor");
x.t("signature","remains");
x.t("refactor","code");
x.t("getexistinginvoicestreamfor","otherwise");
x.t("messsage","billingcenter");
x.t("status","column");
x.t("omits","charge");
x.t("list","anchordate");
x.t("need","compute");
x.t("twice-per-week","invoice");
x.t("guide","what\u2019s");
x.t("directly","page");
x.t("customperiodicity","list");
x.t("invoice","related");
x.t("invoice","instance");
x.t("invoice","plugin");
x.t("invoice","stream");
x.t("invoice","days");
x.t("invoice","item");
x.t("invoice","streams");
x.t("text_val.focus","text_val.select");
x.t("name","getexistingmatchinginvoicestream");
x.t("settings","invoke");
x.t("account","new");
x.t("account","invoke");
x.t("account","update");
x.t("no","overriding");
x.t("changed","method");
x.t("changed","7.0.0");
x.t("changed","integration");
x.t("changed","guide");
x.t("iinvoicestream","invoice");
x.t("getpaidstatus","added");
x.t("custom","anchor");
x.t("custom","periodicities");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("determine","display");
x.t("periodicity","customperiodicity");
x.t("periodicity","changed");
x.t("periodicity","defaultinvoicestreamperiodicity");
x.t("invoicestream","newinvoicestream");
x.t("overriding","anchor");
x.t("stream","plugin");
x.t("stream","created");
x.t("error","occurred");
x.t("billingcenteruses","new");
x.t("display","paid");
x.t("hold","nullable");
x.t("anchor","dates");
x.t("guidewire_selectall","var");
x.t("function","guidewire_selectall");
x.t("customizenewinvoicestream","method");
x.t("customizenewinvoicestream","invoicepayer");
x.t("invoicestream.updateafterchangetopayerinvoicingattribute","twice-per-week");
x.t("invoicestream.updateafterchangetopayerinvoicingattribute","instead");
x.t("instead","payer");
x.t("starting","server");
x.t("changes","integration");
x.t("changes","invoice");
x.t("changes","custom");
x.t("changes","iinvoice");
x.t("anchordate","method");
x.t("added","twice-per-week");
x.t("added","customizenewinvoicestream");
x.t("added","iinvoice");
x.t("added","getanchordatesforcustomperiodicity");
x.t("code","affected");
x.t("iiinvoicestream","plugins");
x.t("return","invoice.getpaidstatus");
x.t("iinvoice","plugin");
x.t("iinvoice","iinvoicestream");
x.t("iinvoice","iiinvoicestream");
x.t("occurred","messsage");
x.t("existing","customizenewinvoicestream");
x.t("getanchordatesforcustomperiodicity","invoicepayer");
x.t("paymentplan","periodicity");
x.t("paymentplan","paymentplan");
x.t("similar","existing");
x.t("periodicities","invoice");
x.t("periodicities","no");
x.t("periodicities","priority");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("charge","parameter");
x.t("implementation","accordingly");
x.t("takes","invoice");
x.t("page","error");
x.t("payer\u2019s","settings");
x.t("payer\u2019s","anchor");
x.t("customizeinvoicestreamafterchangetoinvoicingdates","method");
x.t("7.0","changes");
x.t("getinvoicestreamperiodicityfor","method");
x.t("getinvoicestreamperiodicityfor","invoicepayer");
x.t("plugins","change");
x.t("plugins","function");
x.t("plugins","changes");
x.t("plugins","following");
x.t("billingcenter","calls");
x.t("billingcenter","new");
x.t("column","invoices");
x.t("otherwise","method");
x.t("priority","starting");
x.t("getexistingmatchinginvoicestream","getexistinginvoicestreamfor");
x.t("created","user");
x.t("call","method");
x.t("following","invoice-related");
x.t("invoice.getpaidstatus","method");
x.t("used","integration");
x.t("used","custom");
x.t("except","omits");
x.t("compute","anchor");
x.t("paid","status");
x.t("dropped","charge");
x.t("defaultinvoicestreamperiodicity","periodicity");
x.t("overrides","payer\u2019s");
x.t("returns","payer\u2019s");
x.t("invoices","return");
x.t("invoke","invoicestream.updateafterchangetopayerinvoicingattribute");
x.t("var","text_val=eval");
x.t("days","change");
x.t("days","account");
x.t("days","added");
x.t("removed","customizeinvoicestreamafterchangetoinvoicingdates");
x.t("affected","changes");
x.t("item","plugin");
x.t("remains","removed");
x.t("streams","account");
x.t("streams","custom");
x.t("streams","hold");
x.t("update","streams");
x.t("newinvoicestream","method");
x.t("server","summary");
}
