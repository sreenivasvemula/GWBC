function  WWHBookData_AddTOCEntries(P)
{
var A=P.fN("About BillingCenter Documentation","1");
var B=A.fN("Conventions in This Document","1#2127639");
B=A.fN("Support","1#2127685");
A=P.fN("Data Model Best Practices","2");
B=A.fN("Entity Best Practices","3");
var C=B.fN("Observe General Entity Naming Conventions","3#2160842");
C=B.fN("Add a Prefix or Suffix to Entity Extensions","3#2210221");
C=B.fN("Use Singular for Field Names Except for Arrays","3#2174597");
C=B.fN("Add ID as a Suffix to Column Names for Foreign Keys","3#2211242");
B=A.fN("Typelist Best Practices","4");
C=B.fN("Observe Typelist Naming Conventions","4#2161255");
C=B.fN("Add a Suffix to New Typelists and Typecode Extensions","4#2165503");
B=A.fN("Data Model Best Practices Checklist","5");
A=P.fN("User Interface Best Practices","6");
B=A.fN("Page Configuration Best Practices","7");
C=B.fN("Modify Base PCF Files Whenever Possible","7#2192986");
C=B.fN("Add a Suffix to New PCF Files to Avoid Name Conflicts","7#2280132");
B=A.fN("Display Keys Best Practices","8");
C=B.fN("Use Display Keys to Display Text","9");
C=B.fN("Create Unique Display Keys","10");
C=B.fN("Use Placeholder Variables in Display Keys for Variable Data Only","11");
C=B.fN("Avoid Insertion of One Display Key into Another Display Key","12");
C=B.fN("Observe Display Key Naming Conventions","13");
C=B.fN("Add a Suffix to New Display Keys to Avoid Name Conflicts","14");
C=B.fN("Organize Display Keys by Page Configuration Component","15");
B=A.fN("User Interface Performance Best Practices","16");
C=B.fN("Avoid Post on Change and Client Reflection for Page Refreshes","17");
C=B.fN("Avoid Repeated Calculations of Expensive Widget Values","18");
C=B.fN("Avoid Expensive Calculations of Widget Properties","19");
C=B.fN("Use Application Permission Keys for Visibility and Editability","20");
B=A.fN("User Interface Best Practices Checklist","21");
A=P.fN("Rules Best Practices","22");
B=A.fN("Rules Naming Best Practices","23");
C=B.fN("Observe Rule Naming Conventions","24");
C=B.fN("Observe Operating System Length Restrictions on Rule Names","25");
C=B.fN("Get and Display Rule Names in Messages","26");
C=B.fN("Assign a Dedicated Rules Librarian to Manage Rule Names","27");
B=A.fN("Rules Performance Best Practices","28");
C=B.fN("Purge Unused and Obsolete Rules Before Upgrading","28#2168419");
B=A.fN("Rules Best Practices Checklist","29");
A=P.fN("Gosu Language Best Practices","30");
B=A.fN("Gosu Naming and Declaration Best Practices","31");
C=B.fN("Observe General Gosu Naming Conventions","32");
C=B.fN("Omit Type Specifications with Variable Initialization","33");
C=B.fN("Add a Suffix to Functions and Classes to Avoid Name Conflicts","34");
C=B.fN("Declare Functions Private Unless Absolutely Necessary","35");
C=B.fN("Use Public Properties Instead of Public Variables","36");
C=B.fN("Do Not Declare Static Scope for Mutable Variables","37");
C=B.fN("Use Extensions to Add Functions to Entities","38");
C=B.fN("Match Capitalization of Types, Keywords, and Symbols","39");
B=A.fN("Gosu Commenting Best Practices","40");
C=B.fN("Block Comments","41");
C=B.fN("Javadoc Comments","42");
C=B.fN("Single-line Comments","43");
C=B.fN("Trailing Comments","44");
C=B.fN("Using Comment Delimiters to Disable Code","45");
B=A.fN("Gosu Coding Best Practices","46");
C=B.fN("Use Whitespace Effectively","47");
C=B.fN("Use Parentheses Effectively","48");
C=B.fN("Use Curly Braces Effectively","49");
C=B.fN("Program Defensively Against Conditions that Can Fail","50");
C=B.fN("Omit Semicolons as Statement Delimiters","51");
C=B.fN("Use != Instead of &lt;&gt; as the Inequality Operator","52");
C=B.fN("Observe Null Safety with Equality Operators","53");
C=B.fN("Use typeis Expressions for Automatic Downcasting","54");
C=B.fN("Observe Loop Control Best Practices","55");
C=B.fN("Return from Functions as Early as Possible","56");
C=B.fN("Use Query Builder APIs instead of Find Expressions in New Code","57");
B=A.fN("Gosu Performance Best Practices","58");
C=B.fN("Use the Fastest Technique for String Concatenation","59");
C=B.fN("Consider the Order of Terms in Compound Expressions","60");
C=B.fN("Avoid Repeated Method Calls Within an Algorithm","61");
C=B.fN("Remove Constant Variables and Expressions from Loops","62");
C=B.fN("Avoid Doubly Nested Loop Constructs","63");
C=B.fN("Pull Up Multiple Performance Intensive Method Calls","64");
C=B.fN("Be Wary of Dot Notation with Object Access Paths","65");
C=B.fN("Avoid Code that Incidentally Queries the Database","66");
C=B.fN("Use Comparison Methods to Filter Queries","67");
C=B.fN("Use Count Properties on Query Builder Results and Find Queries","68");
C=B.fN("Use Activity Pattern Codes Instead of Public IDs in Comparisons","69");
C=B.fN("Do Not Instantiate Plugins for Every Execution","70");
B=A.fN("Gosu Best Practices Checklist","71");
A=P.fN("Upgrade Best Practices","72");
B=A.fN("Upgradability Best Practices","73");
C=B.fN("Add Minor Changes Directly to Base Files","74");
C=B.fN("Copy Base Files to Add Major Changes","75");
C=B.fN("Copy Base Functions to Make Major Changes","76");
C=B.fN("Switching From Minor to Major Changes","77");
B=A.fN("Upgrade Best Practices Checklist","78");
}
