function FileData_Pairs(x)
{
x.t("included","request");
x.t("example","example");
x.t("example","develop");
x.t("example","servlet");
x.t("upgrade","purposes");
x.t("com.guidewire.pl.system.server.version","uses");
x.t("token","included");
x.t("token","user");
x.t("token","req.getsession");
x.t("javax.security.auth.login.loginexception","uses");
x.t("else","//");
x.t("unamesource:usernamepasswordauthenticationsource","(usernamepasswordauthenticationsource)");
x.t("gsrc","click");
x.t("password\\t","password");
x.t("legitimacy","user");
x.t("redirecting","users");
x.t("create","entry");
x.t("create","gosu");
x.t("create","baseurlbuilderplugin");
x.t("studio","studio");
x.t("studio","project");
x.t("source","type");
x.t("source","new");
x.t("source","code");
x.t("10","create");
x.t("11","save");
x.t("name=","input");
x.t("name=","username");
x.t("name=","password");
x.t("user","name");
x.t("user","session");
x.t("user","request");
x.t("user","unauthorized");
x.t("user","null");
x.t("user","authorized");
x.t("try","login");
x.t("try","pldependencies.loginmanager.login");
x.t(".getname","known");
x.t("plugin","open");
x.t("plugin","gosu");
x.t("plugin","click");
x.t("plugin","enter");
x.t("plugin","expand");
x.t("plugin","var");
x.t("gw.plugin.security.authenticationsourcecreatorplugin","uses");
x.t("authsourcecreator","implements");
x.t("12","include");
x.t("pages","depending");
x.t("uses","com.guidewire.pl.system.server.version");
x.t("uses","javax.security.auth.login.loginexception");
x.t("uses","gw.plugin.security.authenticationsourcecreatorplugin");
x.t("uses","com.guidewire.pl.system.service.context.servicetoken");
x.t("uses","javax.security.auth.login.failedloginexception");
x.t("uses","gw.plugin.security.authenticationserviceplugin");
x.t("uses","gw.plugin.security.usernamepasswordauthenticationsource");
x.t("uses","gw.servlet.servlet");
x.t("uses","gw.plugin.plugins");
x.t("uses","com.guidewire.pl.system.dependency.pldependencies");
x.t("uses","com.guidewire.pl.web.controller.webservlet");
x.t("uses","javax.servlet.http.httpservletrequest");
x.t("uses","gw.plugin.security.authenticationsource");
x.t("uses","java.lang.illegalargumentexception");
x.t("uses","javax.servlet.http.httpservlet");
x.t("uses","gw.servlet.servletutils");
x.t("uses","gw.plugin.baseurlbuilder.ibaseurlbuilder");
x.t("uses","gw.plugin.security.authenticationserviceplugincallbackhandler");
x.t("uses","javax.servlet.http.httpservletresponse");
x.t("text_val.select","link");
x.t("sso","authentication");
x.t("/ssosaml","class");
x.t("pldependencies.commondependencies.servicetoken","servicetoken");
x.t("errors","throw");
x.t("errors","associate");
x.t("interface","click");
x.t("html","page");
x.t("basic","example");
x.t("open","studio");
x.t("open","authenticationserviceplugin.gwp");
x.t("open","authenticationsourcecreatorplugin.gwp");
x.t("open","servlets.xml");
x.t("type","p0.getclass");
x.t("type","click");
x.t("(csrf)","token");
x.t("authenticate","p0");
x.t("userpublicid","_handler.finduser");
x.t("userpublicid","==");
x.t("userpublicid","override");
x.t("_handler.finduser","(username)");
x.t("cross-site","request");
x.t("req:httpservletrequest","resp:httpservletresponse");
x.t("username\\t","username");
x.t("form","name=");
x.t("form","html");
x.t("http://localhost:8080/bc/service/ssosaml","method=");
x.t("checks","users");
x.t("back","billingcenter");
x.t("com.guidewire.pl.system.service.context.servicetoken","uses");
x.t("dopost","req");
x.t("default","plugin");
x.t("default","failure");
x.t("(usernamepasswordauthenticationsource)","p0");
x.t("(username)","userpublicid");
x.t("setcallback","p0");
x.t("text","name=");
x.t("single","sign-on");
x.t("link","directly");
x.t("new","plugin");
x.t("new","gosu");
x.t("new","failedloginexception");
x.t("new","pcf");
x.t("new","usernamepasswordauthenticationsource");
x.t("new","illegalargumentexception");
x.t("new","package");
x.t("servicetoken:servicetoken","pldependencies.commondependencies.servicetoken");
x.t("==","false");
x.t("==","null");
x.t("javax.security.auth.login.failedloginexception","class");
x.t("plugin:ibaseurlbuilder","(ibaseurlbuilder)");
x.t("gw.plugin.security.authenticationserviceplugin","uses");
x.t("messsage","billingcenter");
x.t("(false)",".setattribute");
x.t("list","example");
x.t("file","type");
x.t("file","name");
x.t("file","enter");
x.t("add","authserviceplugin.gs");
x.t("add","gosu");
x.t("add","custom");
x.t("add","authsourcecreator.gs");
x.t("add","java");
x.t("guide","additional");
x.t("credentials","forwards");
x.t("csrf","token");
x.t(".setattribute","webservlet.service_token_session_attr");
x.t("authserviceplugin.gs","gosu");
x.t("authserviceplugin.gs","authenticationserviceplugin");
x.t("authserviceplugin.gs","class");
x.t("check","errors");
x.t("remove","default");
x.t("entry","point");
x.t("entry","page");
x.t("testing","form");
x.t("configuring","single");
x.t("url","authentication");
x.t("features","redirecting");
x.t("plugin.getapplicationbaseurl","(req)");
x.t("false","create");
x.t("false","10");
x.t("false","throw");
x.t("directly","page");
x.t("true","user");
x.t("p0.getclass",".getname");
x.t("text_val.focus","text_val.select");
x.t("name","upgrade");
x.t("name","select");
x.t("name","enter");
x.t("name","username");
x.t("name","class");
x.t("definition","package");
x.t("path","string");
x.t("tasks","configuring");
x.t("gosu","plugin");
x.t("gosu","class");
x.t("resp","else");
x.t("resp","httpservletresponse");
x.t("resp","private");
x.t("resp","return");
x.t("defaultfailureep","file");
x.t("defaultfailureep","defaultfailureep");
x.t("defaultfailureep",".do");
x.t("defaultfailureep","resp.sendredirect");
x.t("authserviceplugin","implements");
x.t("billingcenterstartuppage","authenticationrequired");
x.t("ibaseurlbuilder","interface");
x.t("provider","checks");
x.t("custom","servlet");
x.t("custom","authentication");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("session","csrf");
x.t("window","expand");
x.t("httpservletresponse","var");
x.t("typeis","usernamepasswordauthenticationsource");
x.t("post","username");
x.t("develop","complicated");
x.t("string","p0");
x.t("string","path.matches");
x.t("action=","http://localhost:8080/bc/service/ssosaml");
x.t("input","action=");
x.t("input","type=");
x.t("request","used");
x.t("request","following");
x.t("request","forgery");
x.t("complicated","authentication");
x.t("@servlet","path");
x.t("store","token");
x.t("servlet","list");
x.t("servlet","class=");
x.t("error","occurred");
x.t("(sso)","authentication");
x.t("unauthorized","redirecttoerror");
x.t("unauthorized","send");
x.t("config","servlets");
x.t("config","page");
x.t("config","plugins");
x.t("invalidauthenticationsourcedata","errors");
x.t("point","default");
x.t("point","file");
x.t("point","entry");
x.t("point","location");
x.t("webservlet.service_token_session_attr","servicetoken");
x.t("class=","companyname");
x.t("gw.plugin.security.usernamepasswordauthenticationsource","uses");
x.t("gw.plugin.security.usernamepasswordauthenticationsource","class");
x.t("authsourcecreator.gs","gosu");
x.t("authsourcecreator.gs","authenticationsourcecreatorplugin");
x.t("authsourcecreator.gs","class");
x.t("reason","forth");
x.t("companyname",".auth.customauthservlet");
x.t("companyname",".auth");
x.t("gw.servlet.servlet","uses");
x.t("resp:httpservletresponse","print");
x.t(".auth.customauthservlet","add");
x.t("p0","add");
x.t("p0","typeis");
x.t("p0","httpservletrequest");
x.t("p0","authenticationserviceplugincallbackhandler");
x.t("p0","authenticationsource");
x.t("p0","var");
x.t("throw","new");
x.t("throw","invalidauthenticationsourcedata");
x.t("authenticationserviceplugin.gwp","click");
x.t("select","add");
x.t("select","entry");
x.t("authenticationsourcecreatorplugin.gwp","click");
x.t("guidewire_selectall","var");
x.t("setup","tasks");
x.t(".do","private");
x.t(".do","expand");
x.t("failedloginexception","bad");
x.t("username:string","p0.getparameter");
x.t("function","authenticate");
x.t("function","dopost");
x.t("function","setcallback");
x.t("function","guidewire_selectall");
x.t("function","redirecttoerror");
x.t("function","redirecttoindex");
x.t("function","createsourcefromhttprequest");
x.t("function","respondunauthorized");
x.t("implements","authenticationserviceplugin");
x.t("implements","authenticationsourcecreatorplugin");
x.t("method=","post");
x.t("unique","cross-site");
x.t("different","failure");
x.t("gw.plugin.plugins","uses");
x.t("private","function");
x.t("redirecttoerror","req:httpservletrequest");
x.t("redirecttoerror","req");
x.t(".auth","uses");
x.t(".auth","right-click");
x.t("index","page");
x.t("servlets","open");
x.t("password:string","p0.getparameter");
x.t("verify","legitimacy");
x.t("com.guidewire.pl.system.dependency.pldependencies","uses");
x.t("unamesource.username","var");
x.t("pcf","file");
x.t("pcf","right-click");
x.t("changes","12");
x.t("httpservletrequest","resp");
x.t("httpservletrequest","authenticationsource");
x.t("forth","configure");
x.t("com.guidewire.pl.web.controller.webservlet","uses");
x.t("javax.servlet.http.httpservletrequest","uses");
x.t("code","check");
x.t("override","function");
x.t("return","source");
x.t("return","userpublicid");
x.t("return","private");
x.t("return","//");
x.t("return","var");
x.t("plugins.get","baseurlbuilderplugin");
x.t("gw.plugin.security.authenticationsource","uses");
x.t("fully","qualified");
x.t("redirecttoindex","req:httpservletrequest");
x.t("redirecttoindex","req");
x.t("login","try");
x.t("_handler","p0");
x.t("_handler","authenticationserviceplugincallbackhandler");
x.t("known","plugin");
x.t("click","new");
x.t("click","remove");
x.t("click","select");
x.t("click","ok");
x.t("enter","authserviceplugin.gs");
x.t("enter","defaultfailureep");
x.t("enter","ibaseurlbuilder");
x.t("enter","authsourcecreator.gs");
x.t("enter","billingcenterstartuppageep");
x.t("enter","baseurlbuilderplugin");
x.t("enter","customauthservlet");
x.t("enter","com.guidewire.pl.web.render.html.baseurlbuilderimpl");
x.t("enter","package");
x.t("enter","following");
x.t("createsourcefromhttprequest","p0");
x.t("java","plugin");
x.t("java","class");
x.t("occurred","messsage");
x.t("project","window");
x.t("null","throw");
x.t("null","redirecttoindex");
x.t("null","servicetoken.authenticateduser");
x.t("entrypoints","click");
x.t("configuration","basic");
x.t("configuration","config");
x.t("configuration","pcf");
x.t("configuration","right-click");
x.t("failure","pages");
x.t("failure","reason");
x.t("failure","page");
x.t("req","true");
x.t("req","resp");
x.t("req","httpservletrequest");
x.t("pldependencies.loginmanager.login","(req)");
x.t("java.lang.illegalargumentexception","uses");
x.t("usernamepasswordauthenticationsource","==");
x.t("usernamepasswordauthenticationsource","username");
x.t("username","input");
x.t("username","unamesource.username");
x.t("username","return");
x.t("username","print");
x.t("username","password");
x.t("username","var");
x.t("qualified","package");
x.t("include","following");
x.t("additional","billingcenter");
x.t("right-click","gsrc");
x.t("right-click","entrypoints");
x.t("right-click","configuration");
x.t("right-click","package");
x.t("httpservlet","override");
x.t("(req)","defaultfailureep");
x.t("(req)","bcstartuppageep");
x.t("(req)","catch");
x.t("respondunauthorized","req:httpservletrequest");
x.t("respondunauthorized","req");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("depending","failure");
x.t("servletutils.getauthenticateduser","req");
x.t("servicetoken","==");
x.t("servicetoken","redirecttoindex");
x.t("send","default");
x.t("send","index");
x.t("extends","httpservlet");
x.t("billingcenterstartuppageep","file");
x.t("billingcenterstartuppageep","resp.sendredirect");
x.t("authenticationserviceplugincallbackhandler","override");
x.t("authenticationserviceplugincallbackhandler","_handler");
x.t("type=","text");
x.t("type=","submit");
x.t("authentication","create");
x.t("authentication","source");
x.t("authentication","configuring");
x.t("authentication","features");
x.t("authentication","provider");
x.t("authentication","function");
x.t("authentication","configure");
x.t("authentication","billingcenter");
x.t("authentication","package");
x.t("page","testing");
x.t("page","error");
x.t("page","configuration");
x.t("page","right-click");
x.t("page","expand");
x.t("page","var");
x.t("purposes","companyname");
x.t("registry","open");
x.t("registry","click");
x.t("location","billingcenterstartuppage");
x.t("location","defaultfailurepage");
x.t("configure","sso");
x.t("configure","billingcenter");
x.t("customauthservlet.gs","open");
x.t("javax.servlet.http.httpservlet","uses");
x.t("bcstartuppageep",".do");
x.t("bcstartuppageep","billingcenterstartuppageep");
x.t("sign-on","(sso)");
x.t("sign-on","authentication");
x.t("save","changes");
x.t("application","url");
x.t("expand","configuration");
x.t("path.matches","/ssosaml");
x.t("user:user","servletutils.getauthenticateduser");
x.t("baseurlbuilderplugin","name");
x.t("baseurlbuilderplugin","right-click");
x.t("baseurlbuilderplugin","var");
x.t("illegalargumentexception","authentication");
x.t("submit","/form");
x.t("submit","value=");
x.t("print","password\\t");
x.t("print","user");
x.t("print","username\\t");
x.t("authenticationsource","string");
x.t("authenticationsource","var");
x.t("authenticationrequired","false");
x.t("billingcenter","single");
x.t("billingcenter","setup");
x.t("billingcenter","billingcenter");
x.t("billingcenter","installation");
x.t("billingcenter","forwards");
x.t("billingcenter","generates");
x.t("users","credentials");
x.t("users","different");
x.t("users","application");
x.t("customauthservlet","name");
x.t("customauthservlet","extends");
x.t("ok","select");
x.t("ok","enter");
x.t("ok","click");
x.t("servicetoken.authenticateduser","respondunauthorized");
x.t("plugins","registry");
x.t("defaultfailurepage","authenticationrequired");
x.t("com.guidewire.pl.web.render.html.baseurlbuilderimpl","java");
x.t("package","create");
x.t("package","name");
x.t("package","companyname");
x.t("package","enter");
x.t("package","click");
x.t("package","package");
x.t("package","associate");
x.t("resp.sendredirect","plugin.getapplicationbaseurl");
x.t("authenticationserviceplugin","plugin");
x.t("authenticationserviceplugin","var");
x.t("authenticationsourcecreatorplugin","plugin");
x.t("authenticationsourcecreatorplugin","override");
x.t("source:authenticationsource","var");
x.t("associate","authserviceplugin.gs");
x.t("associate","authsourcecreator.gs");
x.t("used","server");
x.t("following","form");
x.t("following","configuration");
x.t("following","class");
x.t("gw.servlet.servletutils","uses");
x.t("installation","guide");
x.t("class","11");
x.t("class","authsourcecreator");
x.t("class","definition");
x.t("class","authserviceplugin");
x.t("class","custom");
x.t("class","enter");
x.t("class","click");
x.t("class","customauthservlet.gs");
x.t("class","customauthservlet");
x.t("class","including");
x.t("gw.plugin.baseurlbuilder.ibaseurlbuilder","@servlet");
x.t("//","try");
x.t("//","store");
x.t("gw.plugin.security.authenticationserviceplugincallbackhandler","uses");
x.t("catch","loginexception");
x.t("bad","user");
x.t("p0.getparameter","username");
x.t("p0.getparameter","password");
x.t("password","source");
x.t("password","input");
x.t("password","return");
x.t("password","print");
x.t("forwards","back");
x.t("forwards","users");
x.t("loginexception","respondunauthorized");
x.t("var","unamesource:usernamepasswordauthenticationsource");
x.t("var","userpublicid");
x.t("var","servicetoken:servicetoken");
x.t("var","plugin:ibaseurlbuilder");
x.t("var","defaultfailureep");
x.t("var","text_val=eval");
x.t("var","username:string");
x.t("var","password:string");
x.t("var","_handler");
x.t("var","username");
x.t("var","bcstartuppageep");
x.t("var","user:user");
x.t("var","source:authenticationsource");
x.t("javax.servlet.http.httpservletresponse","uses");
x.t("including","fully");
x.t("generates","unique");
x.t("forgery","(csrf)");
x.t("req.getsession","(false)");
x.t("value=","submit");
x.t("server","verify");
x.t("authorized","send");
x.t("(ibaseurlbuilder)","plugins.get");
x.t("servlets.xml","add");
}
