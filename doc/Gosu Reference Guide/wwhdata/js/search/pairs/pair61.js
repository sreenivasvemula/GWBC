function FileData_Pairs(x)
{
x.t("statements","example");
x.t("statements","try");
x.t("statements","syntax");
x.t("statements","finally");
x.t("statements","catch");
x.t("example","try");
x.t("example","checked");
x.t("coding","style");
x.t("cleanup","code");
x.t("cleanup","throwable");
x.t("possible","errors");
x.t("normal","error");
x.t("always","runs");
x.t("try","statements");
x.t("try","try");
x.t("try","dosomething");
x.t("try","block");
x.t("try","running");
x.t("try","print");
x.t("try","catch");
x.t("execute","catch");
x.t("program","control");
x.t("handled","catch");
x.t("text_val.select","link");
x.t("errors","may");
x.t("errors","occur");
x.t("errors","success");
x.t("errors","exceptions");
x.t("statement","occurs");
x.t("statement","throw");
x.t("statement","rethrows");
x.t("best","typical");
x.t("best","general");
x.t("inside","try");
x.t("inside","finally");
x.t("however","best");
x.t("dosomething","catch");
x.t("link","directly");
x.t("thrown","gosu");
x.t("thrown","java");
x.t("thrown","catch");
x.t("thrown","exceptions");
x.t("block","handle");
x.t("block","gosu");
x.t("block","error");
x.t("block","finally");
x.t("block","important");
x.t("block","code");
x.t("block","end");
x.t("block","value");
x.t("block","running");
x.t("block","associated");
x.t("block","even");
x.t("block","contains");
x.t("block","gets");
x.t("passes","program");
x.t("passes","argument");
x.t("catches","exceptions");
x.t("catches","serious");
x.t("messsage","gosu");
x.t("higher-level","error");
x.t("during","runtime");
x.t("add","finally");
x.t("guide","exception");
x.t("recommended","gosu");
x.t("directly","thrown");
x.t("directly","page");
x.t("handle","possible");
x.t("handle","gosu");
x.t("handle","error");
x.t("handle","ioexception");
x.t("test","catch");
x.t("text_val.focus","text_val.select");
x.t("no","error");
x.t("infrastructure","problems");
x.t("infrastructure","exceptions");
x.t("gosu","coding");
x.t("gosu","always");
x.t("gosu","execute");
x.t("gosu","passes");
x.t("gosu","allows");
x.t("gosu","simply");
x.t("gosu","reference");
x.t("gosu","code");
x.t("gosu","runs");
x.t("gosu","permit");
x.t("gosu","executes");
x.t("handler","important");
x.t("argument","catch");
x.t("perform","cleanup");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("provides","normal");
x.t("provides","handle");
x.t("continue","statements");
x.t("standard","syntax");
x.t("allows","catch");
x.t("understand","gosu");
x.t("problems","outofmemoryexception");
x.t("outofmemoryexception","assertionfailedexception");
x.t("error","thrown");
x.t("error","handler");
x.t("error","occurs");
x.t("error","cannot");
x.t("error","handling");
x.t("error","rethrown");
x.t("error","message");
x.t("error","occurred");
x.t("error","nested");
x.t("error","catch");
x.t("error","occur");
x.t("blocks","provides");
x.t("blocks","error");
x.t("supported","following");
x.t("finally","statements");
x.t("finally","block");
x.t("finally","blocks");
x.t("finally","finally");
x.t("finally","running");
x.t("finally","print");
x.t("finally","//");
x.t("occurs","try");
x.t("occurs","inside");
x.t("occurs","gosu");
x.t("syntax","try");
x.t("syntax","catch");
x.t("outer","try");
x.t("outer","finally");
x.t("outer","catch");
x.t("throw","statement");
x.t("throw","error");
x.t("throw","rethrown");
x.t("guidewire_selectall","var");
x.t("control","catch");
x.t("function","guidewire_selectall");
x.t("technique","called");
x.t("may","occur");
x.t("represents","exception");
x.t("cannot","handled");
x.t("words","catch");
x.t("instead","exception");
x.t("language","however");
x.t("handling","try");
x.t("handling","handling");
x.t("handling","code");
x.t("handling","exceptions");
x.t("rethrown","finally");
x.t("rethrown","outer");
x.t("types","exceptions");
x.t("superclass","errors");
x.t("simply","provides");
x.t("important","understand");
x.t("important","important");
x.t("important","information");
x.t("reference","guide");
x.t("code","inside");
x.t("code","during");
x.t("code","handle");
x.t("code","error");
x.t("code","value");
x.t("code","runs");
x.t("code","catch");
x.t("code","paths");
x.t("end","perform");
x.t("return","statement");
x.t("return","break");
x.t("given","block");
x.t("message","no");
x.t("java","language");
x.t("java","code");
x.t("rethrows","exception");
x.t("occurred","try");
x.t("occurred","messsage");
x.t("occurred","throw");
x.t("assertionfailedexception","best");
x.t("value","represents");
x.t("value","subclass");
x.t("value","catch");
x.t("running","try");
x.t("running","error");
x.t("running","outer");
x.t("running","throw");
x.t("running","output");
x.t("running","nested");
x.t("running","catch");
x.t("running","catching");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("throwing","exceptions");
x.t("specific","types");
x.t("specific","exceptions");
x.t("exception","thrown");
x.t("exception","higher-level");
x.t("exception","technique");
x.t("exception","handling");
x.t("exception","occurred");
x.t("exception","throwable");
x.t("exception","print");
x.t("exception","catch");
x.t("propagate","upward");
x.t("runs","statements");
x.t("runs","errors");
x.t("runs","finally");
x.t("throwable","catches");
x.t("throwable","words");
x.t("throwable","superclass");
x.t("throwable","class");
x.t("throwable","catch");
x.t("page","error");
x.t("script","handle");
x.t("output","outer");
x.t("specifying","class");
x.t("information","throwing");
x.t("information","catching");
x.t("typical","code");
x.t("runtimeexception","wrapped");
x.t("runtimeexception","object");
x.t("nested","try");
x.t("nested","finally");
x.t("nested","catch");
x.t("runtime","errors");
x.t("permit","return");
x.t("print","outer");
x.t("print","nested");
x.t("called","checked");
x.t("executes","code");
x.t("try/catch/finally","try");
x.t("try/catch/finally","function");
x.t("try/catch/finally","handling");
x.t("wrapped","runtimeexception");
x.t("subclass","runtimeexception");
x.t("subclass","ioexception");
x.t("break","continue");
x.t("following","example");
x.t("following","catches");
x.t("style","checked");
x.t("general","catch");
x.t("general","exceptions");
x.t("class","exception");
x.t("class","throwable");
x.t("//","handle");
x.t("//","perform");
x.t("catch","statements");
x.t("catch","block");
x.t("catch","test");
x.t("catch","blocks");
x.t("catch","finally");
x.t("catch","types");
x.t("catch","specific");
x.t("catch","exception");
x.t("catch","throwable");
x.t("catch","following");
x.t("catch","general");
x.t("catch","ioexception");
x.t("catch","caught");
x.t("ioexception","add");
x.t("ioexception","finally");
x.t("ioexception","instead");
x.t("ioexception","//");
x.t("occur","error");
x.t("occur","given");
x.t("occur","script");
x.t("occur","catch");
x.t("associated","try");
x.t("caught","error");
x.t("caught","finally");
x.t("caught","throw");
x.t("paths","try");
x.t("var","text_val=eval");
x.t("catching","exceptions");
x.t("success","code");
x.t("exceptions","try");
x.t("exceptions","recommended");
x.t("exceptions","directly");
x.t("exceptions","no");
x.t("exceptions","gosu");
x.t("exceptions","standard");
x.t("exceptions","supported");
x.t("exceptions","java");
x.t("exceptions","propagate");
x.t("exceptions","specifying");
x.t("exceptions","try/catch/finally");
x.t("exceptions","catch");
x.t("exceptions","serious");
x.t("exceptions","specify");
x.t("even","return");
x.t("serious","infrastructure");
x.t("contains","code");
x.t("gets","exception");
x.t("object","important");
x.t("specify","subclass");
x.t("checked","exceptions");
}
