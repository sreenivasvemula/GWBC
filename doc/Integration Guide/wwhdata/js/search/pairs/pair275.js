function FileData_Pairs(x)
{
x.t("example","intercept");
x.t("example","uses");
x.t("example","multiple");
x.t("example","path.startswith");
x.t("example","no");
x.t("example","servlet");
x.t("example","corporate");
x.t("example","servlets");
x.t("example","override");
x.t("example","resp.writer.append");
x.t("example","responds");
x.t("example","typical");
x.t("example","following");
x.t("supports","unix");
x.t("supports","adding");
x.t("mime","type");
x.t("active","session");
x.t("active","authenticated");
x.t("getbasicauthenticateduser","following");
x.t("getbasicauthenticateduser","even");
x.t("debugging","console");
x.t("root","directory");
x.t("provide","no");
x.t("provide","search");
x.t("parameter","parentheses");
x.t("method","getbasicauthenticateduser");
x.t("method","method");
x.t("method","arguments");
x.t("method","leave");
x.t("method","calls");
x.t("method","test");
x.t("method","name");
x.t("method","creating");
x.t("method","determine");
x.t("method","string");
x.t("method","write");
x.t("method","throw");
x.t("method","return");
x.t("method","actual");
x.t("method","dowork");
x.t("method","main");
x.t("method","implementation");
x.t("method","takes");
x.t("method","information");
x.t("method","called");
x.t("method","cases");
x.t("method","returns");
x.t("method","pass");
x.t("method","forces");
x.t("method","gets");
x.t("properties","request");
x.t("token","method");
x.t("token","user");
x.t("token","represents");
x.t("creation","new");
x.t("available","http");
x.t("-------------","//");
x.t("serialization","deserialization");
x.t("pattern","intercept");
x.t("pattern","test");
x.t("pattern","servlet");
x.t("pattern","first");
x.t("pattern","matching");
x.t("dos","filename");
x.t("shares","application");
x.t("managing","authentication");
x.t("annotation","line");
x.t("annotation","constructor");
x.t("annotation","implementing");
x.t("annotation","pass");
x.t("every","character");
x.t("full","regular");
x.t("full","documentation");
x.t("console","//print");
x.t("shown","earlier");
x.t("shown","previous");
x.t("integration","guide");
x.t("integration","topics");
x.t("built-in","object");
x.t("authenticating","dangerous");
x.t("contact","guidewire");
x.t("create","basic");
x.t("create","return");
x.t("create","mycompany.test.testingservlet");
x.t("refer","sun");
x.t("table","summarizes");
x.t("description","method");
x.t("currently","logged");
x.t("{user.displayname}","\\n");
x.t("studio","create");
x.t("studio","classes");
x.t("always","check");
x.t("always","case");
x.t("resp.contenttype","text/plain");
x.t("binary","data");
x.t("source","credentials");
x.t("source","code");
x.t("source","authentication");
x.t("httpservletresponse.sc_unauthorized","unauthorized");
x.t("httpservletresponse.sc_unauthorized","abstract");
x.t("key","available");
x.t("key","exists");
x.t("key","created");
x.t("required","request");
x.t("required","//");
x.t("arguments","constructors");
x.t("arguments","existing");
x.t("regular","expressions");
x.t("regular","expression");
x.t("void","resp.setheader");
x.t("intercept","urls");
x.t("intercept","following");
x.t("user","currently");
x.t("user","user");
x.t("user",".displayname");
x.t("user","assert");
x.t("user","==");
x.t("user","testing");
x.t("user","url");
x.t("user","name");
x.t("user","gw.servlet.servletutils.getbasicauthenticateduser");
x.t("user","session");
x.t("user","gw.servlet.servletutils.getauthenticateduser");
x.t("user","cannot");
x.t("user","null");
x.t("user","authentication");
x.t("user","tool");
x.t("user","result");
x.t("user","exited");
x.t("user","//");
x.t("user","password");
x.t("user","succeeds");
x.t("user","object");
x.t("questions","server");
x.t("http://docs.oracle.com/javaee/6/api/javax/servlet/http/httpservletresponse.html","doget");
x.t("testingservlet","extends");
x.t("try","user");
x.t("try","http");
x.t("reaches","user");
x.t("topic","register");
x.t("abstractbasicauthenticationservlet","authenticates");
x.t("abstractbasicauthenticationservlet","class");
x.t("secure","area\\");
x.t("subdirectories","example");
x.t("uses","regular");
x.t("uses","standard");
x.t("uses","gw.servlet.servlet");
x.t("uses","javax.servlet.http.httpservletrequest");
x.t("uses","gw.api.util.logger");
x.t("uses","javax.servlet.http.httpservlet");
x.t("uses","javax.servlet.http.httpservletresponse");
x.t("line","http");
x.t("line","class");
x.t("pages","http://docs.oracle.com/javaee/6/api/javax/servlet/http/httpservletrequest.html");
x.t("text_val.select","link");
x.t("points","custom");
x.t("configurable","url");
x.t("support","single");
x.t("support","http");
x.t("support","creating");
x.t("support","three");
x.t("support","important");
x.t("support","using");
x.t("register","servlet");
x.t("highly","flexible");
x.t(".displayname","//");
x.t(".displayname","catch");
x.t("early","authentication");
x.t("provided","primarily");
x.t("leave","method");
x.t("displays","following");
x.t("customer","support");
x.t("basic","user");
x.t("basic","auth");
x.t("basic","servlet");
x.t("basic","headers");
x.t("basic","design");
x.t("basic","return");
x.t("basic","realm=\\");
x.t("basic","authentication");
x.t("basic","log");
x.t("wildcard","support");
x.t("wildcard","syntax");
x.t("type","status");
x.t("type","@servlet");
x.t("type","authentication");
x.t("response.contenttype","text/plain");
x.t("change","port");
x.t("single-sign-on","(sso)");
x.t("assert","user");
x.t("authenticates","session");
x.t("authenticates","using");
x.t("owns","http");
x.t("response","user");
x.t("response","response.contenttype");
x.t("response","test");
x.t("response","base");
x.t("response","httpservletresponse");
x.t("response","sets");
x.t("response","invalid");
x.t("response","ok");
x.t("response","using");
x.t("response","object");
x.t("xmlns=","http://guidewire.com/servlet");
x.t("calls","separate");
x.t("calls","following");
x.t("time","session");
x.t("time","abstract");
x.t("authenticate","create");
x.t("authenticate","type");
x.t("authenticate","guidewire");
x.t("authenticate","billingcenter");
x.t("hierarchy","shown");
x.t("inside","billingcenter");
x.t("extend","javax.servlet.http.httpservlet");
x.t("extend","subclass");
x.t("extend","class");
x.t("trigger","servlet");
x.t("multiple","methods");
x.t("multiple","page");
x.t("multiple","character");
x.t("multiple","versions");
x.t("filenames","limited");
x.t("followed","text");
x.t("execution","reaches");
x.t("however","log");
x.t("guidewire","customer");
x.t("guidewire","recommends");
x.t("guidewire","pcf");
x.t("guidewire","authentication");
x.t("guidewire","application");
x.t("guidewire","server");
x.t("default","anyone");
x.t("default","users");
x.t("require","authentication");
x.t("protect","information");
x.t("apis","managing");
x.t("apis","full");
x.t("apis","authentication");
x.t("text","binary");
x.t("text","/test");
x.t("text","override");
x.t("property","response");
x.t("checks","//");
x.t("back","pathinfo");
x.t("link","directly");
x.t("element","references");
x.t("element","servlets.xml");
x.t("single","root");
x.t("single","page");
x.t("single","character");
x.t("start","text");
x.t("start","string");
x.t("objects","full");
x.t("new","session");
x.t("new","servlet");
x.t("speaking","billingcenter");
x.t("==","null");
x.t("translate","security");
x.t("block","parameter");
x.t("block","block");
x.t("block","path");
x.t("block","determine");
x.t("block","arbitrary");
x.t("block","takes");
x.t("block","returns");
x.t("includes","utility");
x.t("command","prompt");
x.t("hierarchies","single");
x.t("http://localhost:8080/bc/service/test1/my_magic_subfolder_one_level_down","http://localhost:8080/bc/service/test2/my_magic_subfolder_one_level_down");
x.t("http://localhost:8080/bc/service/test2/my_magic_subfolder_one_level_down","http://localhost:8080/bc/service/test3/my_magic_subfolder_one_level_down");
x.t("messsage","billingcenter");
x.t("http","basic");
x.t("http","response");
x.t("http","entry");
x.t("http","request");
x.t("http","error");
x.t("http","headers");
x.t("security","contact");
x.t("security","servlet");
x.t("security","headers");
x.t("security","warning");
x.t("file","hierarchy");
x.t("file","new");
x.t("file","hierarchies");
x.t("file","billingcenter/configuration/config/servlets.xml");
x.t("path.startswith","myprefix");
x.t("status","response");
x.t("text/plain","resp.setstatus");
x.t("text/plain","response.setstatus");
x.t("add","element");
x.t("add","servlet");
x.t("add","@servlet");
x.t("add","authentication");
x.t("substring","identified");
x.t("startswith","method");
x.t("id","stored");
x.t("id","storetoken");
x.t("beginning","call");
x.t("recommends","using");
x.t("/my_magic_subfolder_one_level_down","match");
x.t("guide","integration");
x.t("simple","response");
x.t("simple","http");
x.t("simple","gosu");
x.t("simple","web");
x.t("entry","points");
x.t("sun","javadoc");
x.t("credentials","user");
x.t("credentials","test");
x.t("credentials","getauthenticateduser");
x.t("credentials","following");
x.t("credentials","servletutils");
x.t("logged","billingcenter");
x.t("check","return");
x.t("testing","http");
x.t("remove","session");
x.t("soap","protocol");
x.t("url","pattern");
x.t("url","substring");
x.t("url","req.requesturi");
x.t("url","path");
x.t("url","http://localhost:port/bc/service/test");
x.t("url","checking");
x.t("url","string");
x.t("url","entire");
x.t("url","syntax");
x.t("url","define");
x.t("url","whether");
x.t("url","http://localhost:8080/bc/service");
x.t("url","important");
x.t("url","client");
x.t("url","substrings");
x.t("url","matches");
x.t("url","protocol");
x.t("pathpattern","string");
x.t("depends","greatly");
x.t("/test","example");
x.t("/test","req.requesturi");
x.t("/test","url");
x.t("/test","servlet");
x.t("/test","class");
x.t("doget","method");
x.t("doget","req");
x.t("doget","main");
x.t("doget","//");
x.t("mycompany.test","uses");
x.t("sure","return");
x.t("req.requesturi","{req.requesturi}");
x.t("req.requesturi","print");
x.t("req.requesturi","/cc/service/test");
x.t("/bc/service/test","reason");
x.t("directly","extend");
x.t("directly","page");
x.t("dangerous","production");
x.t("test","url");
x.t("test","session");
x.t("test","servlet");
x.t("test","against");
x.t("test","whether");
x.t("test","tool");
x.t("test","service");
x.t("true","user");
x.t("true","servlet");
x.t("true","authentication");
x.t("true","//print");
x.t("high","performance");
x.t("high","volumes");
x.t("specified","request");
x.t("summarizes","servletutils");
x.t("text_val.focus","text_val.select");
x.t("no","active");
x.t("no","built-in");
x.t("no","authentication");
x.t("no","valid");
x.t("no","inherent");
x.t("creating","basic");
x.t("name","description");
x.t("name","{user.displayname}");
x.t("name","up");
x.t("name","match");
x.t("name","word");
x.t("name","port");
x.t("name","class");
x.t("name","password");
x.t("name","super");
x.t("definition","pass");
x.t("path","every");
x.t("path","url");
x.t("path","pathinfo");
x.t("path","performance");
x.t("path","string");
x.t("path","servlet");
x.t("path","information");
x.t("path","optionally");
x.t("path","package");
x.t("pathinfo","property");
x.t("pathinfo","returns");
x.t("stored","client");
x.t("demonstrates","technique");
x.t("isauthenticationrequired","method");
x.t("isauthenticationrequired","req");
x.t("gosu","block");
x.t("gosu","servlet");
x.t("gosu","code");
x.t("gosu","class");
x.t("references","fully");
x.t("constructor","declares");
x.t("constructor","syntax");
x.t("performance","depends");
x.t("performance","high");
x.t("performance","flexible");
x.t("corresponds","different");
x.t("auth","user");
x.t("auth","session");
x.t("ends","servlet");
x.t("resp","httpservletresponse");
x.t("custom","headers");
x.t("custom","code");
x.t("base","class");
x.t("handles","multiple");
x.t("handles","startswith");
x.t("declares","servlet");
x.t("argument","example");
x.t("argument","standard");
x.t("argument","main");
x.t("part","request\u2019s");
x.t("part","matches");
x.t("enumeration","string");
x.t("trivial","servlet");
x.t("gwbc","dev-start");
x.t("http://localhost:port/bc/service/test","change");
x.t("http://localhost:port/bc/service/test","message");
x.t("gw.servlet.servletutils.getbasicauthenticateduser","(req)");
x.t("succeeded\\n","req.requesturi");
x.t("is/this/working","test");
x.t("virtual","file");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("provides","no");
x.t("boolean","annotation");
x.t("boolean","value");
x.t("boolean","//");
x.t("myprefix","servlet");
x.t("checking","code");
x.t("httpservletresponse","void");
x.t("httpservletresponse","user");
x.t("httpservletresponse","doget");
x.t("httpservletresponse","print");
x.t("httpservletresponse","//print");
x.t("httpservletresponse","//");
x.t("methods","doget");
x.t("methods","servletutils");
x.t("session","token");
x.t("session","method");
x.t("session","always");
x.t("session","key");
x.t("session","user");
x.t("session","http");
x.t("session","id");
x.t("session","auth");
x.t("session","getauthenticateduser");
x.t("session","client");
x.t("session","servicetoken");
x.t("session","authentication");
x.t("session","context");
x.t("session","correct");
x.t("going","url");
x.t("exists","calling");
x.t("parameters","method");
x.t("determine","url");
x.t("determine","work");
x.t("standard","java");
x.t("identified","your_servlet_string");
x.t("requesturi","returns");
x.t("up","query");
x.t("writer","property");
x.t("expired","httpservletrequest");
x.t("find","user");
x.t("combine","multiple");
x.t("gw.servlet.servletutils.getauthenticateduser","req");
x.t("sign","billingcenter");
x.t("web","servlets");
x.t("web","services");
x.t("web","page");
x.t("web","application");
x.t("http://guidewire.com/servlet","servlet");
x.t("search","pattern");
x.t("(httpservletresponse.sc_ok)","write");
x.t("(httpservletresponse.sc_ok)","response.writer.append");
x.t("(httpservletresponse.sc_ok)","resp.writer.append");
x.t("anyone","trigger");
x.t("attempts","authenticate");
x.t("gw.api.webservice.exception.loginexception","httpservletrequest");
x.t("integrity","questions");
x.t("integrity","carefully");
x.t("write","block");
x.t("write","http");
x.t("write","gosu");
x.t("write","servlet");
x.t("write","output");
x.t("string","annotation");
x.t("string","type");
x.t("string","change");
x.t("string","objects");
x.t("string","argument");
x.t("string","boolean");
x.t("string","combine");
x.t("string","write");
x.t("string","first");
x.t("string","/test/");
x.t("string","path.matches");
x.t("string","values");
x.t("string","contained");
x.t("string","password");
x.t("string","req.querystring");
x.t("sets","content");
x.t("pairs","login");
x.t("attempt","http");
x.t("{req.requesturi}","\\n");
x.t("empty","invalidauthentication");
x.t("entire","virtual");
x.t("/service","words");
x.t("org.apache.commons.io.filenameutils","wildcard");
x.t("requesturl","reconstructs");
x.t("extra","path");
x.t("three","methods");
x.t("problems","method");
x.t("earlier","topic");
x.t("@servlet","annotation");
x.t("@servlet","pathpattern");
x.t("@servlet","path");
x.t("@servlet","pathmatcher");
x.t("servlet","method");
x.t("servlet","shares");
x.t("servlet","create");
x.t("servlet","owns");
x.t("servlet","calls");
x.t("servlet","response");
x.t("servlet","authenticate");
x.t("servlet","extend");
x.t("servlet","default");
x.t("servlet","require");
x.t("servlet","protect");
x.t("servlet","element");
x.t("servlet","add");
x.t("servlet","url");
x.t("servlet","test");
x.t("servlet","no");
x.t("servlet","handles");
x.t("servlet","write");
x.t("servlet","string");
x.t("servlet","request");
x.t("servlet","class=");
x.t("servlet","works");
x.t("servlet","simply");
x.t("servlet","code");
x.t("servlet","override");
x.t("servlet","implementation");
x.t("servlet","responds");
x.t("servlet","authentication");
x.t("servlet","query");
x.t("servlet","tool");
x.t("servlet","successful");
x.t("servlet","package");
x.t("servlet","class");
x.t("servlet","gets");
x.t("servlet","servlets.xml");
x.t("request","response");
x.t("request","authenticate");
x.t("request","url");
x.t("request","succeeded\\n");
x.t("request","requesturl");
x.t("request","querystring");
x.t("request","headers");
x.t("request","domain");
x.t("request","servlets");
x.t("request","succeeded");
x.t("request","header");
x.t("request","following");
x.t("request","object");
x.t("querystring","returns");
x.t("failed","example");
x.t("failed","user");
x.t("failed","login");
x.t("failed","//");
x.t("legacy","support");
x.t("legacy","class");
x.t("store","session");
x.t("error","return");
x.t("error","occurred");
x.t("error","401");
x.t("prompt","gwbc");
x.t("getauthenticateduser","method");
x.t("getauthenticateduser","servlet");
x.t("(sso)","authentication");
x.t("unauthorized","http");
x.t("unauthorized","no");
x.t("todo","-------------");
x.t("javax.servlet.http","define");
x.t("class=","com.example.servlets.myservletclass");
x.t("syntax","supports");
x.t("syntax","highly");
x.t("syntax","@servlet");
x.t("syntax","syntax");
x.t("syntax","high-performance");
x.t("syntax","apache");
x.t("volumes","servlet");
x.t("req.pathinfo","add");
x.t("req.pathinfo","/test");
x.t("req.pathinfo","override");
x.t("req.pathinfo","{req.pathinfo}");
x.t("next","re-test");
x.t("feature","technique");
x.t("lowers","performance");
x.t("first","line");
x.t("first","argument");
x.t("first","call");
x.t("headers","getbasicauthenticateduser");
x.t("headers","http");
x.t("headers","name");
x.t("headers","custom");
x.t("headers","find");
x.t("headers","request");
x.t("headers","calling");
x.t("headers","return");
x.t("headers","username");
x.t("headers","returns");
x.t("headers","alternative");
x.t("gw.servlet.servlet","uses");
x.t("throw","exception");
x.t("domain","req");
x.t("reason","unauthorized");
x.t("guidewire_selectall","var");
x.t("constructors","different");
x.t("constructors","specify");
x.t("number","appropriate");
x.t("number","server");
x.t("function","doget");
x.t("function","isauthenticationrequired");
x.t("function","ends");
x.t("function","domain");
x.t("function","guidewire_selectall");
x.t("function","invalidauthentication");
x.t("approach","authentication");
x.t("approach","separate");
x.t("technique","doget");
x.t("technique","define");
x.t("filenameutils","syntax");
x.t("design","pattern");
x.t("storetoken","store");
x.t("true/false","user");
x.t("define","simple");
x.t("define","gosu");
x.t("define","servlet");
x.t("define","arbitrary");
x.t("define","extremely");
x.t("whether","servlet");
x.t("whether","existing");
x.t("whether","update");
x.t("carefully","read");
x.t("different","source");
x.t("different","cases");
x.t("against","servlet");
x.t("words","servlet");
x.t("high-performance","pattern");
x.t("expressions","annotation");
x.t("expressions","lowers");
x.t("expressions","matches");
x.t("expressions","using");
x.t("may","active");
x.t("specifies","whether");
x.t("corporate","implementation");
x.t("represents","valid");
x.t("cannot","authenticated");
x.t("private","function");
x.t("http://localhost:8080/bc/service","/test/");
x.t("servlets","provide");
x.t("servlets","xmlns=");
x.t("servlets","inside");
x.t("servlets","protect");
x.t("servlets","function");
x.t("servlets","define");
x.t("servlets","servlets");
x.t("servlets","billingcenter");
x.t("arbitrary","user");
x.t("arbitrary","gosu");
x.t("arbitrary","user/name");
x.t("arbitrary","matching");
x.t("billingcenter/configuration/config/servlets.xml","add");
x.t("unix","windows");
x.t("unix","meaning");
x.t("resp.setstatus","httpservletresponse.sc_unauthorized");
x.t("resp.setstatus","(httpservletresponse.sc_ok)");
x.t("stores","information");
x.t("accessing","/bc/service/test");
x.t("implementing","servlet");
x.t("implementing","servlets");
x.t("pcf","entrypoints");
x.t("match","multiple");
x.t("match","similar");
x.t("match","application");
x.t("match","following");
x.t("filename","syntax");
x.t("request\u2019s","url");
x.t("succeeded","req.requesturi");
x.t("www-authenticate","basic");
x.t("directory","subdirectories");
x.t("httpservletrequest","response");
x.t("httpservletrequest","resp");
x.t("httpservletrequest","boolean");
x.t("httpservletrequest","servlet");
x.t("httpservletrequest","object");
x.t("important","properties");
x.t("important","execution");
x.t("important","part");
x.t("works","although");
x.t("calling","method");
x.t("calling","dowork");
x.t("simply","echoes");
x.t("code","example");
x.t("code","studio");
x.t("code","user");
x.t("code","add");
x.t("code","high");
x.t("code","demonstrates");
x.t("code","end");
x.t("code","classes");
x.t("code","using");
x.t("code","without");
x.t("client","session");
x.t("client","already");
x.t("client","used");
x.t("client","sent");
x.t("javax.servlet.http.httpservletrequest","uses");
x.t("user/name","pairs");
x.t("end","function");
x.t("task","override");
x.t("invalid","authentication");
x.t("echoes","back");
x.t("fully","qualified");
x.t("override","doget");
x.t("override","isauthenticationrequired");
x.t("override","function");
x.t("override","following");
x.t("response.writer.append","page");
x.t("response.writer.append","(responsetext)");
x.t("return","early");
x.t("return","response");
x.t("return","true");
x.t("return","session");
x.t("return","true/false");
x.t("return","value");
x.t("return","//");
x.t("responsetext","request");
x.t("abstract","guidewire");
x.t("abstract","http");
x.t("substrings","start");
x.t("matches","method");
x.t("matches","pattern");
x.t("matches","always");
x.t("matches","servlet");
x.t("header","enumeration");
x.t("login","method");
x.t("login","problems");
x.t("login","login");
x.t("message","http");
x.t("message","request");
x.t("previous","example");
x.t("java","httpservletrequest");
x.t("java","classes");
x.t("extending","base");
x.t("parentheses","annotation");
x.t("actual","work");
x.t("documentation","class");
x.t("dev-start","however");
x.t("dev-start","test");
x.t("dowork","method");
x.t("dowork","source");
x.t("(e)","response.senderror");
x.t("realm=\\","secure");
x.t("occurred","messsage");
x.t("extremely","simple");
x.t("entrypoints","feature");
x.t("less","flexibility");
x.t("windows","filenames");
x.t("made","request");
x.t("resp.writer.append","hello");
x.t("resp.writer.append","page");
x.t("existing","session");
x.t("existing","billingcenter");
x.t("null","try");
x.t("null","attempt");
x.t("null","authentication");
x.t("null","response.senderror");
x.t("null","var");
x.t("qualified","name");
x.t("include","requesturi");
x.t("req","response");
x.t("req","true");
x.t("req","httpservletrequest");
x.t("username","string");
x.t("username","password");
x.t("gw.api.util.logger","@servlet");
x.t("similar","dos");
x.t("httpservlet","override");
x.t("main","servlet");
x.t("main","task");
x.t("main","work");
x.t("running","guidewire");
x.t("value","method");
x.t("value","specifies");
x.t("(req)","//print");
x.t("primarily","legacy");
x.t("/test/is/this/working","basic");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("implementation","uses");
x.t("implementation","single-sign-on");
x.t("implementation","empty");
x.t("responds","response.contenttype");
x.t("responds","servlet");
x.t("responds","urls");
x.t("servicetoken","timeout");
x.t("already","authenticates");
x.t("already","signed");
x.t("signed","var");
x.t("/test/","is/this/working");
x.t("/test/","incoming");
x.t("--","todo");
x.t("deserialization","done");
x.t("extends","httpservlet");
x.t("extends","abstractgwauthservlet");
x.t("extends","class");
x.t("extends","gw.servlet.abstractbasicauthenticationservlet");
x.t("computer","name");
x.t("http://docs.oracle.com/javaee/6/api/javax/servlet/http/httpservletrequest.html","http://docs.oracle.com/javaee/6/api/javax/servlet/http/httpservletresponse.html");
x.t("quickstart","server");
x.t("exception","gw.api.webservice.exception.loginexception");
x.t("{req.pathinfo}","\\n");
x.t("view","source");
x.t("invalidauthentication","return");
x.t("invalidauthentication","req");
x.t("services","soap");
x.t("authentication","example");
x.t("authentication","method");
x.t("authentication","required");
x.t("authentication","questions");
x.t("authentication","checks");
x.t("authentication","guidewire");
x.t("authentication","credentials");
x.t("authentication","going");
x.t("authentication","sign");
x.t("authentication","servlet");
x.t("authentication","failed");
x.t("authentication","legacy");
x.t("authentication","error");
x.t("authentication","headers");
x.t("authentication","private");
x.t("authentication","stores");
x.t("authentication","implementing");
x.t("authentication","calling");
x.t("authentication","extending");
x.t("authentication","main");
x.t("authentication","view");
x.t("authentication","package");
x.t("authentication","system");
x.t("authentication","style");
x.t("authentication","run");
x.t("authentication","warning");
x.t("authentication","//");
x.t("authentication","servletutils");
x.t("authentication","alternative");
x.t("read","headers");
x.t("read","implementing");
x.t("word","test");
x.t("word","/service");
x.t("takes","url");
x.t("takes","servlet");
x.t("hello","world");
x.t("although","provides");
x.t("valid","user");
x.t("valid","credentials");
x.t("expression","/my_magic_subfolder_one_level_down");
x.t("page","displays");
x.t("page","url");
x.t("page","error");
x.t("page","req.pathinfo");
x.t("page","/test/is/this/working");
x.t("page","urls");
x.t("separate","method");
x.t("separate","guidewire");
x.t("separate","web");
x.t("inherent","security");
x.t("output","example");
x.t("output","response");
x.t("output","text");
x.t("response.setstatus","(httpservletresponse.sc_ok)");
x.t("context","http");
x.t("context","write");
x.t("context","next");
x.t("context","running");
x.t("tool","supports");
x.t("tool","call");
x.t("javax.servlet.http.httpservlet","uses");
x.t("javax.servlet.http.httpservlet","register");
x.t("javax.servlet.http.httpservlet","directly");
x.t("javax.servlet.http.httpservlet","provides");
x.t("javax.servlet.http.httpservlet","@servlet");
x.t("information","http");
x.t("information","parameters");
x.t("information","data");
x.t("information","associated");
x.t("data","writer");
x.t("data","integrity");
x.t("urls","regular");
x.t("urls","start");
x.t("urls","http://localhost:8080/bc/service/test1/my_magic_subfolder_one_level_down");
x.t("urls","servlet");
x.t("urls","word");
x.t("urls","described");
x.t("query","path");
x.t("query","string");
x.t("sensitive","@servlet");
x.t("correct","credentials");
x.t("typical","design");
x.t("production","servlet");
x.t("production","code");
x.t("production","system");
x.t("/servlets","add");
x.t("meaning","symbol");
x.t("flexible","pattern");
x.t("appropriate","http");
x.t("appropriate","application");
x.t("timeout","expired");
x.t("result","user");
x.t("traditional","file");
x.t("application","shares");
x.t("application","remove");
x.t("application","test");
x.t("application","name");
x.t("application","session");
x.t("application","web");
x.t("application","define");
x.t("application","may");
x.t("application","valid");
x.t("application","context");
x.t("application","production");
x.t("application","using");
x.t("utility","class");
x.t("case","sensitive");
x.t("greatly","block");
x.t("path.matches","/test");
x.t("values","authenticate");
x.t("values","specified");
x.t("javadoc","pages");
x.t("successful","authentication");
x.t("called","abstractbasicauthenticationservlet");
x.t("called","servlet");
x.t("called","gw.servlet.servletutils");
x.t("character","match");
x.t("character","computer");
x.t("port","web");
x.t("port","number");
x.t("401","problem");
x.t("problem","accessing");
x.t("abstractgwauthservlet","support");
x.t("abstractgwauthservlet","translate");
x.t("abstractgwauthservlet","override");
x.t("print","servlet");
x.t("print","query");
x.t("described","traditional");
x.t("billingcenter","example");
x.t("billingcenter","method");
x.t("billingcenter","integration");
x.t("billingcenter","includes");
x.t("billingcenter","session");
x.t("billingcenter","servlet");
x.t("billingcenter","already");
x.t("billingcenter","application");
x.t("topics","servlets");
x.t("protocol","name");
x.t("protocol","separate");
x.t("protocol","billingcenter");
x.t("done","soap");
x.t("classes","studio");
x.t("classes","provided");
x.t("classes","package");
x.t("users","trigger");
x.t("com.example.servlets.myservletclass","/servlets");
x.t("ok","resp.contenttype");
x.t("date","time");
x.t("note","text");
x.t("cases","provide");
x.t("cases","first");
x.t("optionally","slash");
x.t("work","doget");
x.t("work","servlet");
x.t("work","billingcenter");
x.t("work","using");
x.t("exited","application");
x.t("//print","http");
x.t("//print","beginning");
x.t("//print","session");
x.t("//print","(responsetext)");
x.t("call","method");
x.t("call","configurable");
x.t("call","doget");
x.t("call","getauthenticateduser");
x.t("package","mycompany.test");
x.t("package","javax.servlet.http");
x.t("subclass","extending");
x.t("subclass","called");
x.t("real","production");
x.t("created","guidewire");
x.t("incoming","url");
x.t("system","servlets");
x.t("system","billingcenter");
x.t("system","generally");
x.t("gw.servlet.servletutils","servlet");
x.t("following","example");
x.t("following","table");
x.t("following","single");
x.t("following","simple");
x.t("following","url");
x.t("following","methods");
x.t("following","code");
x.t("following","page");
x.t("following","urls");
x.t("pathmatcher","block");
x.t("used","request");
x.t("contained","request");
x.t("run","time");
x.t("run","quickstart");
x.t("style","even");
x.t("(responsetext)","test");
x.t("(responsetext)","//");
x.t("area\\","resp.setstatus");
x.t("---------------------","return");
x.t("service","query");
x.t("using","regular");
x.t("using","type");
x.t("using","http");
x.t("using","@servlet");
x.t("using","servlet");
x.t("using","approach");
x.t("using","servletutils");
x.t("class","example");
x.t("class","refer");
x.t("class","testingservlet");
x.t("class","abstractbasicauthenticationservlet");
x.t("class","file");
x.t("class","definition");
x.t("class","corresponds");
x.t("class","session");
x.t("class","servlet");
x.t("class","extends");
x.t("class","javax.servlet.http.httpservlet");
x.t("class","called");
x.t("class","abstractgwauthservlet");
x.t("class","run");
x.t("warning","add");
x.t("warning","real");
x.t("apache","org.apache.commons.io.filenameutils");
x.t("apache","filenameutils");
x.t("symbol","matches");
x.t("//","debugging");
x.t("//","method");
x.t("//","security");
x.t("//","http");
x.t("//","sure");
x.t("//","trivial");
x.t("//","session");
x.t("//","important");
x.t("//","--");
x.t("//","read");
x.t("//","output");
x.t("//","---------------------");
x.t("//","insert");
x.t("servletutils","method");
x.t("servletutils","apis");
x.t("servletutils","session");
x.t("servletutils","code");
x.t("servletutils","class");
x.t("\\n","req.requesturi");
x.t("\\n","req.pathinfo");
x.t("\\n","//");
x.t("\\n","authenticated");
x.t("pass","arguments");
x.t("pass","gosu");
x.t("pass","arbitrary");
x.t("returns","true");
x.t("returns","part");
x.t("returns","extra");
x.t("returns","null");
x.t("returns","query");
x.t("returns","values");
x.t("returns","associated");
x.t("authenticated","try");
x.t("authenticated","user");
x.t("authenticated","session");
x.t("password","attempts");
x.t("password","string");
x.t("password","note");
x.t("password","call");
x.t("password","returns");
x.t("catch","(e)");
x.t("succeeds","authentication");
x.t("adding","http");
x.t("alternative","apis");
x.t("alternative","approach");
x.t("without","authenticating");
x.t("limited","wildcard");
x.t("associated","user");
x.t("associated","url");
x.t("world","output");
x.t("mycompany.test.testingservlet","shown");
x.t("/cc/service/test","req.pathinfo");
x.t("/cc/service/test","authenticated");
x.t("re-test","servlet");
x.t("var","user");
x.t("var","text_val=eval");
x.t("var","responsetext");
x.t("versions","constructors");
x.t("your_servlet_string","following");
x.t("flexibility","full");
x.t("javax.servlet.http.httpservletresponse","uses");
x.t("response.senderror","httpservletresponse.sc_unauthorized");
x.t("insert","main");
x.t("resp.setheader","www-authenticate");
x.t("sent","made");
x.t("even","active");
x.t("even","no");
x.t("forces","creation");
x.t("log","billingcenter");
x.t("gw.servlet.abstractbasicauthenticationservlet","override");
x.t("object","example");
x.t("object","serialization");
x.t("object","always");
x.t("object","argument");
x.t("object","httpservletresponse");
x.t("object","boolean");
x.t("object","arbitrary");
x.t("object","httpservletrequest");
x.t("object","include");
x.t("object","username");
x.t("object","warning");
x.t("object","contains");
x.t("server","command");
x.t("server","security");
x.t("server","name");
x.t("server","subclass");
x.t("specify","urls");
x.t("gets","servlet");
x.t("gets","headers");
x.t("gets","appropriate");
x.t("matching","apis");
x.t("matching","servlet");
x.t("matching","less");
x.t("matching","apache");
x.t("matching","pass");
x.t("slash","followed");
x.t("reconstructs","url");
x.t("content","mime");
x.t("servlets.xml","file");
x.t("servlets.xml","run");
x.t("generally","speaking");
x.t("update","date");
x.t("super","user");
x.t("contains","path");
x.t("req.querystring","resp.contenttype");
}
