function FileData_Pairs(x)
{
x.t("bcapi.getpolicyperiodinfo","add");
x.t("bcapi.getpolicyperiodinfo","soap");
x.t("example","populate");
x.t("example","invoice");
x.t("collapsing","due");
x.t("collapsing","invoice");
x.t("passed-in","version");
x.t("eventdate","invoice");
x.t("properties","trigger");
x.t("properties","add");
x.t("dates","external");
x.t("dates","cancellation");
x.t("method","just");
x.t("method","implement");
x.t("method","policy.isagencybill");
x.t("method","change");
x.t("method","signature");
x.t("method","during");
x.t("method","no");
x.t("method","provides");
x.t("method","changes");
x.t("method","return");
x.t("method","event");
x.t("method","getpolicyperiodinfo");
x.t("method","called");
x.t("method","billingcenter");
x.t("method","call");
x.t("method","pass");
x.t("method","gets");
x.t("discount","plugin");
x.t("discount","policy");
x.t("parameter","list");
x.t("parameter","cancellation");
x.t("parameter","policyperiod");
x.t("parameter","contains");
x.t("(theitem)",".on");
x.t("invoicepayer","collapsing");
x.t("invoicepayer","payer");
x.t("invoicepayer","add");
x.t("invoicepayer","implementation");
x.t("invoicepayer","optionally");
x.t("version","returning");
x.t("just","prior");
x.t("implement","full");
x.t("implement","ipolicyperiod");
x.t("implement","called");
x.t("full","java.util.set");
x.t("full","pay");
x.t("invoiceitempayers.assign","{myinvoiceitem}");
x.t("integration","guide");
x.t("integration","policycenter");
x.t("integration","code");
x.t("invoiceitem","invoicepayer");
x.t("invoiceitem","invoiceitem");
x.t("invoiceitem","invoiceitems");
x.t("invoiceitem","payer");
x.t("invoiceitem","next");
x.t("invoiceitem","getpayers");
x.t("create","new");
x.t("billing","method");
x.t("billing","integration");
x.t("billing","methods");
x.t("billing","plugins");
x.t("billing","object");
x.t("instance","no");
x.t("instance","invoiceitempayers");
x.t("required","method");
x.t("summary","type");
x.t("summary","api");
x.t("summary","policy");
x.t("summary","sent");
x.t("void","updatecancellationcollapsedinvoiceitemsbeforeplacement");
x.t("plugin","example");
x.t("plugin","method");
x.t("plugin","interface");
x.t("plugin","populate");
x.t("plugin","place");
x.t("plugin","function");
x.t("plugin","customize");
x.t("plugin","important");
x.t("plugin","instances");
x.t("plugin","main");
x.t("plugin","policy");
x.t("plugin","typically");
x.t("collapsed","invoice");
x.t("invoiceitems","date");
x.t("current","date");
x.t("field","means");
x.t("uses","builder-style");
x.t("uses","builder");
x.t("later","further");
x.t("policy.isagencybill","returns");
x.t("text_val.select","link");
x.t("extension","properties");
x.t("extension","property");
x.t("extension","boolean");
x.t("payer","list");
x.t("payer","invoice");
x.t("payer","account");
x.t("payer","specific");
x.t("payer","payerfor");
x.t("payer","object");
x.t("interface","provides");
x.t("tell","billingcenter");
x.t("type","invoicepayer");
x.t("type","invoiceitem");
x.t("type","list");
x.t("type","policyperiodinfo");
x.t("populate","data");
x.t("change","result");
x.t("external","integration");
x.t("external","system");
x.t("calls","method");
x.t("calls","invoiceassembler");
x.t("calls","ipolicyperiod");
x.t("calls","getcustompayersforcancellationcollapsedinvoiceitems");
x.t("owns","policy");
x.t("mappings","syntax");
x.t("mappings","first");
x.t("trigger","custom");
x.t("java.util.set","invoice");
x.t("customization","implement");
x.t("customization","plugin");
x.t("customization","payer");
x.t("property","ipolicyperiod");
x.t("default","mapping");
x.t("link","directly");
x.t("want","display");
x.t("want","separate");
x.t("items","method");
x.t("items","type");
x.t("items","during");
x.t("items","account");
x.t("items","second");
x.t("items","move");
x.t("items","collapse");
x.t("items","whose");
x.t("items","specific");
x.t("items","future");
x.t("items","billingcenter");
x.t("items","invoices");
x.t("items","object");
x.t("new","instance");
x.t("signature","void");
x.t("cancellationcollapsedate","first");
x.t("single","parameter");
x.t("messsage","billingcenter");
x.t("info","external");
x.t("able","query");
x.t("status","suppose");
x.t("list","invoiceitem");
x.t("list","invoice");
x.t("add","customization");
x.t("add","policyperiodinfo");
x.t("add","whatever");
x.t("add","replace");
x.t("add","additional");
x.t("add","data");
x.t("cancellation","method");
x.t("cancellation","returning");
x.t("cancellation","allows");
x.t("cancellation","effective");
x.t("cancellation","handling");
x.t("cancellation","collapse");
x.t("cancellation","billingcenter");
x.t("cancellation","class");
x.t("during","cancellation");
x.t("during","policy");
x.t("assign","method");
x.t("assign","invoice");
x.t("builder-style","syntax");
x.t("guide","plugins");
x.t("guide","general");
x.t("api","billing");
x.t("api","client");
x.t("api","information");
x.t("api","returns");
x.t("due","dates");
x.t("due","90");
x.t("due","policy");
x.t("updatepolicyperiodinfo","whatever");
x.t("soap","api");
x.t("policyperiodinfo","non-persistent");
x.t("policyperiodinfo","policy");
x.t("policyperiodinfo","entity");
x.t("false","policy");
x.t("directly","page");
x.t("requirements","tests");
x.t("(myinvoice)","object");
x.t("true","policy");
x.t("text_val.focus","text_val.select");
x.t("account","owns");
x.t("account","design");
x.t("account","information");
x.t("account","past");
x.t("no","return");
x.t("no","specific");
x.t("hook","implement");
x.t("hook","tell");
x.t("hook","update");
x.t("invoice","payer");
x.t("invoice","items");
x.t("invoice","item");
x.t("returning","method");
x.t("returning","during");
x.t("custom","logic");
x.t("period\u2019s","account");
x.t("argument","policyperiodinfo");
x.t("tests","required");
x.t("handles","invoice");
x.t("getitemsaffectedbybillingmethodchange","takes");
x.t("direct","bill");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("boolean","field");
x.t("provides","hook");
x.t("methods","return");
x.t("methods","getinvoiceitemsfor");
x.t("prior","placing");
x.t("further","future");
x.t("place","items");
x.t("place","invoice");
x.t("web","portal");
x.t("allows","customization");
x.t("allows","specify");
x.t("modifying","passed-in");
x.t("customizing","policy");
x.t("encapsulates","mapping");
x.t("second","parameter");
x.t("policycenter","integration");
x.t("policycenter","billingcenter");
x.t("request","summary");
x.t("effective","date");
x.t("error","occurred");
x.t("logic","add");
x.t("logic","deem");
x.t("portal","customers");
x.t("display","whether");
x.t("whatever","appropriate");
x.t("whatever","application");
x.t("{myinvoiceitem}",".to");
x.t("period","summary");
x.t("period","payer");
x.t("period","info");
x.t("period","status");
x.t("period","changing");
x.t("period","information");
x.t("period","billingcenter");
x.t("period","using");
x.t("suppose","want");
x.t("calculating","account");
x.t("syntax","invoiceitempayers.assign");
x.t("syntax","add");
x.t("syntax","invoiceitempayers");
x.t("syntax","placements.place");
x.t("next","result");
x.t("means","past");
x.t("first","parameter");
x.t("first","call");
x.t("guidewire_selectall","var");
x.t("function","guidewire_selectall");
x.t("design","usage");
x.t("placing","collapsed");
x.t("whether","assign");
x.t("whether","policy");
x.t("customize","billingcenter");
x.t("specifies","mapping");
x.t("getinvoiceitems","return");
x.t("invoiceassembler","plugin");
x.t("move","billing");
x.t("agency","bill");
x.t("bill","method");
x.t("bill","policy.isagencybill");
x.t("bill","direct");
x.t("bill","agency");
x.t("detailed","information");
x.t("instead","modifying");
x.t("instead","calculating");
x.t("invoiceitempayers","return");
x.t("invoiceitempayers","object");
x.t("replace","mappings");
x.t("non-persistent","entity");
x.t("customers","able");
x.t("handling","during");
x.t("changes","plugin");
x.t("changes","policy");
x.t("important","detailed");
x.t("calling","bcapi.getpolicyperiodinfo");
x.t("assigned","example");
x.t("code","add");
x.t("client","add");
x.t("client","calling");
x.t("collapse","during");
x.t("collapse","policy");
x.t("collapse","date");
x.t("return","full");
x.t("return","type");
x.t("return","list");
x.t("return","invoiceitempayers");
x.t("return","instead");
x.t("return","result");
x.t("primary","method");
x.t("getinvoiceitemsfor","invoicepayer");
x.t("event","date");
x.t("whose","billing");
x.t("occurred","messsage");
x.t("changing","billing");
x.t("changing","direct");
x.t("changing","agency");
x.t("ipolicyperiod","plugin");
x.t("instances","class");
x.t("90","days");
x.t("main","method");
x.t("value","soap");
x.t("value","based");
x.t("usage","syntax");
x.t("usage","invoiceitempayers");
x.t("additional","mappings");
x.t("similar","class");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("specific","requirements");
x.t("specific","invoice");
x.t("pay","discount");
x.t("implementation","getcustompayersforcancellationcollapsedinvoiceitems");
x.t("updatecancellationcollapsedinvoiceitemsbeforeplacement","list");
x.t("getpolicyperiodinfo","returns");
x.t("builder","style");
x.t("placements.place","(theitem)");
x.t("process","changing");
x.t("takes","single");
x.t("page","error");
x.t("separate","web");
x.t(".to","(myinvoicepayer)");
x.t("sequence","plugin");
x.t("information","integration");
x.t("information","summary");
x.t("information","customization");
x.t("information","api");
x.t("data","model");
x.t("query","billingcenter");
x.t("appropriate","billing");
x.t("appropriate","cancellation");
x.t("appropriate","argument");
x.t("appropriate","value");
x.t("appropriate","applying");
x.t("result","method");
x.t("result","policy");
x.t("future","invoice");
x.t("future","billingcenter");
x.t("future","following");
x.t("policyperiod","changing");
x.t("policy","plugin");
x.t("policy","cancellation");
x.t("policy","period\u2019s");
x.t("policy","period");
x.t("policy","process");
x.t("application","logic");
x.t("applyfullpaydiscount","method");
x.t("invoiceitemplacements","invoiceitemplacements");
x.t("invoiceitemplacements","class");
x.t("called","updatepolicyperiodinfo");
x.t("called","getitemsaffectedbybillingmethodchange");
x.t("called","applyfullpaydiscount");
x.t("called","invoiceitemplacements");
x.t("choose","create");
x.t("billingcenter","collapsing");
x.t("billingcenter","integration");
x.t("billingcenter","billing");
x.t("billingcenter","calls");
x.t("billingcenter","items");
x.t("billingcenter","handles");
x.t("billingcenter","provides");
x.t("billingcenter","policy");
x.t("billingcenter","immediately");
x.t("plugins","billing");
x.t("plugins","policy");
x.t("note","usage");
x.t("date","eventdate");
x.t("date","current");
x.t("date","later");
x.t("date","cancellationcollapsedate");
x.t("date","place");
x.t("date","invoiceassembler");
x.t("date","primary");
x.t("date","sequence");
x.t("two","dates");
x.t("deem","appropriate");
x.t(".on","(myinvoice)");
x.t("optionally","choose");
x.t("based","cancellation");
x.t("typically","event");
x.t("mapping","invoiceitem");
x.t("mapping","invoice");
x.t("call","method");
x.t("call","assign");
x.t("payerfor","invoiceitem");
x.t("immediately","calls");
x.t("system","properties");
x.t("system","request");
x.t("model","extension");
x.t("entity","instance");
x.t("entity","suppose");
x.t("style","syntax");
x.t("following","methods");
x.t("following","two");
x.t("general","hooks");
x.t("using","bcapi.getpolicyperiodinfo");
x.t("class","allows");
x.t("class","encapsulates");
x.t("class","called");
x.t("class","contains");
x.t("returns","false");
x.t("returns","true");
x.t("returns","account");
x.t("returns","value");
x.t("pass","list");
x.t("pass","invoice");
x.t("hooks","customizing");
x.t("past","due");
x.t("applying","full");
x.t("invoices","uses");
x.t("getpayers","return");
x.t("var","text_val=eval");
x.t("days","plugin");
x.t("days","instead");
x.t("getcustompayersforcancellationcollapsedinvoiceitems","method");
x.t("(myinvoicepayer)","note");
x.t("sent","external");
x.t("object","summary");
x.t("object","uses");
x.t("object","type");
x.t("object","specifies");
x.t("object","return");
x.t("object","similar");
x.t("object","date");
x.t("object","object");
x.t("item","getinvoiceitems");
x.t("item","assigned");
x.t("item","appropriate");
x.t("specify","whether");
x.t("gets","parameter");
x.t("contains","default");
x.t("contains","following");
x.t("update","future");
}
