function FileData_Pairs(x)
{
x.t("interfaces","access");
x.t("extensions","new");
x.t("extensions","internal");
x.t("extensions","java");
x.t("example","subpackage");
x.t("example","suppose");
x.t("example","omitted");
x.t("example","tc");
x.t("example","platform");
x.t("example","package");
x.t("example","typelist");
x.t("batchprocesstypeextconstants","package");
x.t("method","static");
x.t("method","uses");
x.t("method","resulting");
x.t("method","typelist");
x.t("method","returns");
x.t("properties","typelist");
x.t("possible","static");
x.t("exist","distinguish");
x.t("pattern","regular");
x.t("pattern","entity");
x.t("defines","base");
x.t("version","billingcenter");
x.t("tc_","prefix");
x.t("just","gosu");
x.t("rather","run");
x.t("rare","cases");
x.t("files",".tti");
x.t("extensions.bc.billing.typekey","getting");
x.t("pre-existing","entity");
x.t("integration","guide");
x.t("integration","topics");
x.t("table","describes");
x.t("table","details");
x.t("table","base");
x.t("describes","rightmost");
x.t("refer","table");
x.t("refer","row");
x.t("description","fully-qualified");
x.t("contact","default");
x.t("create","class");
x.t("static","properties");
x.t("static","property");
x.t("static","constants");
x.t("billing","contactmanager");
x.t("related","information");
x.t("ensures","code");
x.t("always","static");
x.t("subpackage","contact");
x.t("subpackage","billing");
x.t("subpackage","configurable");
x.t("subpackage","testsub");
x.t("subpackage","attribute");
x.t("subpackage","represents");
x.t("subpackage","typekey");
x.t("subpackage","platform");
x.t("subpackage","defined");
x.t("subpackage","typelist");
x.t("subpackage","class");
x.t("subpackage",".typekey");
x.t(".ttx","customer");
x.t("regular","typelists");
x.t("creates","base");
x.t("creates","typelist");
x.t("declared","example");
x.t("contexts","related");
x.t("uses","reflection");
x.t("text_val.select","link");
x.t("support","accessing");
x.t("configurable","example");
x.t("configurable","non-platform");
x.t("configurable","configuring");
x.t("configurable","extensions.properties");
x.t("extension","syntax");
x.t("extension","typelist");
x.t("tlconstants","subpackage");
x.t("everything","internal");
x.t("errors","rather");
x.t("customer","extensions");
x.t("customer","extension");
x.t("customer","typecodes");
x.t("customer","data");
x.t("customer","typelist");
x.t("type","customer");
x.t("type","name");
x.t("type","base");
x.t("type","safe");
x.t("type","several");
x.t("type","declaration");
x.t("type","defined");
x.t("type","based");
x.t("exampletype","assume");
x.t("testsub","type");
x.t("basic","pattern");
x.t("packages","customer");
x.t("extensions.bc","configurable");
x.t("time","example");
x.t("time","always");
x.t("time","gettypekey");
x.t("time","code");
x.t("gw.pl","subpackage");
x.t("however","actually");
x.t("multiple","guidewire");
x.t("extend","entity");
x.t("original",".tti");
x.t("default","subpackage");
x.t("default","platform");
x.t("default","used");
x.t("default","package_prefix");
x.t("guidewire","defines");
x.t("guidewire","creates");
x.t("guidewire","platform");
x.t("guidewire","applications");
x.t("property","method");
x.t("entities","subtype");
x.t("link","directly");
x.t("access","typecode");
x.t("differences","entity");
x.t("prefix","just");
x.t("prefix","refer");
x.t("details","terminology");
x.t("new","typelists");
x.t("getting","typecodes");
x.t("want","typecode");
x.t("among","multiple");
x.t("includes","everything");
x.t("includes","typecodes");
x.t("messsage","billingcenter");
x.t("file","configuring");
x.t("file","declares");
x.t("omits","subpackage");
x.t("wherever","possible");
x.t("need","typecode");
x.t("typecode","tc_");
x.t("typecode","static");
x.t("typecode","string");
x.t("typecode","first");
x.t("typecode","reference");
x.t("typecode","approval");
x.t("typecode","data");
x.t("typecode","values");
x.t("typecode","classes");
x.t("typecode","call");
x.t("typecode","object");
x.t("non-platform","typelists");
x.t("guide","integration");
x.t("api","exposes");
x.t("api","using");
x.t("assume","typelist");
x.t("configuring","entity");
x.t("gettypekey","method");
x.t("reflection","typecode");
x.t("directly","page");
x.t("true","typelist");
x.t("text_val.focus","text_val.select");
x.t("typelists","exist");
x.t("typelists","create");
x.t("typelists","customer");
x.t("typelists","guidewire");
x.t("typelists","typecode");
x.t("typelists","addition");
x.t("typelists","typecodes");
x.t("typelists","help");
x.t("typelists","special");
x.t("typelists","class");
x.t("name","example");
x.t("name","batchprocesstypeextconstants");
x.t("name","subpackage");
x.t("name","gw.pl");
x.t("name","typelists");
x.t("name","matches");
x.t("name","batchprocesstype");
x.t("name","batchprocesstypeconstants");
x.t("name","billingcenter");
x.t("name","entity");
x.t("name","gw.bc");
x.t("name","package_prefix");
x.t("fictional","example");
x.t("resulting","object");
x.t("tlextconstants","subpackage");
x.t("gosu","however");
x.t("declares","typelist");
x.t("base","version");
x.t("base","typecodes");
x.t("base","configuration");
x.t("base","typelist");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("exists","customer");
x.t("exists","original");
x.t("exists","guidewire");
x.t("exists","typelist");
x.t("provides","additional");
x.t("constants","ensures");
x.t("constants","extend");
x.t("constants","typecode");
x.t("constants","typekey");
x.t("mistakes","typecode");
x.t("standard","typelists");
x.t("osgi","support");
x.t("gw.pl.batchprocessing.typekey","internal");
x.t("string","value");
x.t("string","caught");
x.t("attribute","default");
x.t("attribute","exists");
x.t("attribute","specifies");
x.t("attribute","platform");
x.t("gw.pl.testsub.typekey.exampletype.tc_approval.get","type");
x.t("addition","standard");
x.t("error","occurred");
x.t("contrast","entity");
x.t("gw.bc.testsub.typekey.exampletypeconstants.tc_approval.get","type");
x.t("suppose","want");
x.t("syntax","tc");
x.t("first","reference");
x.t("affects","package");
x.t("guidewire_selectall","var");
x.t("function","guidewire_selectall");
x.t("inappropriate","comparing");
x.t("represents","subpackage");
x.t("represents","typelist");
x.t("specifies","subpackage");
x.t("whether","typelist");
x.t("contactmanager","default");
x.t("forget","call");
x.t("safe","mistakes");
x.t("cannot","validated");
x.t("subtypes","entities");
x.t("accessing","entity");
x.t("row","table");
x.t("row","typelist");
x.t("types","billingcenter");
x.t("rightmost","column");
x.t("internal","extension");
x.t("compile","errors");
x.t("compile","time");
x.t("omitted","subpackage");
x.t("gw.pl.testsub.typekey.exampletype.gettypekey","(typecodestring)");
x.t("extconstants","created");
x.t("reference","string");
x.t("reference","appropriate");
x.t("tc","gw.pl.testsub.typekey.exampletype.tc_approval.get");
x.t("tc","gw.bc.testsub.typekey.exampletypeconstants.tc_approval.get");
x.t("tc","gw.pl.testsub.typekey.exampletype.gettypekey");
x.t("tc","extensions.bc.testsub.typekey.exampletypeextconstants.tc_approval.get");
x.t("code","type");
x.t("code","known");
x.t("typekey","entityname");
x.t("typekey","object");
x.t("typecodes","contexts");
x.t("typecodes","customer");
x.t("typecodes","wherever");
x.t("typecodes","typelists");
x.t("typecodes","base");
x.t("typecodes","java");
x.t("typecodes","following");
x.t("typecodes","class");
x.t("typecodes","using");
x.t("typecodes","application-specific");
x.t("approval","fictional");
x.t("extended","billingcenter");
x.t("known","compile");
x.t("known","run");
x.t("database","row");
x.t("matches","name");
x.t("java","example");
x.t("java","default");
x.t("java","typecode");
x.t("java","api");
x.t("java","name");
x.t("java","osgi");
x.t("java","function");
x.t("java","java");
x.t("java","classes");
x.t("java","billingcenter");
x.t("java","entity");
x.t("java","class");
x.t("occurred","messsage");
x.t("batchprocesstype","package");
x.t("batchprocesstype","class");
x.t("gw.bc.batchprocessing.typekey","typelist");
x.t("configuration","multiple");
x.t("configuration","typecodes");
x.t("configuration","extended");
x.t("instances","typecodes");
x.t("similar","pattern");
x.t("value","true");
x.t("value","known");
x.t("terminology","description");
x.t("additional","typecodes");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("several","classes");
x.t("declaration","subpackage");
x.t("declaration","omits");
x.t("declaration","attribute");
x.t("exposes","interfaces");
x.t("exposes","typelists");
x.t("exposes","typelist");
x.t(".tix",".ttx");
x.t(".tix","internal");
x.t("extends","refer");
x.t("extends","undeclared");
x.t("actually","work");
x.t("tl","default");
x.t("tl","represents");
x.t("batchprocesstypeconstants","package");
x.t("represent","typecode");
x.t("subtype","pre-existing");
x.t("subtype","typelists");
x.t("subtype","database");
x.t("subtype","shared");
x.t("subtype","typelist");
x.t("page","error");
x.t("platform","defines");
x.t("platform","configurable");
x.t("platform","typelists");
x.t("platform","value");
x.t("platform","typelist");
x.t("help","billingcenter");
x.t("data","differences");
x.t("data","java");
x.t("data","model");
x.t("information","comparing");
x.t("appropriate","typecode");
x.t("appropriate","typelist");
x.t("defined","subpackage");
x.t("defined","customer");
x.t("defined","base");
x.t("shared","among");
x.t("comparing","typecodes");
x.t("comparing","entity");
x.t("values","cannot");
x.t("values","using");
x.t("fully-qualified","type");
x.t("fully-qualified","names");
x.t("called","exampletype");
x.t("(typecodestring)","entity");
x.t("classes","contrast");
x.t("classes","java");
x.t("classes","following");
x.t("classes","class");
x.t("billingcenter","integration");
x.t("billingcenter","creates");
x.t("billingcenter","provides");
x.t("billingcenter","syntax");
x.t("billingcenter","exposes");
x.t("billingcenter","overrides");
x.t("billingcenter","specify");
x.t("topics","java");
x.t("column","tl");
x.t("otherwise","customer");
x.t(".tti","customer");
x.t(".tti","file");
x.t(".tti",".tix");
x.t(".tti","platform");
x.t("based","whether");
x.t("based","typelist");
x.t("work","typecode");
x.t("applications","syntax");
x.t("applications","java");
x.t("cases","need");
x.t("package","extensions.bc.billing.typekey");
x.t("package","prefix");
x.t("package","gw.pl.batchprocessing.typekey");
x.t("package","gw.bc.batchprocessing.typekey");
x.t("package","extensions.bc.batchprocessing.typekey");
x.t("package","naming");
x.t("call","method");
x.t("created","entity");
x.t("entity","type");
x.t("entity","packages");
x.t("entity","typecode");
x.t("entity","types");
x.t("entity","instances");
x.t("entity","subtype");
x.t("entity","data");
x.t("entity","typelist");
x.t("following","table");
x.t("following","data");
x.t("used","based");
x.t("model","extensions");
x.t("model","files");
x.t("model","extension");
x.t("extensions.bc.batchprocessing.typekey","customer");
x.t("run","time");
x.t("warned","gettypekey");
x.t("special","typelists");
x.t("typelist","extensions");
x.t("typelist","example");
x.t("typelist","declared");
x.t("typelist","type");
x.t("typelist","guidewire");
x.t("typelist","name");
x.t("typelist","affects");
x.t("typelist","whether");
x.t("typelist","batchprocesstype");
x.t("typelist","declaration");
x.t("typelist","extends");
x.t("typelist","represent");
x.t("typelist","platform");
x.t("typelist","fully-qualified");
x.t("typelist","called");
x.t("typelist","classes");
x.t("typelist","class");
x.t("typelist","typelist");
x.t("class","gw.pl");
x.t("class","default");
x.t("class","includes");
x.t("class","name");
x.t("class","exists");
x.t("class","java");
x.t("class","otherwise");
x.t("class","package");
x.t("class","warned");
x.t("class","class");
x.t("class","gw.bc");
x.t("class","package_prefix");
x.t("class","contains");
x.t("using","method");
x.t("using","basic");
x.t("using","typecode");
x.t("returns","appropriate");
x.t("overrides","entity");
x.t("names","java");
x.t("extensions.bc.testsub.typekey.exampletypeextconstants.tc_approval.get","forget");
x.t("caught","compile");
x.t("var","text_val=eval");
x.t(".typekey","tlconstants");
x.t(".typekey","tlextconstants");
x.t(".typekey","tl");
x.t(".typekey","entityname");
x.t("gw.bc","subpackage");
x.t("package_prefix","subpackage");
x.t("package_prefix","extensions.bc");
x.t("naming","similar");
x.t("validated","compile");
x.t("entityname","constants");
x.t("entityname","extconstants");
x.t("entityname","billingcenter");
x.t("contains","base");
x.t("contains","typecodes");
x.t("extensions.properties","file");
x.t("application-specific","typecodes");
x.t("application-specific","class");
x.t("undeclared","default");
x.t("object","example");
x.t("object","rare");
x.t("object","inappropriate");
x.t("distinguish","subtypes");
x.t("specify","entity");
}
