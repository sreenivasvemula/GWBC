function FileData_Pairs(x)
{
x.t("example","anything");
x.t("example","assumes");
x.t("example","start");
x.t("example","queries");
x.t("example","following");
x.t("example","setting");
x.t("method","example");
x.t("method","method");
x.t("method","parameter");
x.t("method","commits");
x.t("method","create");
x.t("method","execute");
x.t("method","creates");
x.t("method","start");
x.t("method","signature");
x.t("method","includes");
x.t("method","appropriately");
x.t("method","demonstrates");
x.t("method","stop");
x.t("method","constructor");
x.t("method","perform");
x.t("method","argument");
x.t("method","internal");
x.t("method","variant");
x.t("method","startableplugincallbackhandler");
x.t("method","takes");
x.t("method","information");
x.t("method","called");
x.t("method","destroys");
x.t("method","package");
x.t("method","signatures");
x.t("method","returns");
x.t("combined","single");
x.t("parameter","callback");
x.t("parameter","stop");
x.t("transactions","gosu");
x.t("properties","desired");
x.t("construct","override");
x.t("goodbye","_callback");
x.t("version","callback");
x.t("version","however");
x.t("version","runwithnewbundle");
x.t("just","start");
x.t("anything","useful");
x.t("implement","plugin");
x.t("implement","following");
x.t("within","code");
x.t("integration","guide");
x.t("create","new");
x.t("create","bundle");
x.t("create","separate");
x.t("refer","updating");
x.t("_callback","startableplugincallbackhandler");
x.t("_callback","null");
x.t("_callback","cbh");
x.t("isstarting","boolean");
x.t("commits","block");
x.t("background","processes");
x.t("alternate","method");
x.t("alternate","version");
x.t("built-in","user");
x.t("variables","var");
x.t("callback","handler");
x.t("callback","important");
x.t("callback","handler\u2019s");
x.t("bundles","simple");
x.t("bundles","gosu");
x.t("bundles","database");
x.t("instance","//note");
x.t("instance","writable");
x.t("related","note");
x.t("likely","case");
x.t("arguments","information");
x.t("void","_callback");
x.t("void","_callback.log");
x.t("preupdate","rules");
x.t("parts","tasks");
x.t("gw.api.startable.istartableplugin","uses");
x.t("plugin","example");
x.t("plugin","method");
x.t("plugin","writing");
x.t("plugin","tasks");
x.t("plugin","modifies");
x.t("plugin","function");
x.t("plugin","implements");
x.t("plugin","code");
x.t("plugin","java");
x.t("plugin","include");
x.t("plugin","run");
x.t("plugin","including");
x.t("user","version");
x.t("user","user");
x.t("user","contexts");
x.t("user","interface");
x.t("user","entities");
x.t("user","name");
x.t("user","second");
x.t("user","define");
x.t("user","code");
x.t("user","null");
x.t("user","depending");
x.t("user","context");
x.t("user","entity");
x.t("user","associated");
x.t("current","user");
x.t("current","state");
x.t("current","(writable)");
x.t("current","bundle");
x.t("current","billingcenter");
x.t("execute","method");
x.t("execute","execute");
x.t("execute","whose");
x.t("creates","new");
x.t("prepared","current");
x.t("uses","gw.api.startable.istartableplugin");
x.t("uses","property");
x.t("uses","gw.api.startable.startableplugincallbackhandler");
x.t("uses","gw.api.startable.startablepluginstate");
x.t("contexts","no");
x.t("contexts","startable");
x.t("shows","simple");
x.t("remote","system");
x.t("text_val.select","link");
x.t("interface","implement");
x.t("interface","user");
x.t("interface","uses");
x.t("interface","following");
x.t("state","user");
x.t("state","plugin");
x.t("state","property");
x.t("state","started");
x.t("state","startablepluginstate");
x.t("state","code");
x.t("state","variable");
x.t("look","simple");
x.t("support","blocks");
x.t("listener","start");
x.t("listener","stop");
x.t("listener","code");
x.t("listener","similar");
x.t("listener","defined");
x.t("type","in-line");
x.t("type","startableplugincallbackhandler");
x.t("thing","information");
x.t("basic","structure");
x.t("isshuttingdown","boolean");
x.t("non-null","values");
x.t("however","alternate");
x.t("however","start");
x.t("down","false");
x.t("down","true");
x.t("property","state");
x.t("property","results");
x.t("property","definition");
x.t("property","accessor");
x.t("property","writable");
x.t("property","startable");
x.t("queue","listener");
x.t("entities","current");
x.t("entities","sets");
x.t("entities","database");
x.t("assumes","listener");
x.t("gw.api.startableplugin","uses");
x.t("link","directly");
x.t("new","entities");
x.t("new","jms");
x.t("new","class");
x.t("start","method");
x.t("start","listener");
x.t("start","request");
x.t("start","method\u2019s");
x.t("start","service");
x.t("start","cbh");
x.t("single","variable");
x.t("jms","queue");
x.t("signature","execute");
x.t("signature","gw.transaction.transaction.runwithnewbundle");
x.t("block","changes");
x.t("block","runs");
x.t("block","special");
x.t("block","run");
x.t("block","anonymous");
x.t("block","pass");
x.t("transaction.getcurrent","current");
x.t("includes","boolean");
x.t("gw.transaction.transaction.current","//");
x.t("indirectly","runs");
x.t("messsage","billingcenter");
x.t("appropriately","state");
x.t("need","create");
x.t("need","user");
x.t("need","different");
x.t("need","reference");
x.t("need","commit");
x.t("indicates","whether");
x.t("//note","need");
x.t("typecode","typelist");
x.t("add","method");
x.t("add","current");
x.t("add","entity");
x.t("bundle.add","(e)");
x.t("complete","simple");
x.t("guide","just");
x.t("guide","important");
x.t("guide","information");
x.t("guide","plugins");
x.t("guide","note");
x.t("simple","example");
x.t("simple","gosu");
x.t("simple","//");
x.t("simple","startable");
x.t("results","gosu");
x.t("results","query");
x.t("due","plugin");
x.t("false","start");
x.t("false","stop");
x.t("remember","add");
x.t("writing","startable");
x.t("directly","support");
x.t("directly","indirectly");
x.t("directly","page");
x.t("_state","started");
x.t("_state","startablepluginstate");
x.t("_state","startablepluginstate.stopped");
x.t("_state","override");
x.t("_state","stopped");
x.t("_state","//");
x.t("true","server");
x.t("desired","result");
x.t("text_val.focus","text_val.select");
x.t("definition","combined");
x.t("definition","property");
x.t("definition","shortcut");
x.t("definition","earlier");
x.t("definition","var");
x.t("no","built-in");
x.t("no","arguments");
x.t("simplest","method");
x.t("simplest","version");
x.t("name","simple");
x.t("name","actual");
x.t("demonstrates","basic");
x.t("creating","block");
x.t("stop","method");
x.t("stop","isshuttingdown");
x.t("stop","request");
x.t("stop","whatever");
x.t("stop","service");
x.t("constructor","start");
x.t("constructor","called");
x.t("handler","method");
x.t("handler","type");
x.t("gosu","block");
x.t("gosu","blocks");
x.t("gosu","reference");
x.t("tasks","method");
x.t("tasks","specific");
x.t("custom","listener");
x.t("argument","gosu");
x.t("argument","runwithnewbundle");
x.t("(writable)","bundle");
x.t("perform","startable");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("methods","start");
x.t("alternatively","combine");
x.t("shortcut","keyword");
x.t("modifies","entity");
x.t("boolean","void");
x.t("boolean","variable");
x.t("updating","entity");
x.t("useful","start");
x.t("combine","variable");
x.t("up","false");
x.t("up","code");
x.t("write","new");
x.t("accessor","(get)");
x.t("accessor","function");
x.t("accessor","show");
x.t("started","start");
x.t("started","stop");
x.t("started","stopped");
x.t("started","administration");
x.t("started","_callback.log");
x.t("started","additionally");
x.t("sets","state");
x.t("sets","property");
x.t("sets","up");
x.t("string","user");
x.t("in-line","function");
x.t("defining","startable");
x.t("earlier","class");
x.t("rely","non-null");
x.t("second","method");
x.t("(get)","function");
x.t("simplify","code");
x.t("request","comes");
x.t("error","occurred");
x.t("blocks","implement");
x.t("blocks","gosu");
x.t("queries","user");
x.t("whatever","background");
x.t("hold","current");
x.t("minimum","start");
x.t("affects","entity");
x.t("guidewire_selectall","var");
x.t("_callback.execute","//");
x.t("_callback.execute","var");
x.t("function","state");
x.t("function","look");
x.t("function","start");
x.t("function","gosu");
x.t("function","stop");
x.t("function","guidewire_selectall");
x.t("function","override");
x.t("implements","custom");
x.t("implements","istartableplugin");
x.t("startablepluginstate","state");
x.t("startablepluginstate","return");
x.t("startablepluginstate","value");
x.t("define","minimum");
x.t("define","private");
x.t("private","variables");
x.t("private","variable");
x.t("startablepluginstate.stopped","//");
x.t("startablepluginstate.stopped","additionally");
x.t("startablepluginstate.stopped","var");
x.t("cannot","gosu");
x.t("whether","server");
x.t("processes","listeners");
x.t("different","parts");
x.t("different","users");
x.t("language","directly");
x.t("starting","true");
x.t("starting","up");
x.t("//variable","definition");
x.t("gw.api.startable.startableplugincallbackhandler","uses");
x.t("keyword","simplify");
x.t("internal","state");
x.t("internal","variable");
x.t("real-world","startable");
x.t("changes","entity");
x.t("listeners","started");
x.t("variant","pass");
x.t("gw.transaction.transaction.runwithnewbundle","bundle");
x.t("important","java");
x.t("important","startable");
x.t("code","prepared");
x.t("code","start");
x.t("code","block");
x.t("code","transaction.getcurrent");
x.t("code","_state");
x.t("code","directly");
x.t("code","combine");
x.t("code","affects");
x.t("code","specific");
x.t("code","special");
x.t("code","run");
x.t("code","startable");
x.t("code","threads");
x.t("reference","current");
x.t("reference","guide");
x.t("override","property");
x.t("override","function");
x.t("return","_state");
x.t("return","private");
x.t("return","result");
x.t("tracks","started");
x.t("startableplugincallbackhandler","construct");
x.t("startableplugincallbackhandler","isstarting");
x.t("startableplugincallbackhandler","callback");
x.t("startableplugincallbackhandler","code");
x.t("startableplugincallbackhandler","override");
x.t("database","transactions");
x.t("database","query");
x.t("database","transaction");
x.t("method\u2019s","isstartingup");
x.t("istartableplugin","interface");
x.t("istartableplugin","var");
x.t("variable","indicates");
x.t("variable","definition");
x.t("variable","alternatively");
x.t("variable","sets");
x.t("variable","hold");
x.t("variable","define");
x.t("variable","startablepluginstate.stopped");
x.t("variable","tracks");
x.t("variable","messagebody");
x.t("whose","argument");
x.t("bundle","create");
x.t("bundle","refer");
x.t("bundle","execute");
x.t("bundle","need");
x.t("bundle","add");
x.t("bundle","specific");
x.t("bundle","correct");
x.t("bundle","information");
x.t("bundle","save");
x.t("bundle","your_block_body");
x.t("bundle","q.select");
x.t("java","cannot");
x.t("java","language");
x.t("java","plugin\u2019s");
x.t("(e)","writable_object.department");
x.t("(e)","//");
x.t("writable_object.department","example");
x.t("actual","user");
x.t("occurred","messsage");
x.t("stopped","state");
x.t("stopped","started");
x.t("stopped","using");
x.t("rules","code");
x.t("null","_state");
x.t("null","rely");
x.t("include","constructor");
x.t("instances","bundles");
x.t("instances","query");
x.t("writable_object","bundle.add");
x.t("value","stopped");
x.t("tools","user");
x.t("similar","start");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("specific","user");
x.t("writable","bundle");
x.t("writable","save");
x.t("writable","entity");
x.t("depending","method");
x.t("takes","no");
x.t("takes","argument");
x.t("runs","due");
x.t("runs","note");
x.t("hello","world");
x.t("page","error");
x.t("show","state");
x.t("context","need");
x.t("context","simplest");
x.t("separate","bundle");
x.t("gw.api.database.query.make","(user)");
x.t("helloworldstartableplugin","goodbye");
x.t("helloworldstartableplugin","implements");
x.t("helloworldstartableplugin","hello");
x.t("data","example");
x.t("data","within");
x.t("data","likely");
x.t("information","bundles");
x.t("information","remote");
x.t("information","gosu");
x.t("information","defining");
x.t("information","adding");
x.t("correct","(default)");
x.t("(default)","database");
x.t("query","results");
x.t("query","remember");
x.t("query","//variable");
x.t("query","var");
x.t("gw.transaction.transaction","class");
x.t("defined","variable");
x.t("save","return");
x.t("save","modify");
x.t("result","bundle.add");
x.t("result","bundle");
x.t("result","var");
x.t("case","real-world");
x.t("application","sets");
x.t("(user)","//");
x.t("values","current");
x.t("called","execute");
x.t("called","system");
x.t("destroys","listener");
x.t("structure","creating");
x.t("billingcenter","integration");
x.t("billingcenter","user");
x.t("plugins","plugin");
x.t("plugins","need");
x.t("plugins","writing");
x.t("plugins","simplest");
x.t("plugins","java");
x.t("plugins","startable");
x.t("administration","user");
x.t("note","need");
x.t("note","gw.transaction.transaction");
x.t("note","entity");
x.t("transaction","application");
x.t("users","different");
x.t("handler\u2019s","execute");
x.t("startup","however");
x.t("comes","server");
x.t("messagebody","information");
x.t("work","//");
x.t("package","gw.api.startableplugin");
x.t("_callback.log","helloworldstartableplugin");
x.t("special","type");
x.t("special","service");
x.t("service","property");
x.t("service","stop");
x.t("service","write");
x.t("service","code");
x.t("following","shows");
x.t("following","complete");
x.t("following","methods");
x.t("system","entities");
x.t("system","startup");
x.t("entity","instance");
x.t("entity","related");
x.t("entity","string");
x.t("entity","instances");
x.t("entity","data");
x.t("run","current");
x.t("run","code");
x.t("run","query");
x.t("anonymous","class");
x.t("signatures","execute");
x.t("either","user");
x.t("class","alternate");
x.t("class","thing");
x.t("class","implements");
x.t("class","helloworldstartableplugin");
x.t("class","var");
x.t("typelist","startablepluginstate");
x.t("//","current");
x.t("//","property");
x.t("//","add");
x.t("//","_state");
x.t("//","private");
x.t("//","return");
x.t("//","work");
x.t("//","run");
x.t("//","modify");
x.t("using","internal");
x.t("additionally","start");
x.t("additionally","stop");
x.t("setting","property");
x.t("your_block_body","user");
x.t("returns","typecode");
x.t("pass","callback");
x.t("pass","execute");
x.t("pass","either");
x.t("q.select","//");
x.t("adding","entity");
x.t("modify","properties");
x.t("modify","result");
x.t("associated","contexts");
x.t("world","override");
x.t("var","_callback");
x.t("var","gw.transaction.transaction.current");
x.t("var","_state");
x.t("var","text_val=eval");
x.t("var","writable_object");
x.t("var","gw.api.database.query.make");
x.t("cbh","_callback.execute");
x.t("cbh","startableplugincallbackhandler");
x.t("commit","bundle");
x.t("isstartingup","parameter");
x.t("including","preupdate");
x.t("runwithnewbundle","method");
x.t("runwithnewbundle","pass");
x.t("startable","plugin");
x.t("startable","plugins");
x.t("shutting","down");
x.t("gw.api.startable.startablepluginstate","class");
x.t("threads","jms");
x.t("plugin\u2019s","start");
x.t("server","starting");
x.t("server","tools");
x.t("server","shutting");
}
