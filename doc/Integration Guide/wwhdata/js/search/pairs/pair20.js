function FileData_Pairs(x)
{
x.t("example","uses");
x.t("example","removes");
x.t("example","http");
x.t("example","suppose");
x.t("example","@wsiwebmethod");
x.t("example","plan");
x.t("example","package");
x.t("example","http://mycompany.com");
x.t("example","var");
x.t("looks","standard");
x.t("disambiguating","grouping");
x.t("debugging","package");
x.t("unlike","typical");
x.t("readable","writable");
x.t("requestsoapheaders","request");
x.t("coding","standard");
x.t("publishing","public");
x.t("publishing","configuring");
x.t("publishing","web");
x.t("provide","no");
x.t("provide","explicit");
x.t("method","example");
x.t("method","parameter");
x.t("method","efficiently");
x.t("method","arguments");
x.t("method","declare");
x.t("method","name");
x.t("method","argument");
x.t("method","web");
x.t("method","exclusion");
x.t("method","marked");
x.t("method","request");
x.t("method","simply");
x.t("method","override");
x.t("method","implementation");
x.t("method","returns");
x.t("method","names");
x.t("method","visible");
x.t("parameter","become");
x.t("properties","responsehttpheaders");
x.t("properties","xmlserializationoptions");
x.t("properties","httpservletrequest");
x.t("properties","wsiinvocationcontext");
x.t("gw.xml.ws.annotation.wsiwebservice","uses");
x.t("gw.xml.ws.annotation.wsiwebservice","wsiwebservice");
x.t("gw.xml.ws.annotation.wsiwebservice","@wsiwebservice");
x.t("defines","package");
x.t("version","number");
x.t("rather","data-based");
x.t("efficiently","sending");
x.t("serialization","xmlserializationoptions");
x.t("serialization","options");
x.t("serialization","including");
x.t("(rtnheader)","//");
x.t("annotation","example");
x.t("annotation","annotation");
x.t("annotation","no");
x.t("annotation","omit");
x.t("annotation","combine");
x.t("annotation","@wsipermissions");
x.t("annotation","@wsiavailability");
x.t("annotation","non-public");
x.t("annotation","immediately");
x.t("annotation","class");
x.t("annotation","passing");
x.t("publishes","web");
x.t("publishes","class");
x.t("within","namespace");
x.t("within","package");
x.t("hiding","public");
x.t("lists","properties");
x.t("integration","guide");
x.t("create","private");
x.t("create","stub");
x.t("table","lists");
x.t("description","readable");
x.t("sending","binary");
x.t("sending","mtom");
x.t("attachments","outside");
x.t("attachments","gosu");
x.t("attachments","ws-i");
x.t("context.responsesoapheaders.add","(rtnheader)");
x.t("static","variables");
x.t("related","types");
x.t("wsimport","tool");
x.t("required","permissions");
x.t("(static)","rather");
x.t("(static)","following");
x.t("mechanism","(mtom)");
x.t("binary","data");
x.t("normal","response");
x.t("always","supported");
x.t("variables","instance");
x.t("variables","concurrency");
x.t("variables","billingcenter");
x.t("instance","variables");
x.t("instance","variable");
x.t("instance","shared");
x.t("once","however");
x.t("arguments","example");
x.t("arguments","annotation");
x.t("arguments","implementation");
x.t("requestvar","sessionvar");
x.t("refers","invocation");
x.t("uses","gw.xml.ws.annotation.wsiwebservice");
x.t("uses","gw.xml.ws.annotation.wsipermissions");
x.t("uses","namespace");
x.t("uses","gw.xml.ws.annotation");
x.t("blank","list");
x.t("last","argument");
x.t("text_val.select","link");
x.t("support","sending");
x.t("support","gosu");
x.t("type","want");
x.t("type","xmlserializationoptions");
x.t("type","list");
x.t("type","wsirequestlocal");
x.t("type","private");
x.t("type","httpservletrequest");
x.t("type","wsiinvocationcontext");
x.t("type","declaration");
x.t("type","xmlelement");
x.t("type","httpheaders");
x.t("type","object");
x.t("(mtom)","method");
x.t("public","method");
x.t("public","availability");
x.t("public","methods");
x.t("public","web");
x.t("public","function");
x.t("explicitly","omit");
x.t("response","properties");
x.t("response","http");
x.t("response","soap");
x.t("response","body");
x.t("response","headers");
x.t("external","web");
x.t("multiple","threads");
x.t("however","classes");
x.t("however","object");
x.t("thread-safe","context");
x.t("automatically","server");
x.t("put","web");
x.t("default","false");
x.t("default","gosu");
x.t("default","example.com");
x.t("default","web");
x.t("default","nodaemons");
x.t("default","permission");
x.t("require","authentication");
x.t("require","soapadmin");
x.t("removes","authentication");
x.t("needed","example");
x.t("needed","following");
x.t("needed","@wsiwebservice");
x.t("property","description");
x.t("property","affect");
x.t("property","value");
x.t("property","writable");
x.t("apis","ensure");
x.t("apis","modify");
x.t("link","directly");
x.t("helloworldapi","public");
x.t("objects","service\u2019s");
x.t("objects","whether");
x.t("objects","exporting");
x.t("objects","service");
x.t("new","wsirequestlocal");
x.t("new","name");
x.t("new","value");
x.t("new","object");
x.t("single","@wsiwebmethod");
x.t("access","information");
x.t("want","store");
x.t("want","copy");
x.t("publish","ws-i");
x.t("gw.xml.ws.annotation.wsipermissions","@wsipermissions");
x.t("responsehttpheaders","response");
x.t("xmlserializationoptions","objects");
x.t("xmlserializationoptions","xml");
x.t("xmlserializationoptions",".for");
x.t("messsage","billingcenter");
x.t("http","url");
x.t("http","soap");
x.t("http","headers");
x.t("systempermissiontype","default");
x.t("list","unlike");
x.t("list","permissions");
x.t("list","means");
x.t("list","xmlelement");
x.t("security","dictionary");
x.t("need","additional");
x.t("add","annotation");
x.t("add","required");
x.t("add","response");
x.t("guide","apis");
x.t("guide","web");
x.t("api","w3c");
x.t("api","client");
x.t("meaningful","disambiguating");
x.t("simple","service");
x.t("results","otherwise");
x.t("configuring","web");
x.t("soap","api");
x.t("soap","headers");
x.t("soap","header");
x.t("url","web");
x.t("url","represents");
x.t("url","actual");
x.t("availability","public");
x.t("false","property");
x.t("false","instead");
x.t("features","@wsiwebmethod");
x.t("become","part");
x.t("wsirequestlocal","string");
x.t("wsirequestlocal","class");
x.t("directly","page");
x.t("requires","object");
x.t("desired","permission");
x.t("true","public");
x.t("true","exclude");
x.t("true","@wsiwebmethod");
x.t("true","billingcenter");
x.t("declare","variable");
x.t("declare","invocation");
x.t("cycle","request");
x.t("_reqlocal.set","new");
x.t("text_val.focus","text_val.select");
x.t("definition","wsdl");
x.t("definition","namespace");
x.t("possibly","including");
x.t("no","requestsoapheaders");
x.t("no","arguments");
x.t("no","response");
x.t("no","different");
x.t("no","requestenvelope");
x.t("no","mtomenabled");
x.t("no","authentication");
x.t("no","effect");
x.t("name","method");
x.t("name","operation");
x.t("name","word");
x.t("name","qname");
x.t("name","adding");
x.t("name","visibility");
x.t("operation","example");
x.t("operation","method");
x.t("operation","name");
x.t("operation","definition");
x.t("operation","web");
x.t("(true)","public");
x.t("outside","normal");
x.t("gosu","coding");
x.t("gosu","publishes");
x.t("gosu","web");
x.t("gosu","client");
x.t("gosu","reference");
x.t("gosu","concurrency");
x.t("gosu","class");
x.t("wsdl","definition");
x.t("wsdl","web");
x.t("disambiguates","objects");
x.t("http://mycompany.com/xsds/messaging/v1","specify");
x.t("constructor","default");
x.t("dictionary","view");
x.t("references","output");
x.t("references","responsesoapheaders");
x.t("argument","list");
x.t("argument","argument");
x.t("argument","implementation");
x.t("argument","@wsiwebservice");
x.t("argument","class");
x.t("daemons","maintenance");
x.t("part","operation");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("downloadable","resource");
x.t("methods","default");
x.t("methods","exclude");
x.t("methods","variable");
x.t("methods","several");
x.t("methods","manage");
x.t("boolean","value");
x.t("exists","once");
x.t("namespace","related");
x.t("namespace","objects");
x.t("namespace","url");
x.t("namespace","web");
x.t("namespace","string");
x.t("namespace","specifies");
x.t("namespace","calling");
x.t("namespace","similar");
x.t("namespace","declaration");
x.t("namespace","generate");
x.t("namespace","typically");
x.t("namespace","collisions");
x.t("standard","http");
x.t("standard","gosu");
x.t("omit","namespace");
x.t("omit","omit");
x.t("omit","soapadmin");
x.t("example.com","tools");
x.t("overriding","method");
x.t("overriding","web");
x.t("combine","features");
x.t("requesthttpheaders","request");
x.t("web","request");
x.t("web","services");
x.t("web","service");
x.t("exclude","method");
x.t("exclude","(suppress)");
x.t("exclusion","behavior");
x.t("context.requestsoapheaders.children","h.qname.equals");
x.t("decide","type");
x.t("string","looks");
x.t("string","argument");
x.t("string","web");
x.t("string","return");
x.t("string","value");
x.t("string","implementation");
x.t("string","object");
x.t("array","permission");
x.t("empty","list");
x.t("optimization","mechanism");
x.t("local","scoped");
x.t("local","variable");
x.t("resource","instead");
x.t("permissions","add");
x.t("permissions","web");
x.t("permissions","choose");
x.t("permissions","role-based");
x.t("marked","public");
x.t("outgoing","information");
x.t("thread","safety");
x.t("request","properties");
x.t("request","method");
x.t("request","refers");
x.t("request","type");
x.t("request","external");
x.t("request","thread-safe");
x.t("request","soap");
x.t("request","local");
x.t("request","headers");
x.t("request","mtom");
x.t("request","header");
x.t("request","envelope");
x.t("servlet","request");
x.t("rtnheader","getheader");
x.t("store","example");
x.t("store","string");
x.t("store","request");
x.t("error","occurred");
x.t("choices","include");
x.t("supported","property");
x.t("supported","permission");
x.t("body","mtomenabled");
x.t("suppose","want");
x.t("ws-i","web");
x.t("minimum","run");
x.t("first","request");
x.t("first","usable");
x.t("(maintenance)","@wsiwebservice");
x.t("means","no");
x.t("headers","type");
x.t("headers","needed");
x.t("headers","access");
x.t("headers","web");
x.t("headers","function");
x.t("options","type");
x.t("life","cycle");
x.t("guidewire_selectall","var");
x.t("service\u2019s","wsdl");
x.t("number","example");
x.t("w3c","message");
x.t("function","guidewire_selectall");
x.t("function","getheader");
x.t("function","dowork");
x.t("function","helloworld");
x.t("scoped","variables");
x.t("scoped","variable");
x.t("carefully","package");
x.t("represents","namespace");
x.t("specifies","whether");
x.t("specifies","company");
x.t("maintenance","multiuser");
x.t("different","behavior");
x.t("may","need");
x.t("may","share");
x.t("whether","property");
x.t("whether","optionally");
x.t("private","method");
x.t("private","function");
x.t("private","variable");
x.t("private","var");
x.t("share","object");
x.t("define","web");
x.t("define","private");
x.t("instead","true");
x.t("instead","web");
x.t("instead","abstract");
x.t("starting","default");
x.t("ways","overriding");
x.t("newmethodname","public");
x.t("newmethodname","true");
x.t("requests","sessions");
x.t("declaring","namespace");
x.t("types","systempermissiontype");
x.t("types","permissions");
x.t("types","examples");
x.t("mtom","attachments");
x.t("mtom","support");
x.t("mtom","results");
x.t("mtom","disabled");
x.t("mtom","data");
x.t("returned","api");
x.t("xml","serialization");
x.t("xml","data");
x.t("xml","object");
x.t("getheader","name");
x.t("getheader","turnaround_header_qname");
x.t("h.qname.equals","(name)");
x.t("parameterize","wsirequestlocal");
x.t("purpose","service");
x.t("stub","classes");
x.t("calling","web");
x.t("calling","billingcenter");
x.t("explicit","list");
x.t("simply","name");
x.t("important","information");
x.t("httpservletrequest","no");
x.t("httpservletrequest","servlet");
x.t("transmission","optimization");
x.t("client","requesthttpheaders");
x.t("client","web");
x.t("client","specific");
x.t("client","data");
x.t("client","perspective");
x.t("reduces","chance");
x.t("identifier","disambiguates");
x.t("@wsipermissions","//");
x.t("@wsipermissions","pass");
x.t("code","wsiinvocationcontext");
x.t("code","invocation");
x.t("requestenvelope","request");
x.t("reference","guide");
x.t("return","return");
x.t("return","null");
x.t("return","hello");
x.t("abstract","identifier");
x.t("level","web");
x.t("level","service");
x.t("nodaemons","example");
x.t("override","name");
x.t("override","names");
x.t("mtomenabled","true");
x.t("mtomenabled","boolean");
x.t("disabled","default");
x.t("instantiate","web");
x.t("safety","gosu");
x.t("_reqlocal.get","_reqlocal.set");
x.t("message","transmission");
x.t("affect","mtom");
x.t(".for","information");
x.t("header","add");
x.t("header","xml");
x.t("header","object");
x.t("java","wsimport");
x.t("java","specifying");
x.t("java","class");
x.t("actual","downloadable");
x.t("@wsiavailability","(maintenance)");
x.t("@wsiavailability","pass");
x.t("data-based","requires");
x.t("wsiinvocationcontext","new");
x.t("wsiinvocationcontext","objects");
x.t("wsiinvocationcontext","xmlelement");
x.t("wsiinvocationcontext","var");
x.t("wsiinvocationcontext","object");
x.t("envelope","type");
x.t("dowork","context");
x.t("upon","first");
x.t("ensure","thread");
x.t("variable","example");
x.t("variable","type");
x.t("variable","decide");
x.t("variable","life");
x.t("variable","parameterize");
x.t("variable","using");
x.t("variable","object");
x.t("occurred","messsage");
x.t("compared","omitting");
x.t("non-public","method");
x.t("null","web");
x.t("sessions","server");
x.t("lifetime","billingcenter");
x.t("concurrency","apis");
x.t("concurrency","classes");
x.t("concurrency","class");
x.t("helloworld","string");
x.t("usable","choices");
x.t("include","daemons");
x.t("include","soapadmin");
x.t("exporting","xml");
x.t("similar","gosu");
x.t("tools","create");
x.t("value","new");
x.t("value","false");
x.t("value","true");
x.t("value","specifies");
x.t("value","null");
x.t("value","read-only");
x.t("value","call");
x.t("additional","method");
x.t("additional","context");
x.t("main","work");
x.t("request-based","data");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("declaration","method");
x.t("declaration","constructor");
x.t("declaration","namespace");
x.t("declaration","carefully");
x.t("declaration","variable");
x.t("declaration","entirely");
x.t("implementation","classes");
x.t("implementation","class");
x.t("multiuser","starting");
x.t("several","ways");
x.t("@wsiwebmethod","annotation");
x.t("@wsiwebmethod","(true)");
x.t("@wsiwebmethod","newmethodname");
x.t("invocation","web");
x.t("invocation","context");
x.t("writable","property");
x.t("writable","request");
x.t("send","mtom");
x.t("specific","request");
x.t("specific","service");
x.t("gw.xml.ws.wsirequestlocal","web");
x.t("perhaps","meaningful");
x.t("generate","package");
x.t("view","desired");
x.t("xmlelement","property");
x.t("xmlelement","no");
x.t("xmlelement","context.requestsoapheaders.children");
x.t("plan","store");
x.t("services","publishing");
x.t("services","attachments");
x.t("services","namespace");
x.t("runs","example");
x.t("hello","hiding");
x.t("hello","omit");
x.t("hello","overriding");
x.t("hello","web");
x.t("hello","specifying");
x.t("hello","choose");
x.t("hello","pass");
x.t("authentication","needed");
x.t("authentication","simple");
x.t("authentication","supported");
x.t("says","permission");
x.t("word","(static)");
x.t("httpheaders","property");
x.t("httpheaders","no");
x.t("read","request");
x.t("page","error");
x.t("page","says");
x.t("specifying","required");
x.t("specifying","minimum");
x.t("context","context.responsesoapheaders.add");
x.t("context","request");
x.t("context","wsiinvocationcontext");
x.t("context","optional");
x.t("context","cases");
x.t("context","incoming");
x.t("context","following");
x.t("output","serialization");
x.t("typical","method");
x.t("typical","namespace");
x.t("information","example");
x.t("information","needed");
x.t("information","xml");
x.t("information","purpose");
x.t("information","implementation");
x.t("tool","uses");
x.t("gw.xml.ws.annotation","@wsiavailability");
x.t("(suppress)","publishing");
x.t("data","always");
x.t("data","gosu");
x.t("data","web");
x.t("data","returned");
x.t("data","storage");
x.t("data","sent");
x.t("optional","argument");
x.t("gw.api.web","package");
x.t("defined","within");
x.t("examples","java");
x.t("read-only","modify");
x.t("shared","across");
x.t("soapadmin","provide");
x.t("soapadmin","explicitly");
x.t("soapadmin","list");
x.t("soapadmin","permission");
x.t("published","web");
x.t("lifecycle","request");
x.t("application","multiple");
x.t("choose","include");
x.t("choose","package");
x.t("permission","name");
x.t("permission","types");
x.t("permission","soapadmin");
x.t("permission","permission");
x.t("permission","role-based");
x.t("permission","pass");
x.t("sessionvar","package");
x.t("billingcenter","integration");
x.t("billingcenter","web");
x.t("billingcenter","instantiate");
x.t("billingcenter","send");
x.t("billingcenter","application");
x.t("billingcenter","instantiates");
x.t("perspective","reduces");
x.t("chance","namespace");
x.t("classes","requestvar");
x.t("classes","web");
x.t("classes","instead");
x.t("classes","work");
x.t("otherwise","mtom");
x.t("responsesoapheaders","response");
x.t("qname","context");
x.t("_reqlocal","new");
x.t("typically","url");
x.t("cases","web");
x.t("optionally","support");
x.t("copy","response");
x.t("copy","specific");
x.t("work","web");
x.t("startup","billingcenter");
x.t("package","example");
x.t("package","however");
x.t("package","put");
x.t("package","namespace");
x.t("package","web");
x.t("package","declaration");
x.t("package","gw.api.web");
x.t("package","specify");
x.t("entirely","provide");
x.t("immediately","declaration");
x.t("incoming","outgoing");
x.t("incoming","request");
x.t("incoming","mtom");
x.t("call","calling");
x.t("service","debugging");
x.t("service","publishing");
x.t("service","method");
x.t("service","require");
x.t("service","objects");
x.t("service","publish");
x.t("service","add");
x.t("service","soap");
x.t("service","possibly");
x.t("service","operation");
x.t("service","methods");
x.t("service","overriding");
x.t("service","web");
x.t("service","request");
x.t("service","minimum");
x.t("service","first");
x.t("service","function");
x.t("service","may");
x.t("service","define");
x.t("service","code");
x.t("service","client");
x.t("service","java");
x.t("service","request-based");
x.t("service","implementation");
x.t("service","declaration");
x.t("service","invocation");
x.t("service","read");
x.t("service","typical");
x.t("service","defined");
x.t("service","incoming");
x.t("service","@wsiwebservice");
x.t("service","class");
x.t("service","adding");
x.t("service","passing");
x.t("service","object");
x.t("run","level");
x.t("following","example");
x.t("following","table");
x.t("following","incoming");
x.t("individual","web");
x.t("storage","concurrency");
x.t("manage","variable");
x.t("@wsiwebservice","annotation");
x.t("@wsiwebservice","http://mycompany.com");
x.t("@wsiwebservice","class");
x.t("class","method");
x.t("class","defines");
x.t("class","within");
x.t("class","instance");
x.t("class","type");
x.t("class","automatically");
x.t("class","helloworldapi");
x.t("class","gosu");
x.t("class","methods");
x.t("class","define");
x.t("class","code");
x.t("class","java");
x.t("class","upon");
x.t("class","gw.xml.ws.wsirequestlocal");
x.t("class","lifecycle");
x.t("class","pass");
x.t("class","adding");
x.t("class","server");
x.t("wsiwebservice","class");
x.t("http://mycompany.com","http://mycompany.com/xsds/messaging/v1");
x.t("http://mycompany.com","class");
x.t("role-based","(static)");
x.t("role-based","page");
x.t("//","blank");
x.t("//","main");
x.t("(name)","return");
x.t("using","parameterized");
x.t("loc","_reqlocal.get");
x.t("collisions","declaring");
x.t("company","perhaps");
x.t("grouping","information");
x.t("pass","array");
x.t("pass","empty");
x.t("pass","string");
x.t("pass","value");
x.t("pass","run");
x.t("adding","additional");
x.t("adding","@wsiwebmethod");
x.t("omitting","annotation");
x.t("turnaround_header_qname","context");
x.t("instantiates","web");
x.t("across","requests");
x.t("returns","value");
x.t("visibility","single");
x.t("visibility","override");
x.t("visibility","individual");
x.t("names","default");
x.t("names","visibility");
x.t("behavior","no");
x.t("behavior","compared");
x.t("modify","response");
x.t("modify","object");
x.t("var","text_val=eval");
x.t("var","rtnheader");
x.t("var","_reqlocal");
x.t("var","loc");
x.t("including","properties");
x.t("including","version");
x.t("passing","arguments");
x.t("passing","namespace");
x.t("effect","forces");
x.t("parameterized","type");
x.t("forces","non-public");
x.t("visible","web");
x.t("sent","published");
x.t("careful","static");
x.t("server","lifetime");
x.t("server","runs");
x.t("server","startup");
x.t("specify","namespace");
x.t("object","create");
x.t("object","instance");
x.t("object","last");
x.t("object","want");
x.t("object","security");
x.t("object","declare");
x.t("object","references");
x.t("object","exists");
x.t("object","methods");
x.t("object","private");
x.t("object","important");
x.t("object","copy");
x.t("object","careful");
x.t("threads","may");
}
