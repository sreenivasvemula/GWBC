function FileData_Pairs(x)
{
x.t("example","modified");
x.t("example","count");
x.t("example","suppose");
x.t("example","implements");
x.t("example","delinquencies");
x.t("four","policies");
x.t("four","delinquencies");
x.t("excellent","name=");
x.t("excellent","typecode");
x.t("excellent","desc=");
x.t("excellent","good");
x.t("method","signature");
x.t("method","part");
x.t("method","takes");
x.t("method","returns");
x.t("pejorative","payment");
x.t("else","return");
x.t("else","numberdelinquenciesintimeperiod");
x.t("rather","customize");
x.t("maxdelinquenciesforacceptable","private");
x.t("maxdelinquenciesforacceptable","numberpaymentreversalsinqueryperiod");
x.t("maxpolicycancellationsforgood","private");
x.t("maxpolicycancellationsforgood","return");
x.t("implement","countuniquedelinquenciesandcancellationsonly");
x.t("implement","calculateevaluation");
x.t("implement","several");
x.t("implement","getmetricsquerytimeperiod");
x.t("meet","business");
x.t("wish","different");
x.t("integration","guide");
x.t("refer","javadoc");
x.t("static","final");
x.t("business","requirements");
x.t("built-in","ones");
x.t("poor","name=");
x.t("poor","/typelist");
x.t("poor","desc=");
x.t("billing","plugins");
x.t("events","implement");
x.t("events","recently");
x.t("events","occurred");
x.t("delinquent","cancelled");
x.t("various","pieces");
x.t("name=","excellent");
x.t("name=","poor");
x.t("name=","new");
x.t("name=","marginal");
x.t("name=","accountevaluation");
x.t("name=","acceptable");
x.t("name=","good");
x.t("plugin","interface");
x.t("plugin","public");
x.t("plugin","account");
x.t("plugin","function");
x.t("plugin","customize");
x.t("plugin","general");
x.t("insufficient","funds");
x.t("cancelled","method");
x.t("tl_bc_account.xml","file");
x.t("uses","raw");
x.t("last","365");
x.t("numberofdaysforsearch","public");
x.t("numberofdaysforsearch","365");
x.t("text_val.select","link");
x.t("interface","methods");
x.t("interface","java");
x.t("calculates","delinquency");
x.t("today","query");
x.t("maxpolicycancellationsforacceptable","private");
x.t("maxpolicycancellationsforacceptable","return");
x.t("year","old");
x.t("modified","customized");
x.t("maxpaymentreversalsforexcellent","private");
x.t("maxpaymentreversalsforexcellent","numberpolicycancellationsintimeperiod");
x.t("calculation","plugin");
x.t("time","period");
x.t("public","boolean");
x.t("public","int");
x.t("public","accountevaluation");
x.t("public","class");
x.t("newaccount","name=");
x.t("extend","accountevaluation");
x.t("count","four");
x.t("count","calculating");
x.t("count","number");
x.t("needed","meet");
x.t("link","directly");
x.t("signature","details");
x.t("details","following");
x.t("new","account");
x.t("includes","values");
x.t("messsage","billingcenter");
x.t("policies","delinquent");
x.t("policies","payment");
x.t("file","reference");
x.t("cancellation","method");
x.t("typecode","code=");
x.t("guide","implement");
x.t("guide","plugins");
x.t("results","accountevaluation");
x.t("24l","60l");
x.t("false","method");
x.t("false","billingcenter");
x.t("maxpaymentreversalsforgood","private");
x.t("maxpaymentreversalsforgood","numberpolicycancellationsintimeperiod");
x.t("directly","page");
x.t("specified","time");
x.t("true","example");
x.t("true","false");
x.t("true","desc=");
x.t("true","unique");
x.t("true","problem");
x.t("counts","delinquencies");
x.t("requirements","wish");
x.t("account","four");
x.t("account","implement");
x.t("account","last");
x.t("account","typecode");
x.t("account","account");
x.t("account","desc=");
x.t("account","recent");
x.t("account","private");
x.t("account","less");
x.t("account","evaluation");
x.t("account","date");
x.t("text_val.focus","text_val.select");
x.t("tasks","compute");
x.t("countuniquedelinquenciesandcancellationsonly","method");
x.t("countuniquedelinquenciesandcancellationsonly","return");
x.t("accountevaluation.marginal","else");
x.t("perform","following");
x.t("part","account");
x.t("old","private");
x.t("accountevaluation.acceptable","else");
x.t("marginal","name=");
x.t("marginal","typecode");
x.t("marginal","desc=");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("methods","perform");
x.t("maxpolicycancellationsformarginal","return");
x.t("maxpolicycancellationsformarginal","//");
x.t("maxageofnewaccountinmilliseconds","365l");
x.t("maxageofnewaccountinmilliseconds","return");
x.t("boolean","countuniquedelinquenciesandcancellationsonly");
x.t("maxpaymentreversalsformarginal","//");
x.t("maxpaymentreversalsformarginal","numberpolicycancellationsintimeperiod");
x.t("decide","count");
x.t("search","negative");
x.t("final","int");
x.t("final","long");
x.t("int","maxdelinquenciesforacceptable");
x.t("int","maxpolicycancellationsforgood");
x.t("int","numberofdaysforsearch");
x.t("int","maxpolicycancellationsforacceptable");
x.t("int","maxpaymentreversalsforexcellent");
x.t("int","maxpaymentreversalsforgood");
x.t("int","maxpolicycancellationsformarginal");
x.t("int","maxpaymentreversalsformarginal");
x.t("int","maxpaymentreversalsforacceptable");
x.t("int","maxpolicycancellationsforexcellent");
x.t("int","maxdelinquenciesforexcellent");
x.t("int","numberdelinquenciesintimeperiod");
x.t("int","numberpaymentreversalsinqueryperiod");
x.t("int","maxdelinquenciesforgood");
x.t("int","getmetricsquerytimeperiod");
x.t("int","maxdelinquenciesformarginal");
x.t("int","numberpolicycancellationsintimeperiod");
x.t("accountevaluation.excellent","else");
x.t("earlier","example");
x.t("desc=","excellent");
x.t("desc=","poor");
x.t("desc=","new");
x.t("desc=","marginal");
x.t("desc=","evaluation");
x.t("desc=","acceptable");
x.t("desc=","good");
x.t("rating","example");
x.t("rating","account");
x.t("rating","values");
x.t("accountevaluation","calculateevaluation");
x.t("accountevaluation","entity");
x.t("accountevaluation","typelist");
x.t("accountevaluation","final=");
x.t("recent","days");
x.t("1000l","public");
x.t("ones","excellent");
x.t("error","occurred");
x.t("calculateevaluation","method");
x.t("calculateevaluation","account");
x.t("payment","reversals");
x.t("payment","causes");
x.t("raw","counts");
x.t("queries","number");
x.t("queries","//");
x.t("period","takes");
x.t("period","returns");
x.t("period","days");
x.t("calculating","number");
x.t("suppose","account");
x.t("give","account");
x.t("currenttime.gettime","account.getcreatetime");
x.t("thresholds","number");
x.t("long","maxageofnewaccountinmilliseconds");
x.t("accountevaluation.good","else");
x.t("code=","excellent");
x.t("code=","poor");
x.t("code=","newaccount");
x.t("code=","marginal");
x.t("code=","acceptable");
x.t("code=","good");
x.t("guidewire_selectall","var");
x.t("number","delinquencies");
x.t("number","policy");
x.t("number","occurrences");
x.t("number","days");
x.t("number","negative");
x.t("function","guidewire_selectall");
x.t("implements","plugin");
x.t("implements","iaccountevaluationcalculator");
x.t("determining","account");
x.t("maxpaymentreversalsforacceptable","private");
x.t("maxpaymentreversalsforacceptable","numberpolicycancellationsintimeperiod");
x.t("365l","24l");
x.t("60l","1000l");
x.t("60l","60l");
x.t("currenttime","int");
x.t("customize","billingcenter");
x.t("customize","days");
x.t("unique","instances");
x.t("reversals","account");
x.t("private","static");
x.t("different","rating");
x.t("implementing","iaccountevaluationcalculator");
x.t("maxpolicycancellationsforexcellent","private");
x.t("maxpolicycancellationsforexcellent","return");
x.t("reference","implementation");
x.t("cancellations","pejorative");
x.t("cancellations","rather");
x.t("cancellations","time");
x.t("cancellations","account");
x.t("cancellations","earlier");
x.t("cancellations","metrics");
x.t("return","numberofdaysforsearch");
x.t("return","true");
x.t("return","accountevaluation.marginal");
x.t("return","accountevaluation.acceptable");
x.t("return","accountevaluation.excellent");
x.t("return","accountevaluation.good");
x.t("return","accountevaluation.newaccount");
x.t("return","accountevaluation.poor");
x.t("recently","billingcenter");
x.t("java","plugin");
x.t("maxdelinquenciesforexcellent","private");
x.t("maxdelinquenciesforexcellent","numberpaymentreversalsinqueryperiod");
x.t("occurred","messsage");
x.t("occurred","specified");
x.t("less","year");
x.t("numberdelinquenciesintimeperiod","maxdelinquenciesforacceptable");
x.t("numberdelinquenciesintimeperiod","int");
x.t("numberdelinquenciesintimeperiod","maxdelinquenciesforexcellent");
x.t("numberdelinquenciesintimeperiod","maxdelinquenciesforgood");
x.t("numberdelinquenciesintimeperiod","maxdelinquenciesformarginal");
x.t("funds","occurrences");
x.t("instances","delinquency");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("several","interface");
x.t("account.getcreatetime",".gettime");
x.t("implementation","includes");
x.t("accountevaluationcalculator","implements");
x.t("evaluation","example");
x.t("evaluation","calculation");
x.t("evaluation","new");
x.t("evaluation","account");
x.t("evaluation","rating");
x.t("evaluation","implementing");
x.t("evaluation","application");
x.t("evaluation","system");
x.t("takes","number");
x.t("takes","information");
x.t("runs","queries");
x.t("acceptable","name=");
x.t("acceptable","typecode");
x.t("acceptable","desc=");
x.t("page","error");
x.t("delinquencies","implement");
x.t("delinquencies","insufficient");
x.t("delinquencies","account");
x.t("delinquencies","number");
x.t("delinquencies","cancellations");
x.t("delinquencies","policy");
x.t("delinquencies","//");
x.t("pieces","information");
x.t("good","name=");
x.t("good","extend");
x.t("good","typecode");
x.t("good","desc=");
x.t("information","account");
x.t("information","//");
x.t("information","negative");
x.t("query","refer");
x.t("query","delinquencies");
x.t("numberpaymentreversalsinqueryperiod","maxpaymentreversalsforexcellent");
x.t("numberpaymentreversalsinqueryperiod","maxpaymentreversalsforgood");
x.t("numberpaymentreversalsinqueryperiod","maxpaymentreversalsformarginal");
x.t("numberpaymentreversalsinqueryperiod","int");
x.t("numberpaymentreversalsinqueryperiod","maxpaymentreversalsforacceptable");
x.t("accountevaluation.newaccount","else");
x.t("getmetricsquerytimeperiod","method");
x.t("getmetricsquerytimeperiod","return");
x.t("maxdelinquenciesforgood","private");
x.t("maxdelinquenciesforgood","numberpaymentreversalsinqueryperiod");
x.t("accountevaluation.poor","public");
x.t("customized","needed");
x.t("defined","tl_bc_account.xml");
x.t("iaccountevaluationcalculator","method");
x.t("iaccountevaluationcalculator","plugin");
x.t("iaccountevaluationcalculator","//");
x.t("application","guide");
x.t("policy","cancellations");
x.t("javadoc","iaccountevaluationcalculator");
x.t("values","built-in");
x.t("values","typelist");
x.t("problem","calculates");
x.t("billingcenter","integration");
x.t("billingcenter","uses");
x.t("billingcenter","account");
x.t("billingcenter","query");
x.t("plugins","billing");
x.t("plugins","account");
x.t("date","currenttime");
x.t("occurrences","pejorative");
x.t("occurrences","cancellations");
x.t("causes","four");
x.t("following","example");
x.t("following","tasks");
x.t("compute","evaluation");
x.t("entity","decide");
x.t("system","queries");
x.t("system","runs");
x.t("maxdelinquenciesformarginal","numberpaymentreversalsinqueryperiod");
x.t("maxdelinquenciesformarginal","//");
x.t("general","information");
x.t("class","accountevaluationcalculator");
x.t("//","various");
x.t("//","time");
x.t("//","account");
x.t("//","give");
x.t("//","thresholds");
x.t("//","determining");
x.t("typelist","name=");
x.t("typelist","defined");
x.t("returns","results");
x.t("returns","false");
x.t("returns","true");
x.t("returns","number");
x.t("var","text_val=eval");
x.t("delinquency","count");
x.t("delinquency","cancellation");
x.t("days","method");
x.t("days","today");
x.t("days","search");
x.t("days","private");
x.t("days","system");
x.t(".gettime","maxageofnewaccountinmilliseconds");
x.t("365","//");
x.t("365","days");
x.t("numberpolicycancellationsintimeperiod","maxpolicycancellationsforgood");
x.t("numberpolicycancellationsintimeperiod","maxpolicycancellationsforacceptable");
x.t("numberpolicycancellationsintimeperiod","maxpolicycancellationsformarginal");
x.t("numberpolicycancellationsintimeperiod","currenttime.gettime");
x.t("numberpolicycancellationsintimeperiod","maxpolicycancellationsforexcellent");
x.t("negative","events");
x.t("metrics","account");
x.t("final=","true");
}
