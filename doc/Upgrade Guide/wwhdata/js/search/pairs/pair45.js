function FileData_Pairs(x)
{
x.t("upgrade","version");
x.t("upgrade","performs");
x.t("upgrade","creates");
x.t("upgrade","versioning");
x.t("upgrade","calls");
x.t("upgrade","trigger");
x.t("upgrade","need");
x.t("upgrade","guide");
x.t("upgrade","fails");
x.t("upgrade","creating");
x.t("upgrade","performance");
x.t("upgrade","custom");
x.t("upgrade","prior");
x.t("upgrade","increment");
x.t("upgrade","determine");
x.t("upgrade","customizing");
x.t("upgrade","idatamodelupgrade");
x.t("upgrade","stops");
x.t("upgrade","function");
x.t("upgrade","code");
x.t("upgrade","return");
x.t("upgrade","schema");
x.t("upgrade","made");
x.t("upgrade","triggers");
x.t("upgrade","runs");
x.t("upgrade","purposes");
x.t("upgrade","data");
x.t("upgrade","phase");
x.t("upgrade","proceeds");
x.t("upgrade","billingcenter");
x.t("upgrade","executes");
x.t("upgrade","column");
x.t("upgrade","order");
x.t("upgrade","package");
x.t("upgrade","following");
x.t("upgrade","therefore");
x.t("upgrade","update");
x.t("example","table");
x.t("example","beforeupgradeversiontrigger");
x.t("example","trigger");
x.t("example","ibeforeupgradetable");
x.t("example","fix");
x.t("example","write");
x.t("example","ibeforeupgradeinsertbuilder");
x.t("example","metadata");
x.t("example","rows");
x.t("example","existing");
x.t("example","triggers");
x.t("example","drop");
x.t("example","package");
x.t("example","var");
x.t("included","within");
x.t("included","similar");
x.t("createversioncheck","method");
x.t("createversioncheck","beforeupgradeversioncheck");
x.t("passed","instance");
x.t("passed","explicit");
x.t("passed","integer");
x.t("equal","number");
x.t("datamodelchangewithoutarchiveddocumentchange.make","new");
x.t("cleanup","override");
x.t("mycolumn","value");
x.t("createasnewtemptable","method");
x.t("column2","target");
x.t("column2","sourcetable.getcolumn");
x.t("sourcecolumn1",".mapcolumn");
x.t("reported","version");
x.t("method","passed");
x.t("method","available");
x.t("method","remapping");
x.t("method","checks");
x.t("method","usually");
x.t("method","altercolumntonullable");
x.t("method","accepts");
x.t("method","perform");
x.t("method","ibeforeupgradetable");
x.t("method","ibeforeupgradecolumn");
x.t("method","move");
x.t("method","define");
x.t("method","changes");
x.t("method","implementing");
x.t("method","works");
x.t("method","gettypekeyid");
x.t("method","builder");
x.t("method","triggers");
x.t("method","runs");
x.t("method","takes");
x.t("method","data");
x.t("method","signatures");
x.t("method","following");
x.t("method","//");
x.t("method","returns");
x.t("parameter","gettable");
x.t("parameter","idatamodelchange");
x.t("columns","exist");
x.t("columns","table");
x.t("columns","rename");
x.t("columns","beforeupgradeversiontrigger");
x.t("columns","statement");
x.t("columns","renaming");
x.t("columns","going");
x.t("columns","dropping");
x.t("columns","may");
x.t("columns","match");
x.t("columns","database");
x.t("columns","upgrader");
x.t("columns","query");
x.t("columns","order");
x.t("columns","either");
x.t("columns","setting");
x.t("columns","dropped");
x.t("exist","table");
x.t("exist","prior");
x.t("exist","database");
x.t("provide","protected");
x.t("available","version");
x.t("available","ibeforeupgradetable");
x.t("available","methods");
x.t("transactions","transactionmanager");
x.t("properties","name");
x.t("properties","types");
x.t("properties","gettypekeyid");
x.t("possible","preceding");
x.t("customerdatamodelupgrade","implements");
x.t("gw.api.database.upgrade.after.afterupgradeversiontrigger","uses");
x.t("gw.api.database.upgrade.after.afterupgradeversiontrigger","class");
x.t("testdatamodelupgradeimpl","extends");
x.t("mybeforeupgradetrigger","extends");
x.t("construct","super");
x.t("sourcecolumn2","insertselectbuilder1.execute");
x.t("somevalue","ub.set");
x.t("somevalue","row");
x.t("somevalue","//");
x.t("version","upgrade");
x.t("version","200");
x.t("version","trigger");
x.t("version","checks");
x.t("version","check");
x.t("version","number");
x.t("version","triggers");
x.t("version","250");
x.t("taking","beforeupgradeversiontrigger");
x.t("protected","gettable");
x.t("protected","methods");
x.t("protected","final");
x.t("propertya","entitye");
x.t("200","minor");
x.t("detected","guidewire");
x.t("afterupgradedatamodelchanges","list");
x.t("backed","property");
x.t("moves","data");
x.t("right","away");
x.t("defines","column");
x.t("sourcetable.sourcecolumn","no");
x.t("sourcecolumn3",".mapcolumn");
x.t("implement","idatamodelupgrade");
x.t("files","determine");
x.t("gsrc","click");
x.t("within","execute");
x.t("shown","example");
x.t("sourcecolumn4","insertselectbuilder2.execute");
x.t("create","method");
x.t("create","version");
x.t("create","create");
x.t("create","table");
x.t("create","beforeupgradeversiontrigger");
x.t("create","regular");
x.t("create","new");
x.t("create","custom");
x.t("create","define");
x.t("create","temporary");
x.t("create","drop");
x.t("create","column");
x.t("table","upgrade");
x.t("table","example");
x.t("table","columns");
x.t("table","rename");
x.t("table","describes");
x.t("table","create");
x.t("table","related");
x.t("table","insertselect");
x.t("table","mytable");
x.t("table","delete");
x.t("table","automatically");
x.t("table","new");
x.t("table","gettable");
x.t("table","check");
x.t("table","name");
x.t("table","custom");
x.t("table","updating");
x.t("table","sometable");
x.t("table","createtempcolumn");
x.t("table","contain");
x.t("table","metadata");
x.t("table","first");
x.t("table","may");
x.t("table","sourcecolumn");
x.t("table","row");
x.t("table","database");
x.t("table","schema");
x.t("table","non-nullable");
x.t("table","populating");
x.t("table","sourcetable");
x.t("table","already");
x.t("table","getcolumn");
x.t("table","data");
x.t("table","column");
x.t("table","based");
x.t("table","created");
x.t("table","using");
x.t("table","//");
x.t("table","returns");
x.t("table","adding");
x.t("table","associated");
x.t("table","insert");
x.t("table","var");
x.t("table","dropcolumns");
x.t("table","negligible");
x.t("table","even");
x.t("table","update");
x.t("table","object");
x.t("rename","table");
x.t("rename","renames");
x.t("rename","backing");
x.t("rename","operation");
x.t("rename","function");
x.t("rename","column");
x.t("rename","insert");
x.t("studio","studio");
x.t("studio","creates");
x.t("studio","billingcenter/bin");
x.t("studio","project");
x.t("studio","show");
x.t("studio","expand");
x.t("studio","8.0.4");
x.t("contact","guidewire");
x.t("describes","failure");
x.t("deleting","rows");
x.t("description","version");
x.t("description","ientitypropertyinfo");
x.t("description","string");
x.t("description","issue");
x.t("description","var");
x.t("currently","columns");
x.t("beforeupgradeversiontrigger","construct");
x.t("beforeupgradeversiontrigger","method");
x.t("beforeupgradeversiontrigger","intentionally");
x.t("beforeupgradeversiontrigger","few");
x.t("beforeupgradeversiontrigger","execute");
x.t("beforeupgradeversiontrigger","property");
x.t("beforeupgradeversiontrigger","custom");
x.t("beforeupgradeversiontrigger","list.add");
x.t("beforeupgradeversiontrigger","implementations");
x.t("beforeupgradeversiontrigger","adds");
x.t("beforeupgradeversiontrigger","instances");
x.t("beforeupgradeversiontrigger","implementation");
x.t("beforeupgradeversiontrigger","drop");
x.t("beforeupgradeversiontrigger","correct");
x.t("beforeupgradeversiontrigger","structure");
x.t("beforeupgradeversiontrigger","subclass");
x.t("beforeupgradeversiontrigger","class");
x.t("beforeupgradeversiontrigger","afterupgradeversiontrigger");
x.t("beforeupgradeversiontrigger","modify");
x.t("beforeupgradeversiontrigger","var");
x.t("related","entity");
x.t("iinsertbuilder","iafterupgradetable");
x.t("insertselect","method");
x.t("insertselect","returns");
x.t("instance","trigger");
x.t("instance","requires");
x.t("source","table");
x.t("consistency","check");
x.t("intentionally","strings");
x.t("few","differences");
x.t("performs","actions");
x.t("action","table");
x.t("action","event");
x.t("action","column");
x.t("editable","field");
x.t("responsible","performing");
x.t("mytable","gettable");
x.t("mytable","ibeforeupgradeinsertbuilder");
x.t("regular","table");
x.t(".mapcolumn","column2");
x.t(".mapcolumn","columna");
x.t(".mapcolumn","columnb");
x.t(".mapcolumn","columnc");
x.t("plugin","execute");
x.t("plugin","plugin");
x.t("plugin","dialog");
x.t("plugin","interface");
x.t("plugin","icon");
x.t("plugin","new");
x.t("plugin","name");
x.t("plugin","gosu");
x.t("plugin","runs");
x.t("plugin","run");
x.t("plugin","signatures");
x.t("plugin","class");
x.t("execute","method");
x.t("execute","rename");
x.t("execute","gettable");
x.t("execute","custom");
x.t("execute","//");
x.t("tables","columns");
x.t("tables","deleting");
x.t("tables","rename");
x.t("tables","beforeupgradeversiontrigger");
x.t("tables","add");
x.t("tables","renaming");
x.t("tables","metadata");
x.t("tables","targettable1");
x.t("renames","table");
x.t("backing","column");
x.t("try","new");
x.t("try","add");
x.t("container","call");
x.t("creates","table");
x.t("creates","new");
x.t("creates","gwp");
x.t("creates","column");
x.t("topic","includes");
x.t("topic","first");
x.t("current","table");
x.t("current","database");
x.t("implemented","idatabaseupgrade");
x.t("implemented","archiving");
x.t("drops","table");
x.t("drops","multiple");
x.t("versioning","beforeupgradeversiontrigger");
x.t("uses","gw.api.database.upgrade.after.afterupgradeversiontrigger");
x.t("uses","java.lang.iterable");
x.t("uses","gw.api.datamodel.upgrade.customerdatamodelupgrade");
x.t("uses","gw.api.database.upgrade.datamodelchangewithoutarchiveddocumentchange");
x.t("uses","gw.api.datamodel.upgrade.idatamodelchange");
x.t("uses","java.util.arraylist");
x.t("uses","gw.api.database.upgrade.before.beforeupgradeversioncheck");
x.t("uses","gw.api.database.upgrade.before.beforeupgradeversiontrigger");
x.t("uses","gw.plugin.upgrade.idatamodelupgrade");
x.t("dialog","type");
x.t("dialog","enter");
x.t("dialog","click");
x.t("shows","methods");
x.t("field","however");
x.t("later","point");
x.t("later","steps");
x.t("ub.execute","afterupgradeversiontrigger");
x.t("ub.execute","var");
x.t("createnewtemptablebasedoncurrentschema","method");
x.t("pair","array");
x.t("insertbuilder",".mapcolumn");
x.t("insertbuilder","mytable.insert");
x.t("text_val.select","link");
x.t("interface","plugin");
x.t("interface","idatabaseupgrade");
x.t("interface","provides");
x.t("interface","two");
x.t("interface","contains");
x.t("extension","tables");
x.t("extension","no");
x.t("provided","iafterupgradetable");
x.t("provided","subsequent");
x.t("support","automated");
x.t("support","guidewire");
x.t("support","custom");
x.t("icon","plus");
x.t("createnonnullablewithinitialvalue","method");
x.t("statement","dropcolumns");
x.t("necessary","cleanup");
x.t("newcolumnname","setting");
x.t("idatabaseupgrade","upgrade");
x.t("idatabaseupgrade","previously");
x.t("type","parameter");
x.t("type","list");
x.t("type","renaming");
x.t("type","column's");
x.t("type","createtempcolumn");
x.t("type","logical");
x.t("type","idatamodelupgrade");
x.t("type","code");
x.t("type","var");
x.t("deletes","rows");
x.t("open","studio");
x.t("open","billingcenter/build/gosudoc/index.html");
x.t("change","want");
x.t("change","future");
x.t("change","column");
x.t("basic","structure");
x.t("altering","columns");
x.t("altering","multiple");
x.t("altering","single");
x.t("altering","non-nullable");
x.t(".upgrade.after","uses");
x.t("populate","column");
x.t("datatypes.shorttext","//");
x.t("paymentinstrument.type.typeinfo.getproperty","description");
x.t("targettable.insertselect","(sourcetable)");
x.t("delete","method");
x.t("delete","deletes");
x.t("delete","custom");
x.t("delete","rows");
x.t("delete","builder");
x.t("remapping","usages");
x.t("calls","plugin");
x.t("nullable","creating");
x.t("nullable","ibeforeupgradecolumn");
x.t("nullable","non-nullable");
x.t("nullable","alter");
x.t("nullable","column");
x.t("explicitly","create");
x.t("explicitly","drop");
x.t("ub","tablea.update");
x.t("ub","gettable");
x.t("ub","table.update");
x.t("mytypecode","gettypekeyid");
x.t("mytypecode","updatebuilder.execute");
x.t("multiple","columns");
x.t("multiple","column");
x.t("trigger","altering");
x.t("trigger","populate");
x.t("trigger","want");
x.t("trigger","add");
x.t("trigger","perform");
x.t("trigger","sets");
x.t("trigger","beforeupgradeversioncheckwrapper");
x.t("trigger","move");
x.t("trigger","include");
x.t("trigger","wrote");
x.t("trigger","executes");
x.t("trigger","classes");
x.t("trigger","run");
x.t("trigger","//");
x.t("trigger","minor");
x.t("trigger","insert");
x.t("execution","upgrade");
x.t("automated","data");
x.t("whenever","data");
x.t("java.lang.iterable","uses");
x.t("myafterupgradetrigger","extends");
x.t("however","want");
x.t("however","occurs");
x.t("performance-intensive","rdbms");
x.t("createnewtemptablebasedonthis","method");
x.t("createnewtemptablebasedonthis","want");
x.t("checks","example");
x.t("checks","delete");
x.t("checks","test");
x.t("checks","custom");
x.t("checks","existing");
x.t("checks","triggers");
x.t("checks","correct");
x.t("checks","cases");
x.t("checks","associated");
x.t("entities","example");
x.t("entities","properties");
x.t("entities","taking");
x.t("entities","organization");
x.t("entities","return");
x.t("property","afterupgradedatamodelchanges");
x.t("property","description");
x.t("property","getafterupgradedatamodelchanges");
x.t("property","beforeupgradedatamodelchanges");
x.t("property","getbeforeupgradedatamodelchanges");
x.t("property","entity");
x.t("guidewire","upgrade");
x.t("guidewire","version");
x.t("guidewire","studio");
x.t("guidewire","support");
x.t("guidewire","gosu");
x.t("guidewire","provides");
x.t("iafterupgradecolumn","object");
x.t("require","unique");
x.t("require","updated");
x.t("detect","addversioncheckproblem");
x.t("automatically","creates");
x.t("automatically","however");
x.t("automatically","applies");
x.t("default","value");
x.t("needed","creating");
x.t("insertselectbuilder.execute","next");
x.t("link","directly");
x.t("want","execute");
x.t("want","explicitly");
x.t("want","trigger");
x.t("want","check");
x.t("want","custom");
x.t("want","move");
x.t("want","changes");
x.t("want","force");
x.t("want","copy");
x.t("want","run");
x.t("new","table");
x.t("new","plugin");
x.t("new","nullable");
x.t("new","afterversiontrigger1");
x.t("new","name");
x.t("new","gosu");
x.t("new","beforeversiontrigger1");
x.t("new","beforeversiontrigger2");
x.t("new","ibeforeupgradecolumn");
x.t("new","typekey");
x.t("new","rows");
x.t("new","non-nullable");
x.t("new","temporary");
x.t("new","query");
x.t("new","beforeupgradeversioncheck");
x.t("new","column");
x.t("new","package");
x.t("new","entity");
x.t("new","class");
x.t("new","arraylist");
x.t("differences","include");
x.t("signature","protected");
x.t("certain","condition");
x.t("certain","entity");
x.t("start","guidewire");
x.t("start","server");
x.t("single","column");
x.t("tmp_column","datatypes.shorttext");
x.t("tablea.update","//");
x.t("objects","example");
x.t("getdatabaseupgradeversiontrigger","method");
x.t("iafterupgradetable","method");
x.t("iafterupgradetable","insertselect");
x.t("iafterupgradetable","delete");
x.t("iafterupgradetable","perform");
x.t("iafterupgradetable","methods");
x.t("iafterupgradetable","builder");
x.t("iafterupgradetable","classes");
x.t("iafterupgradetable","sql");
x.t("iafterupgradetable","insert");
x.t("iafterupgradetable","object");
x.t("command","billingcenter");
x.t("includes","description");
x.t("includes","beforeupgradeversiontrigger");
x.t("includes","methods");
x.t("includes","hasversioncheck");
x.t("includes","mapcolumn");
x.t("includes","gettypekeyid");
x.t("overwrite","createversioncheck");
x.t("usually","little");
x.t("usually","appropriate");
x.t("dba","responsible");
x.t("hard-coded","value");
x.t("messsage","billingcenter");
x.t("list","create");
x.t("list","new");
x.t("list","getafterupgradedatamodelchanges");
x.t("list","override");
x.t("list","idatamodelchange");
x.t("list","either");
x.t("list","matching");
x.t("gettable","method");
x.t("gettable","sometable");
x.t("gettable","tablename");
x.t("gettable","exttablename");
x.t("gettable","sourcetable");
x.t("gettable","tablea");
x.t("gettable","targettable1");
x.t("gettable","targettable2");
x.t("gettable","targettable");
x.t("need","handle");
x.t("need","restore");
x.t("need","alter");
x.t("file","altermultiplecolumnstomatchdatamodel");
x.t("file","altercolumntypetomatchdatamodel");
x.t("file","gettypekeyid");
x.t("file","plugins");
x.t("entering","gwbc");
x.t("altermultiplecolumnstomatchdatamodel","method");
x.t("altercolumntonullable","example");
x.t("during","upgrade");
x.t("during","automatic");
x.t("during","database");
x.t("during","server");
x.t("3.0","included");
x.t("3.0","implement");
x.t("organization","implemented");
x.t("id","type");
x.t("id","comparison");
x.t("id","equals");
x.t("actions","want");
x.t("actions","override");
x.t("actions","following");
x.t("add","plugin");
x.t("add","new");
x.t("add","gosu");
x.t("add","second");
x.t("add","temporary");
x.t("add","two");
x.t(".compare","subtype");
x.t("table.update","//");
x.t("guide","upgrading");
x.t("check","certain");
x.t("check","overwrite");
x.t("check","fails");
x.t("check","existence");
x.t("check","determine");
x.t("check","standalone");
x.t("check","cannot");
x.t("check","define");
x.t("check","override");
x.t("check","failure");
x.t("check","read");
x.t("check","query");
x.t("ibeforeupgradedeletebuilder","ibeforeupgradetable");
x.t("ibeforeupgradedeletebuilder","provides");
x.t("api","documentation");
x.t("api","examples");
x.t("unless","require");
x.t("due","data");
x.t("applies","data");
x.t("moderately","expensive");
x.t("entry","old");
x.t(".createnewtemptablebasedonthis","create");
x.t("(sourcetable)","insertselectbuilder1.mapcolumn");
x.t("(sourcetable)","insertselectbuilder.mapcolumn");
x.t("(sourcetable)","var");
x.t("archiving","want");
x.t("accepts","string");
x.t("referred","version");
x.t("false","trigger");
x.t("false","implementing");
x.t("fails","upgrade");
x.t("fails","reasons");
x.t("reasons","disruption");
x.t("throws","exception");
x.t("directly","page");
x.t("test","instances");
x.t("test","data");
x.t("handle","transactions");
x.t("ientitytype","subtype");
x.t("existence","table");
x.t("true","false");
x.t("true","creating");
x.t("requires","minor");
x.t("gw.api.datamodel.upgrade.customerdatamodelupgrade","uses");
x.t("specified","metadata");
x.t("specified","entity");
x.t("text_val.focus","text_val.select");
x.t("no","comparison");
x.t("no","rows");
x.t("no","longer");
x.t("operation","insertselect");
x.t("operation","execute");
x.t("operation","try");
x.t("operation","dml");
x.t("operation","following");
x.t("operation","using");
x.t("iinsertselectbuilder","iafterupgradetable");
x.t("name","upgrade");
x.t("name","method");
x.t("name","ub.execute");
x.t("name","entered");
x.t("name","datatype");
x.t("name","second");
x.t("name","idatamodelupgrade");
x.t("name","match");
x.t("name","idatatype");
x.t("name","added");
x.t("name","column");
x.t("name","class");
x.t("name","//");
x.t("name","typelist");
x.t("name","afterupgradeversiontrigger");
x.t("creating","columns");
x.t("creating","version");
x.t("creating","table");
x.t("creating","tables");
x.t("creating","new");
x.t("creating","custom");
x.t("creating","non-nullable");
x.t("creating","temporary");
x.t("creating","column");
x.t("typelists","beforeupgradeversiontrigger");
x.t("unlikely","contact");
x.t("afterversiontrigger1","return");
x.t("renaming","columns");
x.t("renaming","tables");
x.t("[1]","table.getcolumn");
x.t("(true)","q.compare");
x.t("(true)","var");
x.t("account","var");
x.t("functionality","force");
x.t("definition","createasnewtemptable");
x.t("definition","table");
x.t("definition","create");
x.t("previously","implemented");
x.t("gosu","plugin");
x.t("gosu","api");
x.t("gosu","documentation");
x.t("gosu","classes");
x.t("gosu","class");
x.t("corresponds","column");
x.t(".upgrade","uses");
x.t(".upgrade","store");
x.t(".upgrade","right-click");
x.t("beforeversiontrigger1","list.add");
x.t("billingcenter/bin","directory");
x.t(".altercolumntonullable","creating");
x.t("performance","upgrade");
x.t("performance","create");
x.t("performance","dropping");
x.t("db","table");
x.t("oracle","dropping");
x.t("exactly","example");
x.t("custom","upgrade");
x.t("custom","version");
x.t("custom","beforeupgradeversiontrigger");
x.t("custom","extension");
x.t("custom","trigger");
x.t("custom","definition");
x.t("custom","methods");
x.t("custom","code");
x.t("custom","database");
x.t("custom","afterupgradeversiontrigger");
x.t("custom","insert");
x.t("base","classes");
x.t("perform","action");
x.t("perform","actions");
x.t("perform","operation");
x.t("perform","ddl");
x.t("perform","database");
x.t("perform","examples");
x.t("perform","insert");
x.t("perform","update");
x.t("gwbc","studio");
x.t("gwbc","regen-gosudoc");
x.t("list.add","datamodelchangewithoutarchiveddocumentchange.make");
x.t("beforeversiontrigger2","return");
x.t("entered","click");
x.t("ientitypropertyinfo","ub.set");
x.t("comparison","using");
x.t("comparison","performed");
x.t("old","name");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("provides","methods");
x.t("provides","number");
x.t("provides","hooks");
x.t("methods","included");
x.t("methods","properties");
x.t("methods","beforeupgradeversiontrigger");
x.t("methods","perform");
x.t("methods","ibeforeupgradetable");
x.t("methods","idatamodelupgrade");
x.t("methods","define");
x.t("methods","ddl");
x.t("methods","appear");
x.t("methods","alter");
x.t("methods","data");
x.t("methods","comparing");
x.t("methods","class");
x.t("methods","compare");
x.t("prior","upgrading");
x.t("prior","major");
x.t("ibeforeupgradetable","example");
x.t("ibeforeupgradetable","columns");
x.t("ibeforeupgradetable","method");
x.t("ibeforeupgradetable","table");
x.t("ibeforeupgradetable","iinsertbuilder");
x.t("ibeforeupgradetable","delete");
x.t("ibeforeupgradetable","iafterupgradetable");
x.t("ibeforeupgradetable","add");
x.t("ibeforeupgradetable","iinsertselectbuilder");
x.t("ibeforeupgradetable","iupdatebuilder");
x.t("ibeforeupgradetable","typekey");
x.t("ibeforeupgradetable","drop");
x.t("ibeforeupgradetable","ideletebuilder");
x.t("window","expand");
x.t("plus","sign");
x.t("introduces","basic");
x.t("updating","rows");
x.t("boolean","//");
x.t("parameters","string");
x.t("verifier","report");
x.t("useful","want");
x.t("sometable",".getcolumn");
x.t("sometable","//");
x.t("sometable","var");
x.t("sometable","updated");
x.t(".getcolumn","tmp_xyz");
x.t(".getcolumn","columnname");
x.t("going","renamed");
x.t("insertselectbuilder2.mapcolumn","column1");
x.t("determine","whether");
x.t("determine","typekey");
x.t("determine","correct");
x.t("implementations","create");
x.t("implementations","restore");
x.t("implementations","correct");
x.t("restart","upgrade");
x.t("increment","version");
x.t("sign","select");
x.t("tablename",".createnewtemptablebasedonthis");
x.t("tablename",".getcolumn");
x.t("tablename","final");
x.t("tablename",".create");
x.t("tablename",".createnewtemptablebasedoncurrentschema");
x.t("tablename","table.dropcolumns");
x.t("tablename","//");
x.t("tablename","table.getcolumn");
x.t("tablename","var");
x.t("ub.set","tempcolumn");
x.t("ub.set","pidesc");
x.t("ub.set","column1");
x.t(".getcolumnref","account");
x.t("up","work");
x.t("modifying","tables");
x.t("ibeforeupgradecolumn","example");
x.t("ibeforeupgradecolumn","method");
x.t("ibeforeupgradecolumn","iafterupgradecolumn");
x.t("ibeforeupgradecolumn","objects");
x.t("ibeforeupgradecolumn","[2]");
x.t("billingcenter/build/gosudoc/index.html","methods");
x.t("strings","entities");
x.t("strings","ddl");
x.t("decide","rename");
x.t("final","integer");
x.t("final","var");
x.t("gw.api.database.upgrade.datamodelchangewithoutarchiveddocumentchange","class");
x.t("(account)",".withlogsql");
x.t("away","sql");
x.t("fix","consistency");
x.t("fix","issue");
x.t("empty","list");
x.t("string","parameter");
x.t("string","defining");
x.t("string","return");
x.t("string","column");
x.t("write","version");
x.t("array","ibeforeupgradecolumn");
x.t("array","first");
x.t("deletebuilder.execute","inserting");
x.t("sets","column2");
x.t("sets","hard-coded");
x.t("sets","targettable.column1");
x.t("sets","targettable.column2");
x.t("target","table");
x.t("customizing","upgrade");
x.t("ibeforeupgradeinsertbuilder","includes");
x.t("ibeforeupgradeinsertbuilder","ibeforeupgradetable");
x.t("ibeforeupgradeinsertbuilder","used");
x.t("addition","strings");
x.t("hasversioncheck","method");
x.t("hasversioncheck","boolean");
x.t("beforeupgradeversioncheckwrapper","upgrade");
x.t("datatype","hold");
x.t("datatype","alter");
x.t("datatype","nullability");
x.t("column's","datatype");
x.t("createtempcolumn","method");
x.t("createtempcolumn","creates");
x.t("contain","columns");
x.t("contain","new");
x.t("defining","column");
x.t("second","row");
x.t("second","object");
x.t("three","columns");
x.t("selected","table");
x.t("metadata","example");
x.t("metadata","defines");
x.t("metadata","files");
x.t("metadata","later");
x.t("metadata","file");
x.t("metadata","contain");
x.t("metadata","non-nullable");
x.t("metadata","reflects");
x.t("preceding","table");
x.t("store","custom");
x.t("gw.api.datamodel.upgrade.idatamodelchange","uses");
x.t("shorttext","column");
x.t(".update",".withlogsql");
x.t("table.delete","deletebuilder.query.compare");
x.t("sourcetable.getcolumn","sourcecolumn1");
x.t("sourcetable.getcolumn","sourcecolumn2");
x.t("sourcetable.getcolumn","sourcecolumn3");
x.t("sourcetable.getcolumn","sourcecolumn4");
x.t("sourcetable.getcolumn","sourcecolumn");
x.t("error","during");
x.t("error","occurred");
x.t("archived","entities");
x.t("getafterupgradedatamodelchanges","example");
x.t("getafterupgradedatamodelchanges","method");
x.t("getafterupgradedatamodelchanges","list");
x.t("getafterupgradedatamodelchanges","methods");
x.t("getafterupgradedatamodelchanges","modifying");
x.t("backup","correct");
x.t("config","plugins");
x.t("point","dba");
x.t("insertselectbuilder1.execute","insertselectbuilder2.mapcolumn");
x.t("iupdatebuilder","iafterupgradetable");
x.t("iupdatebuilder","builder");
x.t("iupdatebuilder","tablea");
x.t("suppose","propertya_prop");
x.t("automatic","schema");
x.t("java.util.arraylist","uses");
x.t("next","example");
x.t("next","shows");
x.t("dropping","columns");
x.t("dropping","column");
x.t(".upgrade.before","uses");
x.t("logical","data");
x.t("occurs","custom");
x.t("(columnstochange)","altering");
x.t("expensive","terms");
x.t("hold","temporary");
x.t("insertselectbuilder1.mapcolumn","column1");
x.t("idatamodelupgrade","plugin");
x.t("idatamodelupgrade","interface");
x.t("idatamodelupgrade","want");
x.t("idatamodelupgrade","api");
x.t("idatamodelupgrade","select");
x.t("idatamodelupgrade","override");
x.t("idatamodelupgrade","class");
x.t("issues","upgrade");
x.t("issues","reported");
x.t("issues","detected");
x.t("issues","stage");
x.t("space","studio");
x.t("companyname",".upgrade.after");
x.t("companyname",".upgrade");
x.t("companyname",".upgrade.before");
x.t("button","select");
x.t("select","plugin");
x.t("select","add");
x.t("select","idatamodelupgrade");
x.t("first","introduces");
x.t("first","row");
x.t("first","defined");
x.t("first","object");
x.t("ub.getcolumnref","columna");
x.t("unused","metadata");
x.t("mapcolumn","method");
x.t("split","two");
x.t("targettable2.insertselect","(sourcetable)");
x.t("guidewire_selectall","var");
x.t("number","passed");
x.t("number","methods");
x.t("number","less");
x.t("number","extensions.properties");
x.t("standalone","version");
x.t("stops","running");
x.t("insertselectbuilder1","targettable1.insertselect");
x.t("function","createversioncheck");
x.t("function","table");
x.t("function","execute");
x.t("function","hasversioncheck");
x.t("function","guidewire_selectall");
x.t("function","verifyupgradability");
x.t("function","column");
x.t("entitye","corresponds");
x.t("implements","idatamodelupgrade");
x.t("datamodelversionnumber","override");
x.t("verifyupgradability","condition");
x.t("meets","following");
x.t(".create","creating");
x.t("approach","useful");
x.t("q.compare","id");
x.t(".rename","newcolumnname");
x.t(".rename","tablename_ext");
x.t("updatebuilder","mytable.update");
x.t("updatebuilder",".set");
x.t(".withdescription","custom");
x.t("insertselectbuilder2","targettable2.insertselect");
x.t("define","plugin");
x.t("define","execute");
x.t("define","new");
x.t("define","custom");
x.t("define","return");
x.t("define","getbeforeupgradedatamodelchanges");
x.t("getarchiveddocumentupgradeversiontrigger","method");
x.t("getarchiveddocumentupgradeversiontrigger","getafterupgradedatamodelchanges");
x.t("move","data");
x.t("unique","capabilities");
x.t("cannot","insert");
x.t("beforeupgradedatamodelchanges","list");
x.t("whether","trigger");
x.t("altercolumntypetomatchdatamodel","method");
x.t("different","entity");
x.t("ub.getquery",".getcolumnref");
x.t("subtypes","compare");
x.t("may","contain");
x.t("may","match");
x.t("sourcecolumn","insertselectbuilder.execute");
x.t("sourcecolumn","//");
x.t("starting","upgrade");
x.t("ddl","dml");
x.t("ddl","operations");
x.t("ibeforeupgradeinsertselectbuilder","ibeforeupgradetable");
x.t("step","action");
x.t("report","error");
x.t("row","source");
x.t("row",".mapcolumn");
x.t("row","insertbuilder");
x.t("row","target");
x.t("row","insertbuilder.execute");
x.t("row","subtype");
x.t("changes","start");
x.t("changes","getdatabaseupgradeversiontrigger");
x.t("changes","custom");
x.t("changes","archived");
x.t("changes","database");
x.t("directory","studio");
x.t("directory","open");
x.t("types","addition");
x.t("match","interface");
x.t("match","change");
x.t("match","specified");
x.t("match","exactly");
x.t("match","data");
x.t("gw.api.database.upgrade.before.beforeupgradeversioncheck","uses");
x.t("implementing","version");
x.t("idatatype","defining");
x.t("idatatype","column");
x.t("populates","data");
x.t("loss","write");
x.t("returned","temporary");
x.t("insertbuilder.execute","inserting");
x.t("insertbuilder.execute","//");
x.t("important","billingcenter");
x.t("propertya_prop","version");
x.t("works","expected");
x.t("works","orphaned");
x.t("expected","even");
x.t("added","temporary");
x.t("added","data");
x.t("initial","value");
x.t("marks","column");
x.t("impact","upgrade");
x.t(".createnewtemptablebasedoncurrentschema","create");
x.t("exttablename",".rename");
x.t("explicit","value");
x.t("explicit","values");
x.t("code","type");
x.t("code","want");
x.t("code","final");
x.t("code","running");
x.t("rows","table");
x.t("rows","beforeupgradeversiontrigger");
x.t("rows","insertbuilder");
x.t("rows","delete");
x.t("rows","three");
x.t("rows","columna");
x.t("rows","data");
x.t("rows","inserting");
x.t("rows","deleted");
x.t("rows","insert");
x.t("rows","update");
x.t("rows","updated");
x.t("typekey","id");
x.t("typekey","ids");
x.t("typekey","typelist");
x.t("gw.api.database.upgrade.before.beforeupgradeversiontrigger","uses");
x.t("gw.api.database.upgrade.before.beforeupgradeversiontrigger","class");
x.t("steps","needed");
x.t("tmp_xyz","db");
x.t("tmp_xyz","//");
x.t("tmp_xyz",".drop");
x.t("return","description");
x.t("return","new");
x.t("return","list");
x.t("return","false");
x.t("return","true");
x.t("return","empty");
x.t("return","null");
x.t("restrict","rows");
x.t("ids","upgrade");
x.t("typecodes","exist");
x.t("typecodes","version");
x.t("typecodes","removed");
x.t("restore","database");
x.t("stage","unlikely");
x.t("override","createversioncheck");
x.t("override","property");
x.t("override","functionality");
x.t("override","function");
x.t("adds","temporary");
x.t(".withlogsql","(true)");
x.t("database","upgrade");
x.t("database","columns");
x.t("database","table");
x.t("database","currently");
x.t("database","topic");
x.t("database","createnewtemptablebasedoncurrentschema");
x.t("database","however");
x.t("database","restart");
x.t("database","customizing");
x.t("database","backup");
x.t("database","suppose");
x.t("database","getarchiveddocumentupgradeversiontrigger");
x.t("database","define");
x.t("database","changes");
x.t("database","returned");
x.t("database","typecodes");
x.t("database","schema");
x.t("database","failure");
x.t("database","upgrader");
x.t("database","defined");
x.t("database","based");
x.t("database","server");
x.t("issue","possible");
x.t("issue","guidewire");
x.t("issue","custom");
x.t("issue","restart");
x.t("issue","override");
x.t("issue","causing");
x.t("issue","consider");
x.t("issue","correct");
x.t("issue","either");
x.t("appear","gosu");
x.t("given","table");
x.t("given","name");
x.t("schema","upgrade");
x.t("schema","table");
x.t("schema","verifier");
x.t("schema","database");
x.t("caused","data");
x.t("columnname2","table.getcolumn");
x.t("performing","necessary");
x.t("mytable.insert",".withdescription");
x.t("matches","certain");
x.t("idatamodelchange","beforeupgradeversiontrigger");
x.t("idatamodelchange","interface");
x.t("idatamodelchange","entities");
x.t("idatamodelchange","afterupgradeversiontrigger");
x.t("documentation","generate");
x.t("documentation","ctrl");
x.t("documentation","run");
x.t("event","failure");
x.t("causing","disruption");
x.t("click","new");
x.t("click","add");
x.t("click","button");
x.t("click","ok");
x.t("enter","name");
x.t("enter","package");
x.t("enter","class");
x.t("columnname3","oracle");
x.t("occurred","messsage");
x.t("longer","using");
x.t("null","getarchiveddocumentupgradeversiontrigger");
x.t("consider","propertya");
x.t("consider","creating");
x.t("consider","adding");
x.t("existing","columns");
x.t("existing","table");
x.t("existing","entity");
x.t("existing","typelist");
x.t("made","changes");
x.t("less","equal");
x.t("project","window");
x.t("gw.plugin.upgrade.idatamodelupgrade","uses");
x.t("non-nullable","example");
x.t("non-nullable","columns");
x.t("non-nullable","nullable");
x.t("non-nullable","default");
x.t("non-nullable","initial");
x.t("non-nullable","column");
x.t("non-nullable","without");
x.t("columnname",".altercolumntonullable");
x.t("columnname",".create");
x.t("columnname",".rename");
x.t("columnname","column.altercolumntypetomatchdatamodel");
x.t("columnname",".createnonnullablewithinitialvalue");
x.t("columnname",".drop");
x.t("populating","creating");
x.t("populating","data");
x.t("mytable.update","updatebuilder");
x.t("targettable1.insertselect","(sourcetable)");
x.t("failure","due");
x.t("failure","issue");
x.t("failure","cases");
x.t("include","version");
x.t("include","afterupgradeversiontrigger");
x.t("gettypekeyid","method");
x.t("gettypekeyid","ientitytype");
x.t("gettypekeyid","final");
x.t("gettypekeyid","entitytype");
x.t("gettypekeyid","typelist");
x.t("instances","data");
x.t("instances","run");
x.t("configuration","config");
x.t("configuration","right-click");
x.t("alter","multiple");
x.t("alter","single");
x.t("alter","database");
x.t("alter","value");
x.t("alter","column");
x.t("rdbms","clean");
x.t("similar","beforeupgradeversiontrigger");
x.t("similar","plugin");
x.t("running","upgrade");
x.t("running","custom");
x.t("transactionmanager","methods");
x.t("bin","directory");
x.t("right-click","upgrade");
x.t("right-click","gsrc");
x.t("right-click","registry");
x.t("value","sourcetable.sourcecolumn");
x.t("value","create");
x.t("value",".mapcolumn");
x.t("value","later");
x.t("value","createnonnullablewithinitialvalue");
x.t("value","trigger");
x.t("value",".compare");
x.t("value","specified");
x.t("value","no");
x.t("value","initial");
x.t("value","rows");
x.t("value","specific");
x.t("value","temporary");
x.t("value","columna");
x.t("value","upgrader");
x.t("value","appropriate");
x.t("value","column");
x.t("value","//");
x.t("value","deleted");
x.t("sourcetable","gettable");
x.t("sourcetable","split");
x.t("sourcetable","var");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("already","exist");
x.t("implementation","correct");
x.t("specific","subtypes");
x.t("specific","value");
x.t("specific","subtype");
x.t("addversioncheckproblem","description");
x.t("figure","correct");
x.t("little","effect");
x.t("triggers","upgrade");
x.t("triggers","method");
x.t("triggers","create");
x.t("triggers","open");
x.t("triggers","require");
x.t("triggers","idatamodelupgrade");
x.t("triggers","database");
x.t("triggers","failure");
x.t("triggers","upgrading");
x.t("triggers","correct");
x.t("triggers","run");
x.t("triggers","modify");
x.t("getbeforeupgradedatamodelchanges","list");
x.t("getbeforeupgradedatamodelchanges","getafterupgradedatamodelchanges");
x.t("builder","includes");
x.t("builder","ibeforeupgradedeletebuilder");
x.t("builder","ibeforeupgradeinsertbuilder");
x.t("builder","ibeforeupgradeinsertselectbuilder");
x.t("builder","actually");
x.t("builder","iquerybuilder");
x.t("builder","ibeforeupgradeupdatebuilder");
x.t("actually","perform");
x.t("actually","marks");
x.t("generate","guidewire");
x.t("condition","detect");
x.t("condition","database");
x.t("force","upgrade");
x.t("force","columns");
x.t("extends","customerdatamodelupgrade");
x.t("extends","beforeupgradeversiontrigger");
x.t("extends","afterupgradeversiontrigger");
x.t("column.altercolumntypetomatchdatamodel","altering");
x.t("exception","try");
x.t(".createnonnullablewithinitialvalue","initial");
x.t("temporary","table");
x.t("temporary","tables");
x.t("temporary","shorttext");
x.t("temporary","data");
x.t("temporary","column");
x.t("columna","ub.execute");
x.t("columna","ub.set");
x.t("columna","value");
x.t("columna","equals");
x.t("runs","guidewire");
x.t("runs","custom");
x.t("runs","transaction");
x.t("subtype","creating");
x.t("subtype","matches");
x.t("subtype","equals");
x.t("subtype","note");
x.t("subtype","column");
x.t("read","operations");
x.t("[0]","table.getcolumn");
x.t("takes","pair");
x.t("takes","array");
x.t("takes","two");
x.t("columnb","value");
x.t("targettable.column1","explicit");
x.t("insertselectbuilder","targettable.insertselect");
x.t("page","error");
x.t("upgrading","typelists");
x.t("upgrading","return");
x.t("upgrading","billingcenter");
x.t("upgrading","8.0.x");
x.t("dml","operations");
x.t("dml","builders");
x.t("drop","method");
x.t("drop","rename");
x.t("drop","drops");
x.t("drop","multiple");
x.t("drop","existing");
x.t("drop","temporary");
x.t("drop","column");
x.t("drop","afterupgradeversiontrigger");
x.t("wrote","past");
x.t("ctrl","space");
x.t("show","available");
x.t("purposes","companyname");
x.t("registry","name");
x.t("registry","click");
x.t("major","version");
x.t("dbfunction.expr","tmp_xyz");
x.t("columnc","value");
x.t("targettable.column2","value");
x.t("data","shown");
x.t("data","table");
x.t("data","extension");
x.t("data","type");
x.t("data","explicitly");
x.t("data","new");
x.t("data","selected");
x.t("data","issues");
x.t("data","loss");
x.t("data","restrict");
x.t("data","issue");
x.t("data","data");
x.t("data","column");
x.t("data","model");
x.t("data","insert");
x.t("correct","datatype");
x.t("correct","issues");
x.t("correct","issue");
x.t("correct","data");
x.t("getcolumn","returns");
x.t("regen-gosudoc","command");
x.t("query","table");
x.t("query","(account)");
x.t("query","builder");
x.t("query","following");
x.t("iquerybuilder","afterupgradeversiontrigger");
x.t("capabilities","afterupgradeversiontrigger");
x.t("gwp","file");
x.t("upgrader","automatically");
x.t("upgrader","throws");
x.t("upgrader","figure");
x.t("upgrader","drop");
x.t("table.altermultiplecolumnstomatchdatamodel","(columnstochange)");
x.t("defined","property");
x.t("defined","non-nullable");
x.t("defined","data");
x.t("future","consider");
x.t("examples","implement");
x.t("examples","topic");
x.t("examples","provided");
x.t("save","changes");
x.t("beforeupgradeversioncheck","datamodelversionnumber");
x.t("beforeupgradeversioncheck","return");
x.t("appropriate","type");
x.t("appropriate","createnewtemptablebasedonthis");
x.t("tablea.createtempcolumn","tmp_column");
x.t("equals","mytypecode");
x.t("equals","deletebuilder.execute");
x.t("equals","ub.getquery");
x.t("equals","gettypekeyid");
x.t("entitytype","ub.execute");
x.t("comparing","data");
x.t("comparing","column");
x.t("documented","guidewire");
x.t("usages","orphaned");
x.t("case","consider");
x.t("expand","configuration");
x.t("prevent","data");
x.t("reflects","new");
x.t("values","columns");
x.t("phase","method");
x.t("orphaned","typecodes");
x.t("proceeds","referred");
x.t("structure","beforeupgradeversiontrigger");
x.t("structure","altering");
x.t("structure","custom");
x.t("structure","package");
x.t("structure","afterupgradeversiontrigger");
x.t("nullability","data");
x.t("nullability","table.getcolumn");
x.t("tablea","gettable");
x.t("tablea",".update");
x.t("tablea","var");
x.t("tablename_ext","deleting");
x.t("billingcenter","upgrade");
x.t("billingcenter","3.0");
x.t("billingcenter","bin");
x.t("billingcenter","8.0.x");
x.t("two","tables");
x.t("two","methods");
x.t("two","parameters");
x.t("two","rows");
x.t("classes","example");
x.t("classes","provide");
x.t("classes","idatamodelupgrade");
x.t("classes","documented");
x.t("column","upgrade");
x.t("column","somevalue");
x.t("column","version");
x.t("column","backed");
x.t("column","create");
x.t("column","table");
x.t("column","rename");
x.t("column","beforeupgradeversiontrigger");
x.t("column","editable");
x.t("column","change");
x.t("column","type");
x.t("column","nullable");
x.t("column","performance-intensive");
x.t("column","usually");
x.t("column","need");
x.t("column","during");
x.t("column","unless");
x.t("column","check");
x.t("column","moderately");
x.t("column","entry");
x.t("column","name");
x.t("column","createtempcolumn");
x.t("column","second");
x.t("column","unused");
x.t("column","first");
x.t("column","meets");
x.t("column","different");
x.t("column","match");
x.t("column","added");
x.t("column","initial");
x.t("column","database");
x.t("column","given");
x.t("column","non-nullable");
x.t("column","populating");
x.t("column","existing");
x.t("column","alter");
x.t("column","value");
x.t("column","specific");
x.t("column","actually");
x.t("column","data");
x.t("column","defined");
x.t("column","tablea");
x.t("column","created");
x.t("column","dropped");
x.t("column","using");
x.t("column","table.getcolumn");
x.t("column","invoke");
x.t("column","without");
x.t("column","removed");
x.t("column","object");
x.t("ibeforeupgradeupdatebuilder","ibeforeupgradetable");
x.t("ibeforeupgradeupdatebuilder","iupdatebuilder");
x.t("ibeforeupgradeupdatebuilder","tablea");
x.t("ibeforeupgradeupdatebuilder","var");
x.t("transaction","need");
x.t("integer","id");
x.t("integer","gettypekeyid");
x.t("integer","data");
x.t("note","protected");
x.t("executes","whenever");
x.t("executes","custom");
x.t("ok","create");
x.t("ok","studio");
x.t("plugins","right-click");
x.t("plugins","registry");
x.t("topics","afterupgradeversiontrigger");
x.t("columnstochange","new");
x.t("columnstochange","[1]");
x.t("columnstochange","[0]");
x.t("insertselectbuilder.mapcolumn","column1");
x.t("itself","starting");
x.t("cases","want");
x.t("cases","need");
x.t("cases","caused");
x.t("inserting","rows");
x.t("inserting","data");
x.t("startup","column");
x.t("work","renaming");
x.t("based","current");
x.t("based","either");
x.t("based","entity");
x.t("copy","data");
x.t("deletebuilder.query.compare","columna");
x.t("call","execute");
x.t("call","custom");
x.t("created","createnewtemptablebasedoncurrentschema");
x.t("created","during");
x.t("created","temporary");
x.t("order","execution");
x.t("order","step");
x.t("order","prevent");
x.t("package","name");
x.t("package","companyname");
x.t("package","enter");
x.t("package","click");
x.t("package","save");
x.t("8.0.4","entering");
x.t("subclass","following");
x.t("tempcolumn","gettable");
x.t("tempcolumn","ub.getcolumnref");
x.t("tempcolumn","tablea.createtempcolumn");
x.t("table.dropcolumns","table.getcolumn");
x.t("renamed","metadata");
x.t("targettable1","gettable");
x.t("targettable1","targettable2");
x.t("targettable1","var");
x.t("run","upgrade");
x.t("run","guidewire");
x.t("run","during");
x.t("run","custom");
x.t("run","gwbc");
x.t("run","//");
x.t("model","upgrade");
x.t("model","example");
x.t("model","method");
x.t("model","version");
x.t("model","change");
x.t("model","altering");
x.t("model","createnewtemptablebasedonthis");
x.t("model","file");
x.t("model","creating");
x.t("model","definition");
x.t("model","changes");
x.t("model","database");
x.t("model","failure");
x.t("model","upgrader");
x.t("model","column");
x.t("model","itself");
x.t("model","cases");
x.t("signatures","property");
x.t("signatures","two");
x.t("either","current");
x.t("either","getbeforeupgradedatamodelchanges");
x.t("either","case");
x.t("either","specify");
x.t("entity","exist");
x.t("entity","beforeupgradeversiontrigger");
x.t("entity","type");
x.t("entity","definition");
x.t("entity","metadata");
x.t("entity","populates");
x.t("entity","database");
x.t("entity","data");
x.t("entity","defined");
x.t("entity","//");
x.t("entity","afterupgradeversiontrigger");
x.t("break","execute");
x.t("following","example");
x.t("following","signature");
x.t("following","structure");
x.t("following","order");
x.t("following","criteria");
x.t("used","add");
x.t("targettable2","gettable");
x.t("targettable2","var");
x.t("using","create");
x.t("using","beforeupgradeversiontrigger");
x.t("using","important");
x.t("using","drop");
x.t("using","data");
x.t("class","testdatamodelupgradeimpl");
x.t("class","mybeforeupgradetrigger");
x.t("class","create");
x.t("class","container");
x.t("class","dialog");
x.t("class","myafterupgradetrigger");
x.t("class","start");
x.t("class","includes");
x.t("class","enter");
x.t("class","click");
x.t("class","extends");
x.t("class","including");
x.t("typelist","table");
x.t("typelist","tables");
x.t("typelist","name");
x.t("typelist","code");
x.t("setting","column");
x.t("//","create");
x.t("//","source");
x.t("//","add");
x.t("//",".compare");
x.t("//","perform");
x.t("//","sets");
x.t("//","iupdatebuilder");
x.t("//","tmp_xyz");
x.t("//","return");
x.t("//","override");
x.t("//","value");
x.t("//","upgrader");
x.t("//","column");
x.t("//","ibeforeupgradeupdatebuilder");
x.t("[2]","columnstochange");
x.t("dropped","right");
x.t("dropped","create");
x.t("returns","delete");
x.t("returns","list");
x.t("returns","ibeforeupgradetable");
x.t("returns","ibeforeupgradecolumn");
x.t("returns","builder");
x.t("returns","integer");
x.t("ideletebuilder","iafterupgradetable");
x.t("deleted","drop");
x.t("deleted","following");
x.t("deleted","var");
x.t("250","decide");
x.t("adding","custom");
x.t("adding","column");
x.t("arraylist","idatamodelchange");
x.t("subsequent","topics");
x.t("criteria","nullable");
x.t("terms","performance");
x.t("compare","methods");
x.t("compare","data");
x.t("targettable","gettable");
x.t("targettable","var");
x.t("8.0.x","database");
x.t("8.0.x","upgrading");
x.t("hooks","custom");
x.t("afterupgradeversiontrigger","method");
x.t("afterupgradeversiontrigger","properties");
x.t("afterupgradeversiontrigger","construct");
x.t("afterupgradeversiontrigger","moves");
x.t("afterupgradeversiontrigger","beforeupgradeversiontrigger");
x.t("afterupgradeversiontrigger","instance");
x.t("afterupgradeversiontrigger","execute");
x.t("afterupgradeversiontrigger","type");
x.t("afterupgradeversiontrigger","gosu");
x.t("afterupgradeversiontrigger","base");
x.t("afterupgradeversiontrigger","list.add");
x.t("afterupgradeversiontrigger","implementations");
x.t("afterupgradeversiontrigger","next");
x.t("afterupgradeversiontrigger","approach");
x.t("afterupgradeversiontrigger","similar");
x.t("afterupgradeversiontrigger","dml");
x.t("afterupgradeversiontrigger","structure");
x.t("afterupgradeversiontrigger","subclass");
x.t("afterupgradeversiontrigger","var");
x.t("operations","available");
x.t("operations","create");
x.t("operations","provided");
x.t("operations","column");
x.t("operations","call");
x.t("sql","perform");
x.t("sql","server");
x.t("past","break");
x.t("therefore","gettypekeyid");
x.t("associated","version");
x.t("associated","entity");
x.t("modify","database");
x.t("modify","data");
x.t("table.getcolumn","columnname2");
x.t("table.getcolumn","columnname3");
x.t("table.getcolumn","columnname");
x.t("table.getcolumn","column1");
x.t("without","default");
x.t("invoke","create");
x.t("pidesc","paymentinstrument.type.typeinfo.getproperty");
x.t("pidesc","q.getcolumnref");
x.t("performed","trigger");
x.t("var","table");
x.t("var","mytable");
x.t("var","insertbuilder");
x.t("var","ub");
x.t("var","mytypecode");
x.t("var","new");
x.t("var","list");
x.t("var","text_val=eval");
x.t("var","insertselectbuilder1");
x.t("var","updatebuilder");
x.t("var","insertselectbuilder2");
x.t("var","sourcetable");
x.t("var","insertselectbuilder");
x.t("var","tablea");
x.t("var","column");
x.t("var","columnstochange");
x.t("var","tempcolumn");
x.t("var","targettable1");
x.t("var","targettable2");
x.t("var","targettable");
x.t("var","pidesc");
x.t("var","deletebuilder");
x.t("insert","method");
x.t("insert","trigger");
x.t("insert","new");
x.t("insert","operation");
x.t("insert","row");
x.t("insert","rows");
x.t("insert","data");
x.t("insert","returns");
x.t("minor","version");
x.t("including","creating");
x.t("including","package");
x.t("disruption","restore");
x.t("disruption","database");
x.t("effect","upgrade");
x.t("dropcolumns","method");
x.t("dropcolumns","drops");
x.t("builders","query");
x.t("even","new");
x.t("even","metadata");
x.t("removed","during");
x.t("removed","database");
x.t("q.getcolumnref","dbfunction.expr");
x.t(".set","mycolumn");
x.t("negligible","impact");
x.t("deletebuilder","table.delete");
x.t("contains","method");
x.t("object","provides");
x.t("object","methods");
x.t("object","string");
x.t("object","idatatype");
x.t("object","override");
x.t("object","including");
x.t("update","method");
x.t("update","operation");
x.t("update","rows");
x.t("update","database");
x.t("update","returns");
x.t("matching","given");
x.t("updated","data");
x.t("updated","following");
x.t("updated","column1");
x.t("server","perform");
x.t("server","fix");
x.t("server","dropping");
x.t("server","startup");
x.t("extensions.properties","run");
x.t("super","datamodelversionnumber");
x.t("column1","somevalue");
x.t("column1","sourcetable.getcolumn");
x.t("column1","value");
x.t("column1","table.altermultiplecolumnstomatchdatamodel");
x.t("column1","columnstochange");
x.t("specify","default");
x.t(".drop","dropping");
x.t(".drop","dropcolumns");
x.t("clean","up");
x.t("updatebuilder.execute","creating");
x.t("insertselectbuilder2.execute","updating");
}
