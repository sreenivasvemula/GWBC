function FileData_Pairs(x)
{
x.t("example","installed");
x.t("example","likely");
x.t("example","shows");
x.t("example","want");
x.t("example","navigate");
x.t("example","override");
x.t("example","print");
x.t("example","created");
x.t("example","following");
x.t("example","extract");
x.t("included","demonstrate");
x.t("states","listed");
x.t("states","start");
x.t("states","billingcenter");
x.t("states","washington");
x.t("upgrade","accessing");
x.t("provide","sort");
x.t("provide","localized");
x.t("localization","link");
x.t("localization","editor");
x.t("localization","folder");
x.t("reported","errors");
x.t("determined","priority");
x.t("just","few");
x.t("version","name");
x.t("version","click");
x.t("version","entity");
x.t("right","corner");
x.t("priorities","prefectures");
x.t("utah","arizona");
x.t("rather","value");
x.t("full","description");
x.t("exported","file");
x.t("exported","en_us");
x.t("saved","property");
x.t("saved","language");
x.t("saved","folder");
x.t("saved","appropriate");
x.t("files","typecode");
x.t("files","base");
x.t("files","display.properties");
x.t("files","folder");
x.t("comment","line");
x.t("non-japanese","users");
x.t("intended","u.s");
x.t("create","single");
x.t("create","new");
x.t("create","file");
x.t("create","empty");
x.t("create","appropriate");
x.t("description","command");
x.t("description","typecode");
x.t("description","typelist.typekey");
x.t("studio","create");
x.t("studio","type");
x.t("studio","project");
x.t("installed","french");
x.t("table","file");
x.t("accidenttype","typelist");
x.t("sourcefile","-dimport.locale=");
x.t("intensive","useful");
x.t("key","reference");
x.t("key","value");
x.t("typekey.coveragetype.badealerlimitliabcov=auto","dealer");
x.t("u.s","english");
x.t("u.s","western");
x.t("few","typecodes");
x.t("likely","included");
x.t("liability","untranslated");
x.t("liability","typekey.coveragetype.bacollisioncov=collision");
x.t("creates","file");
x.t("aomori","iwate");
x.t("aomori","priority");
x.t("user","interface");
x.t("user","changes");
x.t("nevada","utah");
x.t("line","start");
x.t("line","tool");
x.t("line","order");
x.t("guaranteed","given");
x.t("shows","typecodes");
x.t("field","typecode");
x.t("uses","typekey");
x.t("text_val.select","link");
x.t("untranslated","section");
x.t("untranslated","typecodes");
x.t("untranslated","translated");
x.t("untranslated","keys");
x.t("extension",".sort");
x.t("extension","typecodes");
x.t("necessary","billingcenter");
x.t("errors","log");
x.t("support","japanese");
x.t("state","typelist");
x.t("interface","lines");
x.t(".displayname","localized");
x.t("open","example");
x.t("open","studio");
x.t("open","typelist.properties");
x.t("type","ctrl");
x.t("change","language");
x.t("change","typelist");
x.t("orders","localized");
x.t("typekey.accidenttype.02=contact","hot");
x.t("time","file");
x.t("-dimport.locale=","localizationfolder");
x.t("editing","single");
x.t("editing","typelist.properties");
x.t("sort","orders");
x.t("sort","order");
x.t("followed","typelist");
x.t("sections","exported");
x.t("however","english-speaking");
x.t("however","value");
x.t("arizona","typecodes");
x.t("arizona","//");
x.t("text","file");
x.t("typekey.accidenttype.04=contact","fire");
x.t("property","files");
x.t("property","description");
x.t("guidewire","studio");
x.t("listed","typecode");
x.t("listed",".sort");
x.t("listed","data");
x.t("listed","alphabetic");
x.t("listed","order");
x.t("listed","//");
x.t("put",".sort");
x.t("automatically","change");
x.t("link","directly");
x.t("link","bottom");
x.t("single","text");
x.t("single","file");
x.t("translate","translated");
x.t("objects","substances");
x.t("english","list");
x.t("english","billingcenter");
x.t("english","translations");
x.t("english","therefore");
x.t("extracts","typecode");
x.t("updates","typelist.properties");
x.t("want","provide");
x.t("want","edit");
x.t("want","localize");
x.t("want","appear");
x.t("want","ensure");
x.t("new","file");
x.t("start","two");
x.t("start","//");
x.t("command","line");
x.t("command","importing");
x.t("command","exporting");
x.t("command","following");
x.t("messsage","billingcenter");
x.t("file","example");
x.t("file","localization");
x.t("file","exported");
x.t("file","saved");
x.t("file","create");
x.t("file","untranslated");
x.t("file","extension");
x.t("file","support");
x.t("file","open");
x.t("file","listed");
x.t("file","list");
x.t("file","ja_jp");
x.t("file","typelist.properties");
x.t("file","add");
x.t("file","applies");
x.t("file","name");
x.t("file","edit");
x.t("file","localize");
x.t("file","contain");
x.t("file","present");
x.t("file","language");
x.t("file","necessarily");
x.t("file","typecodes");
x.t("file","folder");
x.t("file","affect");
x.t("file","configuration");
x.t("file","named");
x.t("file","en_us");
x.t("file","import");
x.t("file","triggers");
x.t("file","localizing");
x.t("file","location");
x.t("file","appropriate");
x.t("file","save");
x.t("file","causes");
x.t("file","localizable");
x.t("file","updated");
x.t("need","translate");
x.t("need","aware");
x.t("list","states");
x.t("list","typecode");
x.t("list","prefectures");
x.t("ja_jp","localization");
x.t("ja_jp","file");
x.t("typecode","example");
x.t("typecode","want");
x.t("typecode","updates");
x.t("typecode","localizations");
x.t("typecode","strings");
x.t("typecode","display");
x.t("typecode","begins");
x.t("typecode","desc");
x.t("typecode","typelist.typekey");
x.t("typecode","order");
x.t("typecode","names");
x.t("typelist.properties","file");
x.t("typelist.properties","note");
x.t("extremes","typekey.accidenttype.04=contact");
x.t("typekey.coveragetype.bacomprehensivecov=comprehensive","typekey.coveragetype.badealerlimitliabcov=auto");
x.t("installing","display");
x.t("corner","typelist");
x.t("group","language");
x.t("add","comments");
x.t("add","translations");
x.t("expect","prefectures");
x.t("guide","language");
x.t("entry","editing");
x.t("installer","either");
x.t("applies","typecodes");
x.t("applies","configuration");
x.t("hokkaido","aomori");
x.t("hokkaido","priority");
x.t("remove","priorities");
x.t("according","sort");
x.t("globalization","guide");
x.t("navigate","localization");
x.t("navigate","configuration");
x.t("duplicate","typecode");
x.t("directly","page");
x.t("directly","typelist");
x.t("imported","file");
x.t("specified","first");
x.t("specified","language.xml");
x.t("text_val.focus","text_val.select");
x.t("typelists","export");
x.t("name","field");
x.t("name","listed");
x.t("name","typecode");
x.t("name",".sort");
x.t("name","natural");
x.t("name","typelist.typekey");
x.t("name","typelist");
x.t("name","associated");
x.t("no","typelist.properties");
x.t("definition","u.s");
x.t("stored","displaystring");
x.t("edit","just");
x.t("edit","file");
x.t("edit","typelist.properties");
x.t("edit","typecodes");
x.t("edit","specify");
x.t("gosu","gosu");
x.t("gosu","provides");
x.t("gosu","syntax");
x.t("gosu","localizing");
x.t("typekeys","gosu");
x.t("typekeys","base");
x.t("typekeys","typekey");
x.t("french","language");
x.t("gwbc","export-l10ns");
x.t("gwbc","import-l10ns");
x.t("gwbc","import");
x.t("gwbc","export");
x.t("localize","just");
x.t("localize","edit");
x.t("localize","select");
x.t("localize","typecodes");
x.t("base","configuration");
x.t("state.sort","intended");
x.t("state.sort","file");
x.t("concrete","example");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("useful","want");
x.t("window","navigate");
x.t("window","enter");
x.t("localizations","file");
x.t("localizations","ja_jp");
x.t("localizations","en_us");
x.t("localizations","fr");
x.t("provides","three");
x.t("provides","localized");
x.t("export-l10ns","-dexport.file=");
x.t("makes","easier");
x.t("find","group");
x.t("determine","sort");
x.t("strings","updates");
x.t("strings","file");
x.t("strings","extracted");
x.t("strings","typecodes");
x.t("strings","enter");
x.t("strings","following");
x.t("strings","including");
x.t("import-l10ns","-dimport.file=");
x.t("double-click","file");
x.t("double-click","typelist.properties");
x.t(".sort","files");
x.t(".sort","file");
x.t(".sort","save");
x.t("string","represents");
x.t("string","representations");
x.t("string","resources");
x.t("substances","typekey.accidenttype.03=contact");
x.t("natural","language");
x.t("lines","comment");
x.t("lines","file");
x.t("lines","typecode");
x.t("empty","state.sort");
x.t("coverage","typekey.coveragetype.bacomprehensivecov=comprehensive");
x.t("contain","strings");
x.t("defining","french");
x.t("characters","//");
x.t("three","string");
x.t("understand","display");
x.t("ones","need");
x.t("dealer","limited");
x.t("techniques","update");
x.t("present","language");
x.t("error","occurred");
x.t("commands","create");
x.t("commands","want");
x.t("commands","localize");
x.t("commands","gwbc");
x.t("commands","commands");
x.t("commands","using");
x.t("configured","billingcenter");
x.t("display","key");
x.t("display","name");
x.t("display","languages");
x.t("display","names");
x.t("config","localizations");
x.t("alphabetical","order");
x.t("(addresstype.tc_business.displayname)","important");
x.t("syntax","gwbc");
x.t("syntax","accessing");
x.t("acts","function");
x.t("select","typecode");
x.t("first","u.s");
x.t("guidewire_selectall","var");
x.t("chemicals","typekey.accidenttype.02=contact");
x.t("flame","already");
x.t("typekey.coveragetype.bacollisioncov=collision","typekey.coveragetype.bacollisionlimited_mami=collision");
x.t("importing","localized");
x.t("english-speaking","non-japanese");
x.t("function","guidewire_selectall");
x.t("function","call");
x.t("technique","labor");
x.t("comments","separate");
x.t("determining","order");
x.t("editor","studio");
x.t("editor","editing");
x.t("editor","edit");
x.t("editor","localize");
x.t("editor","find");
x.t("editor","languages");
x.t("editor","enter");
x.t("editor","localizing");
x.t("editor","note");
x.t("editor","billingcenter");
x.t("cannot","guaranteed");
x.t("whether","translated");
x.t("pack","installer");
x.t("pack","fr");
x.t("japanese","north-to-south");
x.t("japanese","languages");
x.t("japanese","prefectures");
x.t("north-to-south","order");
x.t("represents","typecode");
x.t("language","version");
x.t("language","sort");
x.t("language","name");
x.t("language","determining");
x.t("language","pack");
x.t("language","changes");
x.t("language","code");
x.t("language","typekey");
x.t("language","configuration");
x.t("language","represented");
x.t("language","export");
x.t("language","billingcenter");
x.t("language","setting");
x.t("language","typelist");
x.t("language","per");
x.t("ways","using");
x.t("accessing","typecodes");
x.t("accessing","localized");
x.t("aware","accessing");
x.t("extracted","saved");
x.t("extracted","existing");
x.t("begins","keyword");
x.t("typekey.coveragetype.bacollisionlimited_mami=collision","limited");
x.t("stores","sort");
x.t("instead","using");
x.t("western","states");
x.t("keyword","typekey");
x.t("section","shows");
x.t("display.properties","localizing");
x.t("changes","however");
x.t("changes","display");
x.t("coveragetype","typelist");
x.t("necessarily","definitions");
x.t("oregon","california");
x.t("important","change");
x.t("important","understand");
x.t("typekey","followed");
x.t("typekey","property");
x.t("typekey","priority");
x.t("typekey","following");
x.t("code","example");
x.t("code","want");
x.t("code","concrete");
x.t("code","defining");
x.t("hot","objects");
x.t("languages","guidewire");
x.t("languages","configured");
x.t("languages","typelist");
x.t("languages","server");
x.t("forth","however");
x.t("reference","acts");
x.t("typecodes","example");
x.t("typecodes","provide");
x.t("typecodes","accidenttype");
x.t("typecodes","untranslated");
x.t("typecodes","state");
x.t("typecodes","editing");
x.t("typecodes","sort");
x.t("typecodes","want");
x.t("typecodes","need");
x.t("typecodes","directly");
x.t("typecodes","typelists");
x.t("typecodes","gosu");
x.t("typecodes","edit");
x.t("typecodes","makes");
x.t("typecodes","strings");
x.t("typecodes","function");
x.t("typecodes","technique");
x.t("typecodes","cannot");
x.t("typecodes","extracted");
x.t("typecodes","language");
x.t("typecodes","coveragetype");
x.t("typecodes","localizing");
x.t("typecodes","ordered");
x.t("typecodes","localized");
x.t("typecodes","separated");
x.t("typecodes","typelist");
x.t("typecodes","using");
x.t("folder","create");
x.t("folder","open");
x.t("folder","time");
x.t("folder","file");
x.t("folder","typecode");
x.t("folder","navigate");
x.t("folder","provides");
x.t("folder","double-click");
x.t("folder","language");
x.t("folder","important");
x.t("folder","configuration");
x.t("folder","import");
x.t("folder","billingcenter");
x.t("folder","note");
x.t("folder","copy");
x.t("folder","following");
x.t("adds","entry");
x.t("adds","associated");
x.t("override","add");
x.t("given","typelist.properties");
x.t("appear","lines");
x.t("appear","north-to-south");
x.t("affect","list");
x.t("database","upgrade");
x.t("displaystring","automatically");
x.t("displaystring","mytypekey.displayname");
x.t("enter","name");
x.t("enter","localized");
x.t("translated","saved");
x.t("translated","sections");
x.t("translated","file");
x.t("translated","section");
x.t("translated","typecodes");
x.t("translated","typekey.coveragetype.babobtailliabcov=bobtail");
x.t("typekey.accidenttype.01=contact","chemicals");
x.t("click","localization");
x.t("ensure","typecodes");
x.t("finished","setting");
x.t("occurred","messsage");
x.t("existing","typelist.properties");
x.t("project","window");
x.t("configuration","state");
x.t("configuration","put");
x.t("configuration","config");
x.t("configuration","localizing");
x.t("exporting","localized");
x.t("keys","typekey.accidenttype.01=contact");
x.t("typekey.accidenttype.03=contact","temperature");
x.t("prefectures","listed");
x.t("prefectures","japanese");
x.t("prefectures","appear");
x.t("prefectures","customarily");
x.t("prefectures","state.ttx");
x.t("easier","ones");
x.t("represented","folder");
x.t("right-click","folder");
x.t("named","state.sort");
x.t("value","stored");
x.t("value","language");
x.t("value","changes");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("-dexport.file=","targetfile");
x.t("fire","flame");
x.t("already","translated");
x.t("en_us","localization");
x.t("en_us","u.s");
x.t("en_us","double-click");
x.t("en_us","//");
x.t("specific","languages");
x.t("representations","typekeys");
x.t("import","command");
x.t("import","commands");
x.t("import","whether");
x.t("import","translated");
x.t("import","localizing");
x.t("import","export");
x.t("-dimport.file=","sourcefile");
x.t("north","south");
x.t("south","hokkaido");
x.t("triggers","database");
x.t("localizing","typecode");
x.t("localizing","typecodes");
x.t("localizing","billingcenter");
x.t("fr","necessary");
x.t("fr","language");
x.t("california","nevada");
x.t("page","error");
x.t("localizationfolder","full");
x.t("ctrl","shift");
x.t("location","adds");
x.t("separate","lines");
x.t("-dexport.locale=","localizationfolder");
x.t("tool","exported");
x.t("tool","strings");
x.t("temperature","extremes");
x.t("information","language");
x.t("information","typekey");
x.t("typical",".sort");
x.t("data","model");
x.t("mytypekey.displayname","following");
x.t("typekey.coveragetype.babobtailliabcov=bobtail","liability");
x.t("defined","typelist.properties");
x.t("defined","typelist");
x.t("appropriate","localization");
x.t("appropriate","property");
x.t("appropriate","language");
x.t("desc","description");
x.t("save","file");
x.t("save","finished");
x.t("result","adding");
x.t("values","individual");
x.t("customarily","order");
x.t("alphabetic","order");
x.t("ordered","according");
x.t(".code","string");
x.t(".unlocalizedname","name");
x.t("print","(addresstype.tc_business.displayname)");
x.t("billingcenter","provide");
x.t("billingcenter","creates");
x.t("billingcenter","user");
x.t("billingcenter","extracts");
x.t("billingcenter","installing");
x.t("billingcenter","globalization");
x.t("billingcenter","string");
x.t("billingcenter","stores");
x.t("billingcenter","adds");
x.t("export","command");
x.t("export","commands");
x.t("export","import");
x.t("note","imported");
x.t("note","no");
x.t("note","localize");
x.t("two","slash");
x.t("iwate","priority");
x.t("iwate","typically");
x.t("priority","aomori");
x.t("priority","japanese");
x.t("priority","forth");
x.t("priority","defined");
x.t("priority","iwate");
x.t("priority","used");
x.t("users","expect");
x.t("washington","oregon");
x.t("localized","version");
x.t("localized","sort");
x.t("localized","typekeys");
x.t("localized","strings");
x.t("localized","string");
x.t("localized","language");
x.t("localized","typecodes");
x.t("localized","information");
x.t("localized","values");
x.t("localized","definitions");
x.t("copy","right-click");
x.t("typically","instead");
x.t("typelist.typekey",".displayname");
x.t("typelist.typekey",".code");
x.t("typelist.typekey",".unlocalizedname");
x.t("order","determined");
x.t("order","files");
x.t("order","arizona");
x.t("order","want");
x.t("order","file");
x.t("order","typecode");
x.t("order","applies");
x.t("order","hokkaido");
x.t("order","specified");
x.t("order","definition");
x.t("order","typekeys");
x.t("order","japanese");
x.t("order","language");
x.t("order","typecodes");
x.t("order","north");
x.t("order","information");
x.t("order","result");
x.t("order","either");
x.t("order","typelist");
x.t("labor","intensive");
x.t("created","extension");
x.t("causes","u.s");
x.t("call","rather");
x.t("following","example");
x.t("following","remove");
x.t("following","name");
x.t("following","syntax");
x.t("following","ways");
x.t("following","code");
x.t("following","var");
x.t("individual","typecodes");
x.t("separated","translated");
x.t("bottom","right");
x.t("either","techniques");
x.t("either","following");
x.t("used","determine");
x.t("elements","file");
x.t("entity","name");
x.t("model","example");
x.t("typelist","localization");
x.t("typelist","table");
x.t("typelist","uses");
x.t("typelist","sort");
x.t("typelist","want");
x.t("typelist","file");
x.t("typelist","name");
x.t("typelist",".sort");
x.t("typelist","editor");
x.t("typelist","language");
x.t("typelist","translated");
x.t("typelist","specific");
x.t("typelist","defined");
x.t("typelist","following");
x.t("using","gwbc");
x.t("using",".sort");
x.t("using","typelist");
x.t("setting","user");
x.t("setting","localized");
x.t("localizable","strings");
x.t("translations","typelist.properties");
x.t("translations","import");
x.t("//","states");
x.t("//","sort");
x.t("//","file");
x.t("//","alphabetical");
x.t("//","typical");
x.t("demonstrate","elements");
x.t("targetfile","-dexport.locale=");
x.t("per","line");
x.t("adding","state.sort");
x.t("names","reported");
x.t("names","u.s");
x.t("names","listed");
x.t("names","duplicate");
x.t("names","typecodes");
x.t("names","appropriate");
x.t("names","using");
x.t("limited","liability");
x.t("limited","coverage");
x.t("associated","typelist.properties");
x.t("associated","typecode");
x.t("definitions","typecodes");
x.t("therefore","saved");
x.t("var","text_val=eval");
x.t("var","displaystring");
x.t("including","names");
x.t("shift","studio");
x.t("log","file");
x.t("resources","command");
x.t("resources","localizing");
x.t("specify","sort");
x.t("update","typecode");
x.t("updated","want");
x.t("slash","characters");
x.t("server","example");
x.t("state.ttx","create");
x.t("language.xml","file");
x.t("extract","localized");
}
