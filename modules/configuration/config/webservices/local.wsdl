<?xml version="1.0"?>
<wsdl:definitions targetNamespace="http://api.webservices.bc.guidewire.com/" xmlns="http://entity.webservices.bc.guidewire.com/" xmlns:apachesoap="http://xml.apache.org/xml-soap" xmlns:api="http://api.webservices.bc.guidewire.com/" xmlns:entity="http://entity.webservices.bc.guidewire.com/" xmlns:enum="http://enumeration.webservices.bc.guidewire.com/" xmlns:fault="http://fault.webservices.bc.guidewire.com/" xmlns:soap11="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <wsdl:types>
    <xs:schema targetNamespace="http://entity.webservices.bc.guidewire.com/">
      <xs:import namespace="http://fault.webservices.bc.guidewire.com/" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
      <xs:import namespace="http://enumeration.webservices.bc.guidewire.com/" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
      <xs:import namespace="http://schemas.xmlsoap.org/soap/encoding/" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
      <xs:import namespace="http://api.webservices.bc.guidewire.com/" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
      <xs:complexType name="GWObject" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:sequence>
          <xs:element maxOccurs="1" minOccurs="0" name="refType" type="tns2:RefTypeEnum"/>
          <xs:element maxOccurs="1" minOccurs="0" name="PublicID" nillable="true" type="soapenc:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="LegalVenue" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
      Represents a court as a Place. May specify that a court is of a specific type.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:Place">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="VenueType" nillable="true" type="tns2:VenueType">
                <xs:annotation>
                  <xs:documentation>Type of court.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Place" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
      Represents an place/location that is not directly associated with a business or person.
      This is a primary subtype of Contact.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:Contact">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PersonVendor" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Contact type representing vendors that are individual persons.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:Person">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="UserContact" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
      Represents the contact data for a system User as a Person.  One UserContact entity
      will normally exist in the system for each User, and is linked to by a direct foreign key from that User.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:Person">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="EmployeeNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Employee ID number. Applies to user contacts.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Person" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
        Represents a person as a primary subtype of Contact.&lt;p/&gt;
        Person extends Contact with additional information about individuals that is not applicable to companies or
        places.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:Contact">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="CellPhone" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Mobile phone number associated with the contact.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CellPhoneCountry" nillable="true" type="tns2:PhoneCountryCode">
                <xs:annotation>
                  <xs:documentation>Mobile phone country.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CellPhoneExtension" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Mobile phone extension.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DateOfBirth" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date of birth.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FirstName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>First name.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FirstNameKanji" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>First name in kanji (used only for Japanese names and will be null otherwise)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FormerName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Person's former name, if any.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Gender" nillable="true" type="tns2:GenderType">
                <xs:annotation>
                  <xs:documentation>Gender.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LastName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Last name.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LastNameKanji" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Last name in kanji (used only for Japanese names and will be null otherwise)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LicenseNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Driver's license number.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LicenseState" nillable="true" type="tns2:Jurisdiction">
                <xs:annotation>
                  <xs:documentation>Driver's license jurisdiction.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="MaritalStatus" nillable="true" type="tns2:MaritalStatus">
                <xs:annotation>
                  <xs:documentation>Marital status.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="MiddleName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Middle name or initial.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="NumDependents" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Number of dependents the employee has.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="NumDependentsU18" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Number of dependents under 18.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="NumDependentsU25" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Number of dependents over 18 and under 25.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Occupation" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Occupation.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Particle" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Particle, such as 'de', 'von' (used for French names and will be null otherwise)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Prefix" nillable="true" type="tns2:NamePrefix">
                <xs:annotation>
                  <xs:documentation>Prefix for the person's name.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Suffix" nillable="true" type="tns2:NameSuffix">
                <xs:annotation>
                  <xs:documentation>Suffix for the person's name.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TaxFilingStatus" nillable="true" type="tns2:TaxFilingStatusType">
                <xs:annotation>
                  <xs:documentation>State-specific field.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CompanyVendor" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Contact type representing vendors that are companies.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:Company">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Company" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Represents an company/business as a primary subtype of Contact.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:Contact">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ContactCategoryScore" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Table linking Contacts to Category Scores</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AddressBookUID" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Represents the ID of the associated object in Address Book.  Null if the object is not linked to Address Book.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Contact" nillable="true" type="tns1:Contact">
                <xs:annotation>
                  <xs:documentation>Associated Contact.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReviewCategory" nillable="true" type="tns2:ReviewCategory">
                <xs:annotation>
                  <xs:documentation>Category of this Score.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Score" nillable="true" type="soapenc:int"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfContactCategoryScore" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:ContactCategoryScore[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="SpatialPoint" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:sequence>
          <xs:element name="Latitude" nillable="true" type="soapenc:decimal">
            <xs:annotation>
              <xs:documentation>The latitude</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Longitude" nillable="true" type="soapenc:decimal">
            <xs:annotation>
              <xs:documentation>The longitude</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="WellKnownText" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>the well known text for this geometry object</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Address" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Represents a street or mailing address. Addresses are normally associated with
      a Contact, either as a Primary Address for that Contact or via the ContactAddress table. Addresses can
      have geographic location information stored for proximity searches.&lt;p/&gt;
      {@see com.guidewire.pl.domain.contact.Contact}&lt;br/&gt;
      {@see com.guidewire.pl.domain.contact.ContactAddress}</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AddressBookUID" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The system uses this value when it is integrated with ContactManager and the related contact             is linked.  In this case, the ID represents the ID of this &lt;/code&gt;Address&lt;/code&gt; object's associated             &lt;code&gt;ABAddress&lt;/code&gt; in ContactManager. This value is Null if the object is not linked.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AddressLine1" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>First line of mailing address.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AddressLine1Kanji" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>First line of mailing address in kanji (used only for Japanese addresses and will be null otherwise)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AddressLine2" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Second line of mailing address.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AddressLine2Kanji" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Second line of mailing address in kanji (used only for Japanese addresses and will be null otherwise)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AddressLine3" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Third line of mailing address.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AddressType" nillable="true" type="tns2:AddressType">
                <xs:annotation>
                  <xs:documentation>Type of this address record.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="BatchGeocode" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Boolean field to mark an address to be geocoded (if needed) by the batch geocoding work queue.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CEDEX" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>CEDEX: Special business mail delivery flag (used only for French addresses and will be null otherwise)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CEDEXBureau" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>CEDEX: Special business mail delivery bureau (used only for French addresses and will be null otherwise)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="City" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>City.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CityKanji" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>City in kanji (used only for Japanese addresses and will be null otherwise)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Country" nillable="true" type="tns2:Country">
                <xs:annotation>
                  <xs:documentation>Country.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="County" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>County.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Description" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Additional description of mailing address.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="GeocodeStatus" nillable="true" type="tns2:GeocodeStatus">
                <xs:annotation>
                  <xs:documentation>Enum giving the status of the latitude and longitude data.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PostalCode" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Postal code; string to handle Zip+4 and international codes.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SpatialPoint" nillable="true" type="tns1:SpatialPoint">
                <xs:annotation>
                  <xs:documentation>Latitude and longitude of this address, represented as an instance of SpatialPoint.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="State" nillable="true" type="tns2:State">
                <xs:annotation>
                  <xs:documentation>State.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ValidUntil" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Latest date that this address is valid.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ContactAddress" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
      Table linking contacts to addresses. Note that Contacts can also be related to Addresses through
      a direct foreign key/relationship to their Primary Address.&lt;p/&gt;
      This is represented as a many-to-many relationship, although addresses created through the UI will always
      belong uniquely to only one contact.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Address" nillable="true" type="tns1:Address">
                <xs:annotation>
                  <xs:documentation>Associated address. NOTE: when inserting a ContactAddress this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AddressBookUID" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Represents the ID of the associated object in Address Book.  Null if the object is not linked to Address Book.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfContactAddress" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:ContactAddress[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="OfficialID" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
      Represents the pairing of a given official ID number and a jurisdiction.  Examples of these would
      include the pairing of a state and a drivers license number or state tax ID number.  Multiple OfficialIDs
      can be associated with a given Contact.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Contact" nillable="true" type="tns1:Contact"/>
              <xs:element maxOccurs="1" minOccurs="0" name="OfficialIDType" nillable="true" type="tns2:OfficialIDType">
                <xs:annotation>
                  <xs:documentation>The type of this official id. NOTE: when inserting a OfficialID this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OfficialIDValue" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>This official id's value, such as a social security number or drivers' license number.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="State" nillable="true" type="tns2:Jurisdiction">
                <xs:annotation>
                  <xs:documentation>Jurisdiction.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfOfficialID" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:OfficialID[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ContactContact" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>&lt;p&gt;
      Links &lt;code&gt;Contact&lt;/code&gt; objects to other contacts. Each link has a specific relationship. See the &lt;code&gt;ContactRel&lt;/code&gt; typelist for
      a list of the possible link relationships. The purpose of this table is to avoid a self-referencing foreign key on
      &lt;code&gt;Contact&lt;/code&gt;, and to allow contacts to relate to one another in different ways.&lt;/p&gt;
      &lt;p&gt;For example, imagine a &lt;code&gt;ContactContact&lt;/code&gt; entity with the following values:&lt;/p&gt;
      &lt;ul&gt;&lt;li&gt;SourceContactID: ID of Person A&lt;/li&gt;
          &lt;li&gt;Relationship: Employer&lt;/li&gt;
          &lt;li&gt;RelatedContactID: ID of Company B&lt;/li&gt;
      &lt;/ul&gt;
      &lt;p&gt;
      Then the relationship between A and B is: Company B is the Employer of Person A.&lt;/p&gt;
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AddressBookUID" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Represents the ID of the associated object in Address Book.  Null if the object is not linked to Address Book.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="RelatedContact" nillable="true" type="tns1:Contact">
                <xs:annotation>
                  <xs:documentation>"RelatedContactID" is the "Relationship" of "SourceContactID".</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Relationship" nillable="true" type="tns2:ContactRel">
                <xs:annotation>
                  <xs:documentation>Relationship between the two contacts. NOTE: when inserting a ContactContact this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SourceContact" nillable="true" type="tns1:Contact">
                <xs:annotation>
                  <xs:documentation>"SourceContactID" has "RelatedContactID" as "Relationship".</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfContactContact" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:ContactContact[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ContactTag" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>ContactTag</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AddressBookUID" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Represents the ID of the associated object in Address Book.  Null if the object is not linked to Address Book.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Contact" nillable="true" type="tns1:Contact">
                <xs:annotation>
                  <xs:documentation>Contact</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Type" nillable="true" type="tns2:ContactTagType">
                <xs:annotation>
                  <xs:documentation>Type of this ContactTag. NOTE: when inserting a ContactTag this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfContactTag" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:ContactTag[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Contact" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
        Represents a generic contact like a person or a business. The Contact is a primary object in the
        ClaimCenter system that is used in the management of your company's vendors and the
        participants in a Claim. Contact is an abstract supertype with subtypes such as Person, Company, and Place.
        Guidewire provides an initial hierarchy of Contact types that you can extend.
        From a Contact entity you can reach the expected Contact data such as physical address, phone, and fax
        information. (In general, only the Primary Address is used for location-based functionality like
        Assignment and Geocoding/Proximity Search.) Contact and its subtypes can also contain management-related
        information such as social security number, tax ID, organization type , and so forth.
        Within ClaimCenter, users create Contacts that are associated only with a particular Claim. For example,
        an injured party is a typical claim contact. ClaimCenter does not attempt to determine if a contact
        associated with one claim appears elsewhere on another claim. Thus, any claim contact that users create,
        like an auto body shop, can be a duplicate of one or more other claim contacts associated with different
        claims.
        If ClaimCenter is integrated with Guidewire's ContactManager application, your users can create contacts
        and then access them centrally through the linking feature.Your company can have both centrally
        managed contacts, such as a vendor business, and locally managed contacts, such as an injured
        party.
        To support this behavior, ContactManager and ClaimCenter have matching hierarchies of Contact
        entities, which they can keep synchronized. So, for example, an extension made to a ClaimCenter Contact
        entity should also be made to a ContactManager ABContact entity. See the Contact Management Guide
        for more information about the integration between ClaimCenter and ContactManager.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AddressBookUID" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Represents the ID of the associated object in Address Book.  Null if the object is not linked to Address Book.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AutoSync" nillable="true" type="tns2:AutoSync">
                <xs:annotation>
                  <xs:documentation>A status code to indicate whether this entity allows auto-sync or not. Null means disallow.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CategoryScores" nillable="true" type="tns1:ArrayOfContactCategoryScore">
                <xs:annotation>
                  <xs:documentation>List of categories and their average scores, associated with this Contact.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ContactAddresses" nillable="true" type="tns1:ArrayOfContactAddress">
                <xs:annotation>
                  <xs:documentation>Secondary addresses associated with the contact.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EmailAddress1" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Primary email address associated with the contact.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EmailAddress2" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Secondary email address associated with the contact.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ExternalID" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Represents the ID of the associated object in external system. Null if the object is not linked to an external system.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FaxPhone" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Fax number associated with the contact.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FaxPhoneCountry" nillable="true" type="tns2:PhoneCountryCode">
                <xs:annotation>
                  <xs:documentation>Fax phone country.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FaxPhoneExtension" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Fax phone extension.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="HomePhone" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Home phone number associated with the contact.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="HomePhoneCountry" nillable="true" type="tns2:PhoneCountryCode">
                <xs:annotation>
                  <xs:documentation>Home phone country.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="HomePhoneExtension" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Home phone extension.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Name" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>This contact's name.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="NameKanji" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>This contact's name in kanji (used only for Japanese names and will be null otherwise)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Notes" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Notes on this contact.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OfficialIDs" nillable="true" type="tns1:ArrayOfOfficialID">
                <xs:annotation>
                  <xs:documentation>TaxIDs associated with this contact</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Preferred" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether the vendor is a preferred vendor.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PreferredCurrency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>The contact's preferred currency.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PrimaryAddress" nillable="true" type="tns1:Address">
                <xs:annotation>
                  <xs:documentation>Primary address associated with the contact.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PrimaryLanguage" nillable="true" type="tns2:LanguageType">
                <xs:annotation>
                  <xs:documentation>The account's preferred language</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PrimaryLocale" nillable="true" type="tns2:LocaleType">
                <xs:annotation>
                  <xs:documentation>The account's preferred locale</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PrimaryPhone" nillable="true" type="tns2:PrimaryPhoneType">
                <xs:annotation>
                  <xs:documentation>Primary phone number type for the contact.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Score" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Overall review Score for this Contact</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SourceRelatedContacts" nillable="true" type="tns1:ArrayOfContactContact">
                <xs:annotation>
                  <xs:documentation>Contacts that point to this contact.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Tags" nillable="true" type="tns1:ArrayOfContactTag">
                <xs:annotation>
                  <xs:documentation>List of ContactTags.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TargetRelatedContacts" nillable="true" type="tns1:ArrayOfContactContact">
                <xs:annotation>
                  <xs:documentation>Contacts that this Contact points to.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TaxID" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Tax ID for the contact (SSN or EIN).</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TaxStatus" nillable="true" type="tns2:TaxStatus">
                <xs:annotation>
                  <xs:documentation>Status of the contact's tax ID; whether it is known or unknown.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="VendorNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Vendor number for the contact.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="VendorType" nillable="true" type="tns2:VendorType">
                <xs:annotation>
                  <xs:documentation>The company's vendor type.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="WithholdingRate" nillable="true" type="soapenc:decimal">
                <xs:annotation>
                  <xs:documentation>The contact's backup withholding rate, or null if backup withholding is not required or is not known to be required.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="WorkPhone" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Business phone number associated with the contact.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="WorkPhoneCountry" nillable="true" type="tns2:PhoneCountryCode">
                <xs:annotation>
                  <xs:documentation>Work phone country.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="WorkPhoneExtension" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Business phone extension.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PolPeriodContactRole" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A role for a particular policy period contact</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicyPeriodContact" nillable="true" type="tns1:PolicyPeriodContact">
                <xs:annotation>
                  <xs:documentation>The related policy period contact</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Role" nillable="true" type="tns2:PolicyPeriodRole">
                <xs:annotation>
                  <xs:documentation>The role NOTE: when inserting a PolPeriodContactRole this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfPolPeriodContactRole" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:PolPeriodContactRole[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PolicyPeriodContact" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Join Entity between a Contact and a policy period</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Contact" nillable="true" type="tns1:Contact">
                <xs:annotation>
                  <xs:documentation>The related contact NOTE: when inserting a PolicyPeriodContact this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicyPeriod" nillable="true" type="tns1:PolicyPeriod">
                <xs:annotation>
                  <xs:documentation>The related policy period</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PrimaryPolicyPeriod" nillable="true" type="tns1:PolicyPeriod">
                <xs:annotation>
                  <xs:documentation>The policy period for which this is the primary insured. Referenced by onetoone</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Roles" nillable="true" type="tns1:ArrayOfPolPeriodContactRole">
                <xs:annotation>
                  <xs:documentation>The roles for this policy period contact</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfPolicyPeriodContact" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:PolicyPeriodContact[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="MonetaryAmount" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Represents a monetary amount with a currency.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="Amount" nillable="true" type="soapenc:decimal">
            <xs:annotation>
              <xs:documentation>The BigDecimal amount of the MonetaryAmount. This property will not return null.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
            <xs:annotation>
              <xs:documentation>The Currency typekey of this MonetaryAmount.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PolicyCommission" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A relationship between a policy period and a producer code</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>The currency used by this entity's silo. NOTE: when inserting a PolicyCommission this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="ProducerCode" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The related producer code NOTE: when inserting a PolicyCommission this field must be non-null. NOTE: value is the PublicId of the ProducerCode.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Role" nillable="true" type="tns2:PolicyRole">
                <xs:annotation>
                  <xs:documentation>The role the producer code plays on the policy NOTE: when inserting a PolicyCommission this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfPolicyCommission" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:PolicyCommission[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfPolicyDlnqProcess" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:PolicyDlnqProcess[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="UnappliedFund" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>An default unapplied or designated unapplied and set of associated invoice streams for the purposes of being able separate cash buckets</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>The currency used by this entity's silo. NOTE: when inserting a UnappliedFund this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Description" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Denorm of the TAccount description, also used for staging TAccounts.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReportingGroup" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The reporting group assigned, if any. Once a reporting group is assigned, it may never be updated. NOTE: value is the PublicId of the ReportingGroup.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfUnappliedFund" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:UnappliedFund[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfPolicyPeriod" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:PolicyPeriod[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Policy" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A container entity for policy periods</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Account" nillable="true" type="tns1:Account">
                <xs:annotation>
                  <xs:documentation>The account onto which this policy is attached</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>The currency used by this entity's silo. NOTE: when inserting a Policy this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DesignatedUnappliedFunds" nillable="true" type="tns1:ArrayOfUnappliedFund">
                <xs:annotation>
                  <xs:documentation>The designated UnappliedFunds for this policy if the account type has policy-level billing with cash separation</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="HeldForInvoiceSending" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Denormalized flag that tracks whether there exists a trouble ticket on this policy with a hold with             type InvoiceSending.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LOBCode" nillable="true" type="tns2:LOBCode">
                <xs:annotation>
                  <xs:documentation>The line of business to which this policy belongs</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PCPublicID" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>PolicyCenter's public ID of the Policy</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicyPeriods" nillable="true" type="tns1:ArrayOfPolicyPeriod">
                <xs:annotation>
                  <xs:documentation>The policy periods associated with this policy</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TroubleTicketJoinEntities" nillable="true" type="tns1:ArrayOfTroubleTicketJoinEntity">
                <xs:annotation>
                  <xs:documentation>Join entity that provides relationship with the trouble tickets associated with this policy</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Attribute" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
        Describes a name-value pair. An administrator can create an Attribute entity to represent custom user characteristics,
        for example, Spanish. Then, the administrator can associate the Attribute with one or more system users.
        Studio users can reference an Attribute from Studio when writing rules.
      
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element name="Active" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Indicates whether or not this attribute is currently in use.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Description" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>A description of the attribute.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Name" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The name of the attribute. NOTE: when inserting a Attribute this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Type" nillable="true" type="tns2:UserAttributeType">
                <xs:annotation>
                  <xs:documentation>The type of the attribute. NOTE: when inserting a Attribute this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AttributeUser" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
        Links an Attribute entity with a User entity. An Attribute is a general-purpose characteristic you can associate with one or more users.
      
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Attribute" nillable="true" type="tns1:Attribute">
                <xs:annotation>
                  <xs:documentation>The associated attribute. NOTE: when inserting a AttributeUser this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DateField1" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>General-purpose date field.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DateField2" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>General-purpose date field.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DateField3" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>General-purpose date field.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="State" nillable="true" type="tns2:State">
                <xs:annotation>
                  <xs:documentation>The state in which this attribute is applicable.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TextField1" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>General-purpose text field.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TextField2" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>General-purpose text field.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TextField3" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>General-purpose text field.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Value" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>The attribute value for this user.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfAttributeUser" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:AttributeUser[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AuthorityLimit" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>The authority a user has to perform an action.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LimitAmount" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>The maximum amount authorized.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LimitType" nillable="true" type="tns2:AuthorityLimitType">
                <xs:annotation>
                  <xs:documentation>The limit type. NOTE: when inserting a AuthorityLimit this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfAuthorityLimit" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:AuthorityLimit[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AuthorityLimitProfile" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Groups a set of limits together for reuse as a standard profile.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CustomUser" nillable="true" type="tns1:User">
                <xs:annotation>
                  <xs:documentation>If a custom profile, the user which this profile belongs to. Null if this is not a custom profile.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Description" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Description of the limit.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Limits" nillable="true" type="tns1:ArrayOfAuthorityLimit">
                <xs:annotation>
                  <xs:documentation>Limits contained in the profile.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Name" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Name that identifies the profile. NOTE: when inserting a AuthorityLimitProfile this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Credential" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
      Maintains a user's system level-security identification. Each user has a corresponding Credential object. This entity
      maintains information related to authorization and authentication on the system. A Credential holds both the user's
      password and controls whether or not the user is active or not. This entity also tracks login attempts.
      
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element name="Active" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether this credential is active. Inactive credentials are not allowed to log in.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Password" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>User password. NOTE: when inserting a Credential this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="UserName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>User login name. NOTE: when inserting a Credential this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="RolePrivilege" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Joins a Role with the permissions granted by it.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Permission" nillable="true" type="tns2:SystemPermissionType">
                <xs:annotation>
                  <xs:documentation>Permission granted by the parent role. NOTE: when inserting a RolePrivilege this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfRolePrivilege" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:RolePrivilege[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Role" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
        A set of permissions defining a user Role. A User can be given multiple Roles and will be granted
        the union of all their Role permission sets.
      
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CarrierInternalRole" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>If true, this role is applicable to users internal to the carrier organization.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Description" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>An optional, more detailed description of the role.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Name" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Displayable name of the role. NOTE: when inserting a Role this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Privileges" nillable="true" type="tns1:ArrayOfRolePrivilege">
                <xs:annotation>
                  <xs:documentation>Privileges granted by membership in this role.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="RoleType" nillable="true" type="tns2:RoleType">
                <xs:annotation>
                  <xs:documentation>Type of the role.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="UserRole" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
        Joins a User with their security roles. The system creates this entity when you assign a Role to a User.
        The User will be granted the union of all the permissions granted by their Roles.
      
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Role" nillable="true" type="tns1:Role">
                <xs:annotation>
                  <xs:documentation>Security role granted to the user. NOTE: when inserting a UserRole this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfUserRole" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:UserRole[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="User" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>The User entity</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Attributes" nillable="true" type="tns1:ArrayOfAttributeUser">
                <xs:annotation>
                  <xs:documentation>Attributes for the user.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AuthorityProfile" nillable="true" type="tns1:AuthorityLimitProfile">
                <xs:annotation>
                  <xs:documentation>Authority limit profile for this user</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Contact" nillable="true" type="tns1:UserContact">
                <xs:annotation>
                  <xs:documentation>Contact entry related to the user. NOTE: when inserting a User this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Credential" nillable="true" type="tns1:Credential">
                <xs:annotation>
                  <xs:documentation>Security credential for the user.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DefaultCountry" nillable="true" type="tns2:Country">
                <xs:annotation>
                  <xs:documentation>User's default country</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DefaultPhoneCountry" nillable="true" type="tns2:PhoneCountryCode">
                <xs:annotation>
                  <xs:documentation>User's default phone country</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Department" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>User's department within the company.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ExperienceLevel" nillable="true" type="tns2:UserExperienceType">
                <xs:annotation>
                  <xs:documentation>Experience level of the user.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="JobTitle" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>User's job title.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Language" nillable="true" type="tns2:LanguageType">
                <xs:annotation>
                  <xs:documentation>User's preferred language.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Locale" nillable="true" type="tns2:LocaleType">
                <xs:annotation>
                  <xs:documentation>User's preferred locale.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Roles" nillable="true" type="tns1:ArrayOfUserRole">
                <xs:annotation>
                  <xs:documentation>Security roles granted to the user.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TimeZone" nillable="true" type="tns2:TimeZoneType">
                <xs:annotation>
                  <xs:documentation>User's time zone.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="LegacyAgencyBill" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Legacy agency bill workflow</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:AgencyBillWorkflow">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="StdAgencyBill" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Standard agency bill workflow</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:AgencyBillWorkflow">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="SimpleDelinquency" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Simple delinquency process workflow</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:DelProcessWorkflow">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="LegacyDelinquency" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Delinquency Past Due workflow hand-over from legacy system</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:DelProcessWorkflow">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="LegacyDelinquencyOther" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Delinquency Other workflow hand-over from legacy system</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:DelProcessWorkflow">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="StdDelinquency" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Standard delinquency process workflow</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:DelProcessWorkflow">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CancelImmediately" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Delinquency process workflow immediately calling out to external system to cancel</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:DelProcessWorkflow">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="SimpleFailureToReport" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Simple failure to report workflow</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:DelProcessWorkflow">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="SimpleProducerRefer" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Simple producer referral workflow</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:DelProcessWorkflow">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="DelProcessWorkflow" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Workflow for DelinquencyProcess</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:BCWorkflow">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="TopLevelDelinquencyProcess" nillable="true" type="tns1:DelinquencyProcess">
                <xs:annotation>
                  <xs:documentation>Other end of TopLevelWorkflow onetoone</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Message" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Active messages generated by events.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AckCode" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Custom field that may be defined when acknowledging.  This field is deprecated, please define a new custom extension field instead.
@deprecated Custom field that may be defined when acknowledging.  This field is deprecated, please define a new custom extension field instead.
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="AckCount" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Number of acks received. NOTE: when inserting a Message this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AfterSendTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Time of completion of afterSend method.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeforeSendLockTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Time of attempting to get lock before the call to beforeSend transformations.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeforeSendLockedTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Time of after acquired lock before the call to beforeSend transformations.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeforeSendTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Time of completion of beforeSend transformations.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="CreationTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Time of creating the message. NOTE: when inserting a Message this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Description" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Short description of the message.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="DestinationID" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Identifies the destination to send this message to. NOTE: when inserting a Message this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="DuplicateCount" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Number of duplicate errors received.  This field is obsolete, it is not applicable to active messages.
@deprecated Number of duplicate errors received.  This field is obsolete, it is not applicable to active messages.
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ErrorCategory" nillable="true" type="tns2:ErrorCategory">
                <xs:annotation>
                  <xs:documentation>Type of error if the message is in error.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ErrorDescription" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Detailed description of error condition (set in the destination).</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="EventName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Name of the event. NOTE: when inserting a Message this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EventRootKey" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Key of event root/cause, encoded as type:id.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="KeyMap" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>A CSV representation of the key-&gt;object ID map.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LateBound" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether the payload contains late-bound fields.  This field is obsolete and no longer set/used.
@deprecated Whether the payload contains late-bound fields.  This field is obsolete and no longer set/used.
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="MessageCode" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Custom field that may be defined during message creation.  This field is deprecated, please define a new custom extension field instead.
@deprecated Custom field that may be defined during message creation.  This field is deprecated, please define a new custom extension field instead.
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ObjectKey" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Key of template root object/SOO, encoded as type:id.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OptionalInt" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Custom field that may be set at message creation time.  This field is deprecated, please define a new custom extension field instead.
@deprecated Custom field that may be set at message creation time.  This field is deprecated, please define a new custom extension field instead.
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OptionalMoney" nillable="true" type="soapenc:decimal">
                <xs:annotation>
                  <xs:documentation>Custom field that may be set at message creation time.  This field is deprecated, please define a new custom extension field instead.
@deprecated Custom field that may be set at message creation time.  This field is deprecated, please define a new custom extension field instead.
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OptionalString" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Custom field that may be set at message creation time.  This field is deprecated, please define a new custom extension field instead.
@deprecated Custom field that may be set at message creation time.  This field is deprecated, please define a new custom extension field instead.
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Payload" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Contents of the message.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="QueryTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Time of of query selecting message to be processed.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="RetryCount" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Number of times message has been retried.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="RetryTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Time in the future at which to retry the message in error, applicable only to retryable error messages.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SendLockTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Time of attempting to lock before the sending the message.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SendLockedTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Time of after acquired lock lock before the sending the message.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="SendOrder" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Order in which to send messages. NOTE: when inserting a Message this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SendTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Time of completion of sending the message.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SenderRefID" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Optional sender reference set at message send time.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Status" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Message status: 1-Pending send; 2-Pending ack; 3-Error; 4-Retryable error NOTE: when inserting a Message this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="User" nillable="true" type="tns1:User">
                <xs:annotation>
                  <xs:documentation>The user who created this message.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="MessageHistory" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Completed messages.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AckCode" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Custom field that may be defined when acknowledging.  This field is deprecated, please define a new custom extension field instead.
@deprecated Custom field that may be defined when acknowledging.  This field is deprecated, please define a new custom extension field instead.
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="AckCount" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Number of acks received. NOTE: when inserting a MessageHistory this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AckedTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Time of ack.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AfterSendTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Time of completion of afterSend method.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeforeSendLockTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Time of attempting to get lock before the call to beforeSend transformations.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeforeSendLockedTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Time of after acquired lock before the call to beforeSend transformations.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeforeSendTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Time of completion of beforeSend transformations.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="CreationTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Time of creating the message. NOTE: when inserting a MessageHistory this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Description" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Short description of the message.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="DestinationID" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Identifies the message destination to send this message to. NOTE: when inserting a MessageHistory this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="DuplicateCount" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Number of duplicate errors received.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ErrorCategory" nillable="true" type="tns2:ErrorCategory">
                <xs:annotation>
                  <xs:documentation>Type of error if the message is in error.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ErrorDescription" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Detailed description of error condition (set in the message destination).</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="EventName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Name of the event. NOTE: when inserting a MessageHistory this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EventRootKey" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Key of event root/cause, encoded as type:id.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="KeyMap" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>A CSV representation of the key-&gt;object ID map.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LateBound" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether the payload contains late-bound fields.  This field is obsolete and no longer set/used.
@deprecated Whether the payload contains late-bound fields.  This field is obsolete and no longer set/used.
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="MessageCode" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Custom field that may be defined during message creation.  This field is deprecated, please define a new custom extension field instead.
@deprecated Custom field that may be defined during message creation.  This field is deprecated, please define a new custom extension field instead.
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ObjectKey" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Key of template root object, encoded as type:id.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OptionalInt" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Custom field that may be set at message creation time.  This field is deprecated, please define a new custom extension field instead.
@deprecated Custom field that may be set at message creation time.  This field is deprecated, please define a new custom extension field instead.
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OptionalMoney" nillable="true" type="soapenc:decimal">
                <xs:annotation>
                  <xs:documentation>Custom field that may be set at message creation time.  This field is deprecated, please define a new custom extension field instead.
@deprecated Custom field that may be set at message creation time.  This field is deprecated, please define a new custom extension field instead.
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OptionalString" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Custom field that may be set at message creation time.  This field is deprecated, please define a new custom extension field instead.
@deprecated Custom field that may be set at message creation time.  This field is deprecated, please define a new custom extension field instead.
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="OrigMsgId" nillable="true" type="soapenc:long">
                <xs:annotation>
                  <xs:documentation>Identifies the id of the original message. NOTE: when inserting a MessageHistory this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Payload" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Contents of the message.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="QueryTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Time of of query selecting message to be processed.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="RetryCount" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Number of times message has been retried.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="RetryTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Time in the future at which to retry the message in error, applicable only to retryable error messages.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SendLockTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Time of attempting to lock before the sending the message.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SendLockedTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Time of after acquired lock lock before the sending the message.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="SendOrder" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Order in which to send messages. NOTE: when inserting a MessageHistory this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SendTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Time of completion of sending the message.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SenderRefID" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Optional sender reference set at message send time.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Status" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Message status: 10-Acked; 11-Error cleared; 12-Error retried; 13-Skipped NOTE: when inserting a MessageHistory this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="User" nillable="true" type="tns1:User">
                <xs:annotation>
                  <xs:documentation>The user who created this message.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Workflow" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Table for workflow definitions</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="ActiveState" nillable="true" type="tns2:WorkflowActiveState">
                <xs:annotation>
                  <xs:documentation>Specific state of this workflow if active (e.g. running, waitmanual, waitactivity).</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Caller" nillable="true" type="tns1:Workflow">
                <xs:annotation>
                  <xs:documentation>What workflow called this workflow</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CurrentAction" nillable="true" type="tns2:WorkflowActionType">
                <xs:annotation>
                  <xs:documentation>What action is the Workflow currently trying to take?</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CurrentBranch" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>ID of the branch the workflow is currently trying to execute.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CurrentStep" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>ID of the workflow's current step.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EnteredStep" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Time when the Workflow entered the current step</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ForceTimeoutBranch" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>ID of the next workflow timeout branch to take.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Handler" nillable="true" type="tns2:WorkflowHandler">
                <xs:annotation>
                  <xs:documentation>What infrastructure handles this Workflow? NOTE: when inserting a Workflow this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LogEntryCounter" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Counter for assigning a sort order to log entries</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Message" nillable="true" type="tns1:Message">
                <xs:annotation>
                  <xs:documentation>Integration message associated with this workflow</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="MessageHistory" nillable="true" type="tns1:MessageHistory">
                <xs:annotation>
                  <xs:documentation>Completed integration message associated with this workflow</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PreviousStep" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>ID of the step the workflow was on BEFORE the current step.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ProcessVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Version of the workflow process used, if this uses an internal workflow</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="State" nillable="true" type="tns2:WorkflowState">
                <xs:annotation>
                  <xs:documentation>State of this workflow (e.g., 'started', 'completed', etc.) NOTE: when inserting a Workflow this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="StepExecTime" nillable="true" type="soapenc:long">
                <xs:annotation>
                  <xs:documentation>Total system time spent actively processing the current step, in millis.  Does not include time spent waiting on triggers, activities, or timeouts</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TestTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>What time the Workflow thinks it is</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TimeoutTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date/time when current step will time out.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TriggerInvoked" nillable="true" type="tns2:WorkflowTriggerKey">
                <xs:annotation>
                  <xs:documentation>Marks the key of a Trigger that was invoked, or null</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="BCWorkflow" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>BC workflows</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:Workflow">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AgencyBillWorkflow" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Workflow for AgencyBill</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:BCWorkflow">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AgencyCycleProcess" nillable="true" type="tns1:AgencyCycleProcess">
                <xs:annotation>
                  <xs:documentation>blah</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AgencyCycleProcess" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Agency Bill Statement Process</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AgencyBillCycle" nillable="true" type="tns1:AgencyBillCycle">
                <xs:annotation>
                  <xs:documentation>Pointer back to the cycle that this workflow is doing the agency plan processing for.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AgencyBillWorkflow" nillable="true" type="tns1:AgencyBillWorkflow">
                <xs:annotation>
                  <xs:documentation>Workflow</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>The currency used by this entity's silo. NOTE: when inserting a AgencyCycleProcess this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Dunning1Sent" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Defines whether or not a first dunning letter has been sent for this cycle.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Dunning2Sent" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Defines whether or not a second dunning letter has been sent for this cycle.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="GenPastDueExceptionDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date in this cycle to generate a past due exception.  Calculated from StatementInvoice.EventDate             and AgencyBillPlan.PaymentTermsInDays.  Null if no past due exception should be generated.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="GenPromiseExceptionDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date in this cycle to generate a promise exception if no promise has been received for this cycle.             Calculcated from StatementInvoice.EventDate and AgencyBillPlan.DaysUntilPromiseExceptionGen.  Null if             no promise reminder should be sent.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="PastDueExceptionDismissed" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>True when a payment past due exception has been dismissed for this cycle.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="PastDueExceptionGenerated" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Defines whether or not a past due exception has been generated for this cycle.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PaymentPastDueComments" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>User-inputted comments about past due exception</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="PromiseExceptionDismissed" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>True when a promise exception has been dismissed for this cycle.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="PromiseExceptionGenerated" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Defines whether or not a promise exception has been generated for this cycle.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PromisePastDueComments" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>User-inputted comments about the missing promise exception</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="PromiseReminderSent" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Defines whether or not a promise reminder has been sent for this cycle.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SendDunning1Date" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date in this cycle to send a dunning1 letter if the statement was not paid.  Calculated from             StatementInvoice.EventDate and AgencyBillPlan.DaysUntilFirstDunningSent.  Null if no dunning1 letter should             be sent.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SendDunning2Date" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date in this cycle to send a dunning2 letter if the statement was not paid.  Calculated from             StatementInvoice.EventDate and AgencyBillPlan.DaysUntilSecondDunningSent.  Null if no dunning2 letter should             be sent.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SendPromiseReminderDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date in this cycle to send a promise reminder if no promise has been received for this cycle.             Calculated from StatementInvoice.EventDate and AgencyBillPlan.PromiseDueInDays.  Null if             no promise reminder should be sent.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SendStatementDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date in this cycle to send out a statement.  Calculated from StatementInvoice.EventDate             and AgencyBillPlan.DaysAfterCycleCloseToSendStmt.  Null if no statement should be sent.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="StatementSent" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Defines whether or not a statement has been sent for this cycle.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AccountInvoice" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A direct bill invoice for an Account</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:Invoice">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Account" nillable="true" type="tns1:Account"/>
              <xs:element maxOccurs="1" minOccurs="0" name="ColOutstandingAmount" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>The outstanding amount on the invoice's account's collateral at the moment the invoice is billed.  Immutable field</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ColRemainingBalance" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>The remaining balance on the invoice's account's collateral at the moment the invoice is billed.  Immutable field</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ColUnappliedAmount" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>The unapplied amount on the invoice's account's collateral at the moment the invoice is billed.  Immutable field</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OutstandingAmount" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>The outstanding amount on the invoice's account at the moment the invoice is billed.  Immutable field</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="RemainingBalance" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>The remaining balance on the invoice's account at the moment the invoice is billed.  Immutable field</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="UnappliedAmount" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>The unapplied amount on the invoice's account (does not include unapplied for the account's policies) at the moment the invoice is billed.  Immutable field</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfInvoice" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:Invoice[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="InvoiceStream" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>An InvoiceStream is a stream of invoices for an Account or a Producer.  Invoices from different streams   will not be combined even if the invoices are billed on the same day. The stream's periodicity determines the   period of time between invoices in the stream (monthly, every-week, etc.).</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Account" nillable="true" type="tns1:Account">
                <xs:annotation>
                  <xs:documentation>The payer of Invoices in this stream if the Invoices are paid by an Account.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="CreationOrder" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>The order of creation among streams having the same Payer, Periodicity, and Policy.       Used for automatic stream selection when there is more than one matching stream for a charge.       Also used for disambiguation among display names.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>The currency used by this entity's silo. NOTE: when inserting a InvoiceStream this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Description" nillable="true" type="soapenc:string"/>
              <xs:element maxOccurs="1" minOccurs="0" name="Invoices" nillable="true" type="tns1:ArrayOfInvoice">
                <xs:annotation>
                  <xs:documentation>The list of invoices that this InvoiceStream holds.  (Note that the database level 'owner' of all of     the invoices in this array is the invoice payer.)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OverridingBillDateOrDueDateBilling" nillable="true" type="tns2:BillDateOrDueDateBilling">
                <xs:annotation>
                  <xs:documentation>An override of the payer's setting for whether the anchor dates are the dates invoices are sent or due.     If BillDateBilling, the anchor dates are the dates invoices are sent (Invoice.EventDate).     If DueDateBilling the anchor dates are the dates invoices are due (Invoice.PaymentDueDate).     If setting OverridingBillDateOrDueDateBilling makes the stream switch between due date and bill date billing, the     stream recreates its planned non-ad-hoc invoices to reflect the new setting.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OverridingFirstAnchorDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>An override of the payer's first invoicing anchor date for the stream's periodicity.     The anchor date determines the invoicing day of month, day of week, etc. This date should fall on the     desired invoicing day of month or day of week. If the stream is using DueDateBilling, this date     determines the invoice due date; if the stream is using BillDateBilling, this date determines the invoice     send (event) date. If the invoice payer does not send invoices on a non-business day, the     target bill (send) date will be adjusted to be a business day using the payer's method of adjusting     dates to a business day.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OverridingInvoicingLeadTime" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>An override of the payer's settings for the invoicing lead time.  The invoicing lead time is     the number of days from the invoicing send (bill) date to the invoice due date.  If OverridingInvoicingLeadTime     is set, it is used as the lead time for invoices in the stream.  If it is not set, then the payer's lead     time for the stream's payment instrument determines the lead time for invoices in the stream.     If setting OverridingInvoicingLeadTime makes the stream have a new invoicing lead time, the     stream recreates its planned non-ad-hoc invoices to reflect the new setting.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OverridingPaymentInstrument" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>An override of the payer's default payment instrument.     If setting OverridingPaymentInstrument makes the stream have a new invoicing lead time, the     stream recreates its planned non-ad-hoc invoices to reflect the new setting. NOTE: value is the PublicId of the PaymentInstrument.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OverridingSecondAnchorDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>An override of the payer's second invoicing anchor date for the stream's periodicity.     The second anchor date determines the second invoicing day for periodicities such as twice-per-month     that need two anchor dates.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Periodicity" nillable="true" type="tns2:Periodicity">
                <xs:annotation>
                  <xs:documentation>The stream's Periodicity determines the period of time between invoices in the stream. NOTE: when inserting a InvoiceStream this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Policy" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The stream is for this policy if the payer is an Account that uses policy-level billing.     This is null if the payer is an Account that does not use policy-level billing or if the payer is a Producer. NOTE: value is the PublicId of the Policy.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Producer" nillable="true" type="tns1:Producer">
                <xs:annotation>
                  <xs:documentation>The payer of Invoices in this stream if the Invoices are paid by a Producer.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Invoice" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>An invoice for a TAccountOwner</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element name="AdHoc" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether or not the invoice is an ad-hoc invoice, such as invoices created for catch-up invoicing.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Amount" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>The amount of the invoice</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AmountDue" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>The amount due on the invoice</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>The currency used by this entity's silo. NOTE: when inserting a Invoice this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Description" nillable="true" type="soapenc:string"/>
              <xs:element name="EventDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date of the event NOTE: when inserting a Invoice this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="InvoiceNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The human-readable number for this invoice NOTE: when inserting a Invoice this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InvoiceStream" nillable="true" type="tns1:InvoiceStream"/>
              <xs:element name="NumResends" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>The number of times an invoice is resent</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="PaymentDueDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date that the invoice is due NOTE: when inserting a Invoice this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Status" nillable="true" type="tns2:InvoiceStatus">
                <xs:annotation>
                  <xs:documentation>null NOTE: when inserting a Invoice this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="DirectBillPaymentItem" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Stores values to be applied to an invoice item as part of an Direct bill Payment</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:BasePaymentItem">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ChrgePaidFromAcctCtx" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Context for ChargePaidFromAccount</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ChargeInvoicingCtx">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="DirectBillPaymentItem" nillable="true" type="tns1:DirectBillPaymentItem">
                <xs:annotation>
                  <xs:documentation>Reference back to the DirectBill Payment Item  NOTE: when inserting a ChrgePaidFromAcctCtx this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FromAccount" nillable="true" type="tns1:Account">
                <xs:annotation>
                  <xs:documentation>The Account that is paying this Charge NOTE: when inserting a ChrgePaidFromAcctCtx this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ProdWriteoffContainer" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A writeoff of negative funds in the Producer unapplied t-account.  This class contains a ProducerWriteoff transaction.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:Writeoff">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Producer" nillable="true" type="tns1:Producer">
                <xs:annotation>
                  <xs:documentation>The producer on which the writeoff will be executed. NOTE: when inserting a ProdWriteoffContainer this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfItemCommissionWriteoff" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:ItemCommissionWriteoff[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ZeroCmsnEarnedMarker" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Designates the PaymentItem was used to earn commission on the designated ItemCommission, but because there was no reserve at                 the time, no txn was created. This entity is conceptually equivalent to a zero-dollar transaction.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>The currency used by this entity's silo. NOTE: when inserting a ZeroCmsnEarnedMarker this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfZeroCmsnEarnedMarker" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:ZeroCmsnEarnedMarker[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ItemCommission" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Contains information about an {invoice item, policy producer code} pair, including the commission
        amount of the invoice item (which can change when there is a commission override) and the current amount of
        commission paid on the invoice item (which changes whenever there is a payment against the invoice item)
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CmsnPayableAmount" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>The amount of commission that has been made payable on this ItemCommission.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CommissionAmount" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>Denormalization of the total commission amount that was submitted for this ItemCommission</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CommissionWriteoffApprovables" nillable="true" type="tns1:ArrayOfItemCommissionWriteoff">
                <xs:annotation>
                  <xs:documentation>Array of the commission writeoffs against this item commissions</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>The currency used by this entity's silo. NOTE: when inserting a ItemCommission this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PaidCommission" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>Denormalization of the total commission paid on this ItemCommission</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PayableCriteria" nillable="true" type="tns2:PayableCriteria">
                <xs:annotation>
                  <xs:documentation>The criteria by which the item commission will earn direct bill commission. Note that if this is null, the system will use the PayableCriteria from the charge commission instead NOTE: when inserting a ItemCommission this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicyRole" nillable="true" type="tns2:PolicyRole">
                <xs:annotation>
                  <xs:documentation>Denorm of the PolicyRole from the PolicyCommission table NOTE: when inserting a ItemCommission this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="WrittenOffCommission" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>Denormalization of the amount of commission that was written off for this ItemCommission</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ZeroCmsnEarnedMarkers" nillable="true" type="tns1:ArrayOfZeroCmsnEarnedMarker">
                <xs:annotation>
                  <xs:documentation>Array of joins to PaymentItems that tried to earn commission, but there was no reserve.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ItemCommissionWriteoff" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Entity that manages authority limit checking and approval of Commission Writeoffs against a single Invoice Item</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:CommissionWriteoff">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="CmsnAgencyPmntItem" nillable="true" type="tns1:AgencyPaymentItem">
                <xs:annotation>
                  <xs:documentation>This writeoff may be associated with an agency payment item, and if it is, it will be reversed along with the payment item</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ItemCommission" nillable="true" type="tns1:ItemCommission">
                <xs:annotation>
                  <xs:documentation>The Item Commission targeted for this writeoff</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="InvoiceItemCommissionRateOverride" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Override of commission rate for a particular PolicyRole on an InvoiceItem</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:CommissionRateOverride">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="InvoiceItem" nillable="true" type="tns1:InvoiceItem"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CommissionRateOverride" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Override of commission rate for a particular PolicyRole</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Rate" nillable="true" type="soapenc:decimal">
                <xs:annotation>
                  <xs:documentation>The commission rate to use for this individual charge and PolicyRole instead of commission plan defaults NOTE: when inserting a CommissionRateOverride this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Role" nillable="true" type="tns2:PolicyRole">
                <xs:annotation>
                  <xs:documentation>The producer code's role on the policy period associated with the charge NOTE: when inserting a CommissionRateOverride this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ChargeCommissionRateOverride" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Override of commission rate for a particular PolicyRole on a Charge</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:CommissionRateOverride">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Charge" nillable="true" type="tns1:Charge"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfChargeCommissionRateOverride" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:ChargeCommissionRateOverride[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfInvoiceItem" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:InvoiceItem[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ProducerCode" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A producer code</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element name="Active" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether or not this producer code is active for the producer.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Code" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The code for this producer code NOTE: when inserting a ProducerCode this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="CommissionPlan" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The commission plan to use for calculating commission for this producer code. NOTE: when inserting a ProducerCode this field must be non-null. NOTE: value is the PublicId of the CommissionPlan.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>The currency used by this entity's silo. NOTE: when inserting a ProducerCode this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Charge" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A charge against a policy</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element name="Amount" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>The amount of the charge NOTE: when inserting a Charge this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ChargeGroup" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>A String that logically groups this charge, e.g., 'collision', 'comprehensive'; this is unrelated to the charge's ChargePattern</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="ChargePattern" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The pattern which created this charge NOTE: when inserting a Charge this field must be non-null. NOTE: value is the PublicId of the ChargePattern.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CommissionRateOverrides" nillable="true" type="tns1:ArrayOfChargeCommissionRateOverride"/>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>The currency used by this entity's silo. NOTE: when inserting a Charge this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="HoldReleaseDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Release date for the hold</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="HoldStatus" nillable="true" type="tns2:ChargeHoldStatus">
                <xs:annotation>
                  <xs:documentation>The hold status of this charge.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InvoiceItems" nillable="true" type="tns1:ArrayOfInvoiceItem"/>
              <xs:element maxOccurs="1" minOccurs="0" name="OverridingInvoiceStream" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The overriding invoice stream for this charge. NOTE: value is the PublicId of the InvoiceStream.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OverridingPayerContainer" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>InvoicePayer that is used instead of the charge's owner as the default payer for the charge's invoice items NOTE: value is the PublicId of the TAccountContainer.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OverridingPrimaryCommissionReceiver" nillable="true" type="tns1:ProducerCode">
                <xs:annotation>
                  <xs:documentation>Commission Receiver that is used instead of the default PolicyCommission for this charge's primary invoice items.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="SkipInvoiceItemCreation" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>If true, no invoice items will be created by the internal code for this charge, assumes that items will be created in Payment Plan plugin or passed in with the Billing Instruction. If false, invoice items are created by the internal code.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="WrittenDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date the charge was sent by PAS</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ChargeCommission" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Maps PolicyCommissions to the Charges with which their commission is calculated.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Charge" nillable="true" type="tns1:Charge"/>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>The currency used by this entity's silo. NOTE: when inserting a ChargeCommission this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PayableCriteria" nillable="true" type="tns2:PayableCriteria">
                <xs:annotation>
                  <xs:documentation>The criteria by which this charge will earn direct bill commission. NOTE: when inserting a ChargeCommission this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicyCommission" nillable="true" type="tns1:PolicyCommission"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ChargeCommissionWriteoff" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Entity that manages authority limit checking and approval of Charge level Commission Writeoffs</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:CommissionWriteoff">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="ChargeCommission" nillable="true" type="tns1:ChargeCommission">
                <xs:annotation>
                  <xs:documentation>The ChargeCommission instance associated with this commission writeoff NOTE: when inserting a ChargeCommissionWriteoff this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ChargeBilled" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Issued when some portion of a charge is billed. Moves the amount billed from the charge type's "Unbilled" T-Account to its "Billed" T-Account.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ChargeInvoicingTxn">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ChargeDue" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Issued when some portion of a charge becomes due. Moves the amount due from the charge type's "Billed" T-Account to its "Due" T-Account.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ChargeInvoicingTxn">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ChargePaidFromProducer" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Issued when some portion of a charge is paid as a result of a payment from a producer.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ChargePaidFromUnapplied">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ChargePaidFromAccount" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Issued when some portion of a charge is paid as a result of a payment from an account.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ChargePaidFromUnapplied">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ChargePaidFromUnapplied" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Issued when some portion of a charge is paid as a result of a payment from an unapplied account.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ChargeInvoicingTxn">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="CommissionAmount" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>The commission amount of this transaction.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="InitialChargeTxn" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Issued when a new charge is added to a policy or account. For immediate charges, adds the charge amount to the charge type's "Revenue" and "Unbilled" T-Accounts. For pass-through charges, additionally adds the charge amount to the charge type's "Expense" and "Reserve" T-Accounts. For pro-rata charges, adds the charge amount to the charge type's "Unearned" and "Unbilled" T-Accounts.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ChargeInstanceTxn">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="CommissionAmount" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>The total commission percentage of this transaction.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ProRataChargeEarned" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Issued when some portion of a pro-rata charge is earned. Moves the amount earned from the charge type's "Unearned" T-Account to its "Earned" T-Account.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ChargeInstanceTxn">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ChargeExpenseRollup" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Issued when a charge revenue t-account is rolled up from the policy to account.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ChargePatternTxn">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ChargeWriteoffRollup" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Issued when the charge writeoff t-account is rolled up from the policy to account.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ChargePatternTxn">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ChargeRevenueRollup" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Issued when a charge revenue t-account is rolled up from the policy to account.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ChargePatternTxn">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ChargeReserveRollup" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Issued when a charge revenue t-account is rolled up from the policy to account.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ChargePatternTxn">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ChargeNegWrtoffRollup" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Issued when the charge negative writeoff t-account is rolled up from the policy to account.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ChargePatternTxn">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ProRataCharge" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:extension base="tns1:ChargePattern">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Periodicity" nillable="true" type="tns2:Periodicity">
                <xs:annotation>
                  <xs:documentation>The periodicity of transactions -- Weekly, Monthly, Quarterly, etc. NOTE: when inserting a ProRataCharge this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ImmediateCharge" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:extension base="tns1:ChargePattern">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="RecaptureCharge" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:extension base="tns1:ChargePattern">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PassThroughCharge" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:extension base="tns1:ChargePattern">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CollateralCharge" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:extension base="tns1:ChargePattern">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="MultiTAccountPattern" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A pattern for a t-account that can appear multiple times per t-account owner</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:TAccountPattern">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ChargeTAccountPattern" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype used when t-account pattern generated as part of a charge pattern</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:SingleTAccountPattern">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="ChargePattern" nillable="true" type="tns1:ChargePattern">
                <xs:annotation>
                  <xs:documentation>The related charge NOTE: when inserting a ChargeTAccountPattern this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Suffix" nillable="true" type="tns2:TAccountPatternSuffix">
                <xs:annotation>
                  <xs:documentation>Suffix used for t-account patterns generated by charge patterns NOTE: when inserting a ChargeTAccountPattern this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="SingleTAccountPattern" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A pattern for a t-account that should only appear once per t-account owner</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:TAccountPattern">
            <xs:sequence>
              <xs:element name="ChargeRollup" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether or not the t-account is a charge rollup t-account</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="TAccountLazyLoaded" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether or not the t-account is added lazily to t-account owners</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="TAccountPattern" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A pattern for a t-account.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="TAccountName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The unique name of this t-account pattern. NOTE: when inserting a TAccountPattern this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TAccountOwnerPattern" nillable="true" type="tns1:TAccountOwnerPattern">
                <xs:annotation>
                  <xs:documentation>The related t-account owner pattern.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TAccountType" nillable="true" type="tns2:TAccountType">
                <xs:annotation>
                  <xs:documentation>null NOTE: when inserting a TAccountPattern this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfTAccountPattern" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:TAccountPattern[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="TAccountOwnerPattern" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A pattern for a t-account owner.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="TAccountOwner" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The type of t-account owner. NOTE: when inserting a TAccountOwnerPattern this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TAccounts" nillable="true" type="tns1:ArrayOfTAccountPattern"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ChargePattern" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A pattern for a charge.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Category" nillable="true" type="tns2:ChargeCategory"/>
              <xs:element name="ChargeCode" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The unique code of this charge pattern NOTE: when inserting a ChargePattern this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="ChargeName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The non-unique name of this charge pattern NOTE: when inserting a ChargePattern this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="InUse" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Internal flag used to determine whether or not this charge pattern is used by a charge</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="IncludedInEquityDating" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether charges of this charge pattern are considered in equity dating calculations</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="InternalCharge" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Flag used to determine whether or not this charge pattern is internal, and therefore cannot be removed/changed</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InvoiceTreatment" nillable="true" type="tns2:InvoiceTreatment">
                <xs:annotation>
                  <xs:documentation>How to invoice this charge.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Priority" nillable="true" type="tns2:ChargePriority"/>
              <xs:element name="Reversible" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Used to determine whether or not charges using this charge pattern can be reversed</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TAccountOwnerPattern" nillable="true" type="tns1:TAccountOwnerPattern">
                <xs:annotation>
                  <xs:documentation>The t-account owner pattern that will use this type of charge NOTE: when inserting a ChargePattern this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="TAccountsLazyLoaded" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether or not the T-accounts required for this charge are added lazily to T-account owners</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PaymentInstrument" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A PaymentInstrument is a financial instrument that can be or has been used to make a payment.     If the PaymentInstrument points at an Account or a Producer, the payment instrument can be used to request more payments.     For example, a credit card payment instrument that has enough information to be used to request     more payments from the payment system can have an Account set on it.     We also request money from the Responsive (PaymentMethod) payment instruments by asking the Payer to send the payment and waiting for     them to send the money.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Account" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The Account which has this instrument as one of its available instruments for initiating payments.             A PaymentInstrument may only belong to one Account or Producer (or neither), so if this field is set,             Producer must be null. NOTE: value is the PublicId of the Account.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Description" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Description of this PaymentInstrument.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Immutable" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Once set, this flag indicates that the PaymentInstrument can no longer be modified or removed.  It is used for singleton PaymentMethods like Cash.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PaymentMethod" nillable="true" type="tns2:PaymentMethod">
                <xs:annotation>
                  <xs:documentation>The method of payment used by this instrument (credit card, EFT, etc) NOTE: when inserting a PaymentInstrument this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Producer" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The Producer which has this instrument as one of its available instruments for initiating payments.             A PaymentInstrument may only belong to one Account or Producer (or neither), so if this field is set,             Account must be null. NOTE: value is the PublicId of the Producer.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Token" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The identifier of the PaymentInstrument in the external payment system</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="SuspensePayment" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A payment made against an account or policy that does not exist</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AccountNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The Account that the user intends the payment to later be applied to.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Amount" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>The total amount of the payment NOTE: when inserting a SuspensePayment this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>The currency used by this entity's silo. NOTE: when inserting a SuspensePayment this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Description" nillable="true" type="soapenc:string"/>
              <xs:element maxOccurs="1" minOccurs="0" name="InvoiceNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The related invoice</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OfferNumber" nillable="true" type="soapenc:string"/>
              <xs:element maxOccurs="1" minOccurs="0" name="OfferOption" nillable="true" type="soapenc:string"/>
              <xs:element name="PaymentDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date of the payment NOTE: when inserting a SuspensePayment this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PaymentInstrument" nillable="true" type="tns1:PaymentInstrument">
                <xs:annotation>
                  <xs:documentation>The PaymentInstrument associated with this payment receipt. NOTE: when inserting a SuspensePayment this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicyNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The Policy that the user intends the payment to later be applied to.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ProducerName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The Produer that the user intends the payment to later be applied to.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="RefNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The reference number for this payment.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReportingGroup" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The reporting group assigned, if any NOTE: value is the PublicId of the ReportingGroup.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="SuspPymtTAcctContainer" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:extension base="tns1:TAccountContainer">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="SuspensePayment" nillable="true" type="tns1:SuspensePayment"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ProdCodeTAcctContainer" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:extension base="tns1:TAccountContainer">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="ProducerCode" nillable="true" type="tns1:ProducerCode"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CollateralRequirement" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A collateral requirement</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CashAllocated" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>The amount of cash allocated to the requirement</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Collateral" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The collateral the requirement is associated with NOTE: value is the PublicId of the Collateral.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Compliance" nillable="true" type="tns2:ComplianceStatus">
                <xs:annotation>
                  <xs:documentation>Whether the Collateral is compliant</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>The currency used by this entity's silo. NOTE: when inserting a CollateralRequirement this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="EffectiveDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date the Requirement becomes required NOTE: when inserting a CollateralRequirement this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ExpirationDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date the Requirement could expire</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LOCAllocated" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>The amount of letters of credit allocated to the requirement</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Policy" nillable="true" type="tns1:Policy">
                <xs:annotation>
                  <xs:documentation>The policy, if any, the requirement is associated with</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicyPeriod" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The policy period, if any, the requirement is associated with NOTE: value is the PublicId of the PolicyPeriod.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Required" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>The amount of the requirement</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="RequirementName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Name of the requirement NOTE: when inserting a CollateralRequirement this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="RequirementType" nillable="true" type="tns2:CollateralRequirementType">
                <xs:annotation>
                  <xs:documentation>The type of requirement NOTE: when inserting a CollateralRequirement this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Segregated" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>If true, the collateral requirement holds its own bucket of money</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CollReqTAcctContainer" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:extension base="tns1:ChargeTAcctContainer">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="CollateralRequirement" nillable="true" type="tns1:CollateralRequirement"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AcctTAcctContainer" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:extension base="tns1:ChargeTAcctContainer">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Account" nillable="true" type="tns1:Account"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PolTAcctContainer" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:extension base="tns1:ChargeTAcctContainer">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicyPeriod" nillable="true" type="tns1:PolicyPeriod"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="LetterOfCredit" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A letter of Credit</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element name="Amount" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>The amount of the LOC NOTE: when inserting a LetterOfCredit this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="BankName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The Bank holding the LOC NOTE: when inserting a LetterOfCredit this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Collateral" nillable="true" type="tns1:Collateral">
                <xs:annotation>
                  <xs:documentation>The collateral the LOC is associated with</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>The currency used by this entity's silo. NOTE: when inserting a LetterOfCredit this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ExpirationDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>When the LOC expires</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="LOCID" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The ID of the LOC NOTE: when inserting a LetterOfCredit this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Status" nillable="true" type="tns2:LetterOfCreditStatus">
                <xs:annotation>
                  <xs:documentation>The status of the LOC</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfLetterOfCredit" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:LetterOfCredit[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfCollateralRequirement" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:CollateralRequirement[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Collateral" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A collateral bucket</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Account" nillable="true" type="tns1:Account">
                <xs:annotation>
                  <xs:documentation>The account the collateral is on</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="ChargeHeld" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Denormalized field. True if at least one charge on this collateral is currently held. Only valid for database queries</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Compliance" nillable="true" type="tns2:ComplianceStatus">
                <xs:annotation>
                  <xs:documentation>Whether the Collateral is compliant</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>The currency used by this entity's silo. NOTE: when inserting a Collateral this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LetterOfCredits" nillable="true" type="tns1:ArrayOfLetterOfCredit">
                <xs:annotation>
                  <xs:documentation>LOCs on this collateral</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Requirements" nillable="true" type="tns1:ArrayOfCollateralRequirement">
                <xs:annotation>
                  <xs:documentation>Requirements on this collateral</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TotalCashValueAtRequirements" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>the denormalized value of the total cash held in segregated requirements</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TotalLOCValue" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>the total value of the current LOCs on file</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CollTAcctContainer" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:extension base="tns1:ChargeTAcctContainer">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Collateral" nillable="true" type="tns1:Collateral"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ChargeTAcctContainer" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>TAccountContainers that can own charges</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:TAccountContainer">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BilledDenorm" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>Denormalized unbilled balance for this t-account container.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DueDenorm" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>Denormalized unbilled balance for this t-account container.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ExpenseDenorm" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>Denormalized expense balance for this t-account container.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="NegativeWriteoffDenorm" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>Denormalized negative writeoff balance for this t-account container.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReserveDenorm" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>Denormalized reserve balance for this t-account container.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="RevenueDenorm" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>Denormalized revenue balance for this t-account container.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="UnbilledDenorm" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>Denormalized unbilled balance for this t-account container.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="UnearnedDenorm" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>Denormalized unearned balance for this t-account container.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="WriteoffExpenseDenorm" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>Denormalized writeoff balance for this t-account container.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ProducerTAcctContainer" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:extension base="tns1:TAccountContainer">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Producer" nillable="true" type="tns1:Producer"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PolicyCmsnTAcctContainer" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:extension base="tns1:TAccountContainer">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicyCommission" nillable="true" type="tns1:PolicyCommission"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ChargeCmsnTAcctContainer" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:extension base="tns1:TAccountContainer">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="ChargeCommission" nillable="true" type="tns1:ChargeCommission"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="TAccountContainer" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Provides an array of t-accounts to a TAccountOwner.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>The currency used by this entity's silo. NOTE: when inserting a TAccountContainer this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ChargePatternCtx" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Context for charge pattern transactions.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ChargePattern" nillable="true" type="tns1:ChargePattern">
                <xs:annotation>
                  <xs:documentation>null NOTE: when inserting a ChargePatternCtx this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>The currency used by this entity's silo. NOTE: when inserting a ChargePatternCtx this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TAccountContainer" nillable="true" type="tns1:TAccountContainer">
                <xs:annotation>
                  <xs:documentation>Link to related T-Account NOTE: when inserting a ChargePatternCtx this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Transaction" nillable="true" type="tns1:ChargePatternTxn">
                <xs:annotation>
                  <xs:documentation>Reference to ChargePatternTxn</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ChargePatternTxn" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Base type for transactions relating to a ChargePattern, but not an individual Charge.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ChargeTransaction">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="ChargePatternCtx" nillable="true" type="tns1:ChargePatternCtx">
                <xs:annotation>
                  <xs:documentation>Related context entity</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CmsnsExpenseRollupCtx" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Context for CmsnsExpenseRollup transactions.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CmsnRollupPolicyCommission" nillable="true" type="tns1:PolicyCommission">
                <xs:annotation>
                  <xs:documentation>null NOTE: when inserting a CmsnsExpenseRollupCtx this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>The currency used by this entity's silo. NOTE: when inserting a CmsnsExpenseRollupCtx this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Transaction" nillable="true" type="tns1:CmsnsExpenseRollup">
                <xs:annotation>
                  <xs:documentation>Reference to CmsnsExpenseRollup transaction</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CmsnsExpenseRollup" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Issued as part of the rollup process. Moves the balance of CommissionExpense at the policy level up to the account.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:Transaction">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="CmsnsExpenseRollupCtx" nillable="true" type="tns1:CmsnsExpenseRollupCtx">
                <xs:annotation>
                  <xs:documentation>Related context entity</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CollateralDisbPaid" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Issued when a collateral is disbursed.  Subtracts amount from collateral held and collateral reserve</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:CollateralTransaction">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CollateralDrawdown" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Issued when a collateral is drawndown to the account.  Move amount from Collateral Reserve to Default unapplied and           moves amount from Collateral Held to Cash</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:CollateralTransaction">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CollReqTransfer" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Move money from being segregated on one requirement to being segregated on another collateral requirement</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:CollReqTransaction">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CollReqSegregate" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Segregate money in the collateral requirement</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:CollReqTransaction">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CollReqUnSegregate" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Move money from the collateral requirement to the collateral</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:CollReqTransaction">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CollReqTransaction" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Base type for collateral requirement transactions</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:CollateralTransaction">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="FundsXferAcctToColl" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>DEPRECATED: Issued when funds in Unapplied are transferred from an account to the account's collateral.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:CollateralTransaction">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CollateralDisbursement" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A disbursement from Collateral</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:Disbursement">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Collateral" nillable="true" type="tns1:Collateral">
                <xs:annotation>
                  <xs:documentation>The associated collateral, if applicable</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="SuspenseDisbursement" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A disbursement from a Suspense Payment</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:Disbursement">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="SuspensePayment" nillable="true" type="tns1:SuspensePayment">
                <xs:annotation>
                  <xs:documentation>The associated suspense payment, if applicable</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AgencyCyclePromise" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>An agency promise made against a agency bill cycle</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:AgencyCycleDist">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AppliedDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date this promise was applied.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="DirectBillPayment" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Dist for direct bill payments</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:BaseDist">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ZeroDollarAMR" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>An AgencyMoneyReceived used for Credit Distributions, always has $0 amount</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:AgencyBillMoneyRcvd">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AgencyBillMoneyRcvd" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Money received from an external source as a payment.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:PaymentMoneyReceived">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Producer" nillable="true" type="tns1:Producer">
                <xs:annotation>
                  <xs:documentation>Reference to the paying Agency. NOTE: when inserting a AgencyBillMoneyRcvd this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ZeroDollarReversal" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A DirectBillMoneyReceived used for paying off reversals with reversed and vise versa.  The amount is always $0.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ZeroDollarDMR">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ZeroDollarDMR" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A DirectBillMoneyReceived used for credit distributions.  The amount is always $0.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:DirectBillMoneyRcvd">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="DirectBillMoneyRcvd" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Money received from an external source as a payment.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:PaymentMoneyReceived">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Account" nillable="true" type="tns1:Account">
                <xs:annotation>
                  <xs:documentation>Reference to the paying Account. NOTE: when inserting a DirectBillMoneyRcvd this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Invoice" nillable="true" type="tns1:Invoice">
                <xs:annotation>
                  <xs:documentation>Reference to the Invoice to target during initial distribution.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicyPeriod" nillable="true" type="tns1:PolicyPeriod">
                <xs:annotation>
                  <xs:documentation>Reference to the PolicyPeriod to target during initial distribution.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PaymentMoneyReceived" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Money received from an external source as a payment.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:BaseMoneyReceived">
            <xs:sequence>
              <xs:element name="Amount" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>The total amount of the payment NOTE: when inserting a PaymentMoneyReceived this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Description" nillable="true" type="soapenc:string"/>
              <xs:element maxOccurs="1" minOccurs="0" name="PaymentInstrument" nillable="true" type="tns1:PaymentInstrument">
                <xs:annotation>
                  <xs:documentation>The PaymentInstrument associated with this payment receipt. NOTE: when inserting a PaymentMoneyReceived this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="RefNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The reference number for this payment.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PromisedMoney" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Money promised as payment for a statement from a producer.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:BaseMoneyReceived">
            <xs:sequence>
              <xs:element name="Amount" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>The total amount of the promise NOTE: when inserting a PromisedMoney this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PromisingProducer" nillable="true" type="tns1:Producer">
                <xs:annotation>
                  <xs:documentation>Reference to the promising Agency. NOTE: when inserting a PromisedMoney this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="BaseMoneyReceived" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Money received from an external source.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AppliedDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date that this Money was executed (i.e., when a transaction was issued.) This field is set internally and should NOT be editable through the UI</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BaseDist" nillable="true" type="tns1:BaseDist">
                <xs:annotation>
                  <xs:documentation>The associated base dist if it exists</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>The currency used by this entity's silo. NOTE: when inserting a BaseMoneyReceived this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Name" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Optional name to identify this money and (if it exists) its associated distribution.  May be useful for identifying promises or saved distributions.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="ReceivedDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date that the funds associated with this AgencyMoneyReceived were physically received  (e.g., the date the check arrived in the mail).  This is not necessarily the date that the money was executed, but instead a customer supplied date about when they want to consider the money received.  This field should be editable through the UI NOTE: when inserting a BaseMoneyReceived this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReportingGroup" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The reporting group assigned, if any NOTE: value is the PublicId of the ReportingGroup.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReversalDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date on which the payment was reversed, if any. Null if the payment has not been reversed.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfBaseMoneyReceived" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:BaseMoneyReceived[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfBaseDistItem" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:BaseDistItem[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AgencySuspPmntItem" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Stores values to be applied to a suspense policy as part of an Agency Payment</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:BaseSuspPmntItem">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="DirectSuspPmntItem" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Stores values to be applied to a suspense policy as part of an Direct Bill Payment</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:BaseSuspPmntItem">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="BaseSuspPmntItem" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Stores values to be applied to a suspense policy as part of a Payment</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:BaseSuspDistItem">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AgencySuspPromiseItem" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Stores values to be applied to a suspense policy as part of an Agency Promise</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:BaseSuspDistItem">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="BaseSuspDistItem" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Base class for Agency Bill Suspense Payment Item and Agency Bill Suspense Promise Item: Stores values to be applied to policy period that does not yet exist.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:BaseNonReceivableDistItem">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="MatchingPolicy" nillable="true" type="tns1:PolicyPeriod">
                <xs:annotation>
                  <xs:documentation>Actual policy period that item was matched against. This is null until a match is found.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ModifiedFrom" nillable="true" type="tns1:BaseSuspDistItem">
                <xs:annotation>
                  <xs:documentation>Points to an existing AgencySuspDistItem being modified</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicyNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>String description or identifier of the not-yet-existing policy to which this suspense item should be applied. This can be null, in which case the Event Handler used by the batch process will have to use another mechanism to associate this with a PolicyPeriod, or perhaps just release it and use the funds for other reasons.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReleasedDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date that this suspense item was released. This will be null if the item isn't released.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CollateralPaymentItem" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Stores values to be applied to non-receivable collateral as part of a Payment</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:BaseNonReceivableDistItem">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="BaseNonReceivableDistItem" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Base class for payment of non-receivables</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="ActiveDist" nillable="true" type="tns1:BaseDist">
                <xs:annotation>
                  <xs:documentation>The Distribution that contains this non receivable Item if this item is active</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="CommissionAmountToApply" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>Commission amount entered for this item during distribution NOTE: when inserting a BaseNonReceivableDistItem this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>The currency used by this entity's silo. NOTE: when inserting a BaseNonReceivableDistItem this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ExecutedDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date that this suspense item was executed.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="GrossAmountToApply" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>Gross amount entered for this item during distribution NOTE: when inserting a BaseNonReceivableDistItem this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PaymentComments" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Comments entered for this item during distribution</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReversedDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date that this suspense item was reversed. This will be null if the item isn't reversed.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReversedDist" nillable="true" type="tns1:BaseDist">
                <xs:annotation>
                  <xs:documentation>The Distribution that contains this non receivable Item if the item is reversed</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfBaseNonReceivableDistItem" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:BaseNonReceivableDistItem[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="BaseDist" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Base class for Agency Cycle Dist and DB Dist</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BaseMoneyReceived" nillable="true" type="tns1:BaseMoneyReceived">
                <xs:annotation>
                  <xs:documentation>Reference to the active money of record that was received or promised for this distribution NOTE: when inserting a BaseDist this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BaseMoneyReceiveds" nillable="true" type="tns1:ArrayOfBaseMoneyReceived">
                <xs:annotation>
                  <xs:documentation>Set of money receiveds relating to this dist</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>The currency used by this entity's silo. NOTE: when inserting a BaseDist this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DistBeingModified" nillable="true" type="tns1:BaseDist">
                <xs:annotation>
                  <xs:documentation>Points to an existing BaseDist this distribution is modifying.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DistItems" nillable="true" type="tns1:ArrayOfBaseDistItem">
                <xs:annotation>
                  <xs:documentation>Set of non-reversed distribution items representing amount to apply to each invoice item being paid or promised by this distribution</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DistributedDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date that this distribution was initially distributed.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="NetDistributedToInvoiceItems" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>The total net amount distributed to BaseDistItem payment items excluding BaseSuspDistItem suspense items, which are counted separately. This field only counts the amount distributed on executed items. To get the net amount distributed including non-executed items, use property DistributedAmountForUnexecutedDist.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="NetInSuspense" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>The net suspense amount in this distribution. This field only counts the suspense amount on executed BaseSuspDistItem suspense items. To get the net suspense amount including non-executed suspense items, use property SuspenseAmountForUnexecutedDist.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="NonReceivableDistItems" nillable="true" type="tns1:ArrayOfBaseNonReceivableDistItem">
                <xs:annotation>
                  <xs:documentation>Set of distribution items representing amount to apply to non-receivables</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReversalDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date that this distribution was reversed.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReversedDistItems" nillable="true" type="tns1:ArrayOfBaseDistItem">
                <xs:annotation>
                  <xs:documentation>Set of reversed distribution items that are associated with this payment</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReversedNonReceivableDistItems" nillable="true" type="tns1:ArrayOfBaseNonReceivableDistItem">
                <xs:annotation>
                  <xs:documentation>Set of reversed distribution items representing amount to apply to non-receivables</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AgencyCycleDist" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Base class for Agency Cycle Payment and Agency Cycle Promise: handles the Agency Payment Items (including prefilling) and the Exception Items</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:BaseDist">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ProdPymtSentContext" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Context for ProducerPaymentSent transactions</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ProducerContext">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AcctNegativeWriteoff" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A negative writeoff against an account</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:NegativeWriteoff">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Account" nillable="true" type="tns1:Account">
                <xs:annotation>
                  <xs:documentation>The Account with which the negative writeoff is associated (to which the UnappliedFund belongs). NOTE: when inserting a AcctNegativeWriteoff this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="UnappliedFund" nillable="true" type="tns1:UnappliedFund">
                <xs:annotation>
                  <xs:documentation>The UnappliedFund against which the negative writeoff is made. NOTE: when inserting a AcctNegativeWriteoff this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfFundsTransferReversalApprovalActivity" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:FundsTransferReversalApprovalActivity[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="FundsXferApprActivity" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:extension base="tns1:ActivityCreatedByAppr">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="FundsTransfer" nillable="true" type="tns1:FundsTransfer">
                <xs:annotation>
                  <xs:documentation>The associated funds transfer for approval</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfFundsXferApprActivity" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:FundsXferApprActivity[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfTransferTxContext" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:TransferTxContext[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="FundsTransfer" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Creator of funds transfer transactions</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="ActivitiesCreatedByAppr" nillable="true" type="tns1:ArrayOfFundsXferApprActivity"/>
              <xs:element maxOccurs="1" minOccurs="0" name="Amount" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>Amount to transfer</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ApprovalDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date when the object was ultimately approved or rejected</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ApprovalStatus" nillable="true" type="tns2:ApprovalStatus">
                <xs:annotation>
                  <xs:documentation>The approval status of the object</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>The currency used by this entity's silo. NOTE: when inserting a FundsTransfer this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Reason" nillable="true" type="tns2:TransferReason">
                <xs:annotation>
                  <xs:documentation>the reason for the transfer</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="RequestingUser" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The user submitting the object for approval NOTE: when inserting a FundsTransfer this field must be non-null. NOTE: value is the PublicId of the User.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SourceProducer" nillable="true" type="tns1:Producer">
                <xs:annotation>
                  <xs:documentation>The t-account owner from which to transfer funds</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SourceUnapplied" nillable="true" type="tns1:UnappliedFund">
                <xs:annotation>
                  <xs:documentation>The unapplied fund from which to transfer funds</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TargetProducer" nillable="true" type="tns1:Producer">
                <xs:annotation>
                  <xs:documentation>The t-account owner to which to transfer funds</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TargetUnapplied" nillable="true" type="tns1:UnappliedFund">
                <xs:annotation>
                  <xs:documentation>The unapplied fund to which to transfer funds</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TransferDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date to make funds transfer</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TransferTxContexts" nillable="true" type="tns1:ArrayOfTransferTxContext">
                <xs:annotation>
                  <xs:documentation>The contexts for the transactions executed by this FundsTransfer entity.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="MultiTAccount" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A subtype of TAccount indicating that the t-account that can appear multiple times per t-account owner</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:TAccount">
            <xs:sequence>
              <xs:element name="CreationOrder" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>The sort order of multi t-accounts.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Description" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The the description that was given to this multi t-account at creation time. NOTE: when inserting a MultiTAccount this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="TAccount" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Logical bucket for a set of financial transactions</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BalanceDenorm" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>Denormalized current balance of the T-Account. Only valid for database queries. At all times, this balance should be equal to the sum of all "normal" line item amounts less the sum of all "opposite normal" line item amounts. For example, on a T-Account with a normal balance of debit, this column should equal the sum of all debit line items less the sum of all credit line items.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>The currency used by this entity's silo. NOTE: when inserting a TAccount this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TAccountContainer" nillable="true" type="tns1:TAccountContainer">
                <xs:annotation>
                  <xs:documentation>The container of this t-account</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TAccountPattern" nillable="true" type="tns1:TAccountPattern">
                <xs:annotation>
                  <xs:documentation>The pattern for this t-account NOTE: when inserting a TAccount this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="TransferTxContext" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Context for transactions involving a transfer between two entities.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>The currency used by this entity's silo. NOTE: when inserting a TransferTxContext this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FundsTransfer" nillable="true" type="tns1:FundsTransfer">
                <xs:annotation>
                  <xs:documentation>Funds Transfer funds that created this transaction and context</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SourceAccount" nillable="true" type="tns1:Account">
                <xs:annotation>
                  <xs:documentation>The source account</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SourceProducer" nillable="true" type="tns1:Producer">
                <xs:annotation>
                  <xs:documentation>The source producer</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SourceUnappliedTAccount" nillable="true" type="tns1:TAccount">
                <xs:annotation>
                  <xs:documentation>The source unapplied t-account NOTE: when inserting a TransferTxContext this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TargetAccount" nillable="true" type="tns1:Account">
                <xs:annotation>
                  <xs:documentation>The target account</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TargetProducer" nillable="true" type="tns1:Producer">
                <xs:annotation>
                  <xs:documentation>The target producer</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TargetUnappliedTAccount" nillable="true" type="tns1:TAccount">
                <xs:annotation>
                  <xs:documentation>The target unapplied t-account NOTE: when inserting a TransferTxContext this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Transaction" nillable="true" type="tns1:TransferTransaction">
                <xs:annotation>
                  <xs:documentation>Reference to transaction</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="TransferTransaction" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Issued when money in unapplied funds is transferred between two accounts or producers, or between two unapplied funds on the same account.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:Transaction">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Reason" nillable="true" type="tns2:TransferReason">
                <xs:annotation>
                  <xs:documentation>the reason for the transfer</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReversalReason" nillable="true" type="tns2:ReversalReason">
                <xs:annotation>
                  <xs:documentation>The reason for the reversal.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TransferTxContext" nillable="true" type="tns1:TransferTxContext">
                <xs:annotation>
                  <xs:documentation>Related context entity</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="FundsTransferReversal" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Reverses a FundsTransfer.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="ActivitiesCreatedByApproval" nillable="true" type="tns1:ArrayOfFundsTransferReversalApprovalActivity"/>
              <xs:element maxOccurs="1" minOccurs="0" name="ApprovalDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date when the object was ultimately approved or rejected</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ApprovalStatus" nillable="true" type="tns2:ApprovalStatus">
                <xs:annotation>
                  <xs:documentation>The approval status of the object</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FundsTransferTransaction" nillable="true" type="tns1:TransferTransaction">
                <xs:annotation>
                  <xs:documentation>The FundsTransfer that is being reversed NOTE: when inserting a FundsTransferReversal this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="RequestingUser" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The user submitting the object for approval NOTE: when inserting a FundsTransferReversal this field must be non-null. NOTE: value is the PublicId of the User.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReversalReason" nillable="true" type="tns2:ReversalReason">
                <xs:annotation>
                  <xs:documentation>the reason for the funds transfer reversal NOTE: when inserting a FundsTransferReversal this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="FundsTransferReversalApprovalActivity" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:extension base="tns1:ActivityCreatedByAppr">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="FundsTransferReversal" nillable="true" type="tns1:FundsTransferReversal">
                <xs:annotation>
                  <xs:documentation>The associated ProducerPayableTransfer entity that generates a transfer transaction</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfWtoffRevApprActivity" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:WtoffRevApprActivity[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="WriteoffReversal" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="ActivitiesCreatedByAppr" nillable="true" type="tns1:ArrayOfWtoffRevApprActivity"/>
              <xs:element maxOccurs="1" minOccurs="0" name="ApprovalDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date when the object was ultimately approved or rejected</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ApprovalStatus" nillable="true" type="tns2:ApprovalStatus">
                <xs:annotation>
                  <xs:documentation>The approval status of the object</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Reason" nillable="true" type="tns2:WriteoffReversalReason">
                <xs:annotation>
                  <xs:documentation>The reason for the reversal.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="RequestingUser" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The user submitting the object for approval NOTE: when inserting a WriteoffReversal this field must be non-null. NOTE: value is the PublicId of the User.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReversalDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date of the reversal. Used primarily for staging table loading.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Writeoff" nillable="true" type="tns1:Writeoff">
                <xs:annotation>
                  <xs:documentation>The object to reverse.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="WtoffRevApprActivity" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:extension base="tns1:ActivityCreatedByAppr">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="WriteoffReversal" nillable="true" type="tns1:WriteoffReversal">
                <xs:annotation>
                  <xs:documentation>The associated writeoff reversal for approval</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="WriteoffApprActivity" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:extension base="tns1:ActivityCreatedByAppr">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Writeoff" nillable="true" type="tns1:Writeoff">
                <xs:annotation>
                  <xs:documentation>The associated writeoff for approval</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfCreditApprActivity" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:CreditApprActivity[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Credit" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Account-level adhoc credit</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Account" nillable="true" type="tns1:Account">
                <xs:annotation>
                  <xs:documentation>The account this credit is on. NOTE: when inserting a Credit this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ActivitiesCreatedByAppr" nillable="true" type="tns1:ArrayOfCreditApprActivity"/>
              <xs:element name="Amount" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>null NOTE: when inserting a Credit this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ApprovalDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date when the object was ultimately approved or rejected</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ApprovalStatus" nillable="true" type="tns2:ApprovalStatus">
                <xs:annotation>
                  <xs:documentation>The approval status of the object</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CreditDate" nillable="true" type="xsd:dateTime"/>
              <xs:element maxOccurs="1" minOccurs="0" name="CreditType" nillable="true" type="tns2:CreditType"/>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>The currency used by this entity's silo. NOTE: when inserting a Credit this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="RequestingUser" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The user submitting the object for approval NOTE: when inserting a Credit this field must be non-null. NOTE: value is the PublicId of the User.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CreditApprActivity" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:extension base="tns1:ActivityCreatedByAppr">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Credit" nillable="true" type="tns1:Credit">
                <xs:annotation>
                  <xs:documentation>The associated credit for approval</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfProducerPayableTransferApprovalActivity" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:ProducerPayableTransferApprovalActivity[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ProducerPayableTransfer" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Wrapper entity for ProducerPayableTransferTxn transaction that debits CommissionsPayable of one Producer and credits Cash of another producer</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="ActivitiesCreatedByApproval" nillable="true" type="tns1:ArrayOfProducerPayableTransferApprovalActivity"/>
              <xs:element name="Amount" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>The amount to debit from CommissionsPayable of one producer and credit to Cash of another producer NOTE: when inserting a ProducerPayableTransfer this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ApprovalDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date when the object was ultimately approved or rejected</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ApprovalStatus" nillable="true" type="tns2:ApprovalStatus">
                <xs:annotation>
                  <xs:documentation>The approval status of the object</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CreditsPayableOf" nillable="true" type="tns1:Producer">
                <xs:annotation>
                  <xs:documentation>The producer whose CommissionsPayable t-account will be credited NOTE: when inserting a ProducerPayableTransfer this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>The currency used by this entity's silo. NOTE: when inserting a ProducerPayableTransfer this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DebitsPayableOf" nillable="true" type="tns1:Producer">
                <xs:annotation>
                  <xs:documentation>The producer whose CommissionsPayable t-account will be debited NOTE: when inserting a ProducerPayableTransfer this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="RequestingUser" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The user submitting the object for approval NOTE: when inserting a ProducerPayableTransfer this field must be non-null. NOTE: value is the PublicId of the User.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ProducerPayableTransferApprovalActivity" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:extension base="tns1:ActivityCreatedByAppr">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="ProducerPayableTransfer" nillable="true" type="tns1:ProducerPayableTransfer">
                <xs:annotation>
                  <xs:documentation>The associated ProducerPayableTransfer entity that generates a transfer transaction</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="BonusCmsnApprActivity" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:extension base="tns1:ActivityCreatedByAppr">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BonusCmsnPayment" nillable="true" type="tns1:BonusCmsnPayment">
                <xs:annotation>
                  <xs:documentation>The associated bonus commission payment for approval</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfBonusCmsnApprActivity" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:BonusCmsnApprActivity[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="BonusCmsnPayment" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:extension base="tns1:ManualCmsnPayment">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="ActivitiesCreatedByAppr" nillable="true" type="tns1:ArrayOfBonusCmsnApprActivity"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ManualCmsnPayment" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:extension base="tns1:DelayedCmsnPayment">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicyCommission" nillable="true" type="tns1:PolicyCommission">
                <xs:annotation>
                  <xs:documentation>The policy producer code against which the payment is to be made.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ProducerCode" nillable="true" type="tns1:ProducerCode">
                <xs:annotation>
                  <xs:documentation>The producer code against which the payment is to be made. NOTE: when inserting a ManualCmsnPayment this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="StandardCmsnPayment" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:extension base="tns1:CommissionPayment">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="PaymentType" nillable="true" type="tns2:CommissionPaymentType">
                <xs:annotation>
                  <xs:documentation>The payment option for paying a commission NOTE: when inserting a StandardCmsnPayment this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="StandardProducerCode" nillable="true" type="tns1:ProducerCode">
                <xs:annotation>
                  <xs:documentation>The producer code against which the payment is to be made. NOTE: when inserting a StandardCmsnPayment this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AutoPayment" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>An automatic payment to a producer</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ProducerPayment">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ManualPayment" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A manual payment to a producer</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ProducerPayment">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfCommissionPayment" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:CommissionPayment[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="OutgoingDisbPmnt" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:extension base="tns1:OutgoingPayment">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Disbursement" nillable="true" type="tns1:Disbursement">
                <xs:annotation>
                  <xs:documentation>The disbursement associated with this payment.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="OutgoingPayment" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Represents information about a payment sent out by the carrier</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element name="Amount" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>The total amount of the payment NOTE: when inserting a OutgoingPayment this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>The currency used by this entity's silo. NOTE: when inserting a OutgoingPayment this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="IssueDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date the payment was issued.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="MailTo" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Name of the person/company to whom the payment should be sent NOTE: when inserting a OutgoingPayment this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="MailToAddress" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Address of the person/company to whom the payment should be sent</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Memo" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Memo to include on the payment.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PaidDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date the payment was actually paid, if ever.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="PayTo" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Pay to the order of. NOTE: when inserting a OutgoingPayment this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PaymentInstrument" nillable="true" type="tns1:PaymentInstrument">
                <xs:annotation>
                  <xs:documentation>The PaymentInstrument associated with this payment receipt. NOTE: when inserting a OutgoingPayment this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="RefNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The reference number for this payment.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="RejectedDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date the payment was rejected, if ever.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Status" nillable="true" type="tns2:OutgoingPaymentStatus">
                <xs:annotation>
                  <xs:documentation>Status of the payment.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="OutgoingProducerPmnt" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:extension base="tns1:OutgoingPayment">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="ProducerPayment" nillable="true" type="tns1:ProducerPayment">
                <xs:annotation>
                  <xs:documentation>The producer being paid.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ProducerPayment" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CommissionPayment" nillable="true" type="tns1:ArrayOfCommissionPayment">
                <xs:annotation>
                  <xs:documentation>The actual payments issued on for this producer payment</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>The currency used by this entity's silo. NOTE: when inserting a ProducerPayment this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OutgoingPayment" nillable="true" type="tns1:OutgoingProducerPmnt">
                <xs:annotation>
                  <xs:documentation>The actual payment issued on for this producer payment</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Producer" nillable="true" type="tns1:Producer">
                <xs:annotation>
                  <xs:documentation>null NOTE: when inserting a ProducerPayment this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReportingGroup" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The reporting group assigned, if any NOTE: value is the PublicId of the ReportingGroup.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Status" nillable="true" type="tns2:ProducerPaymentStatus"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CommissionPayment" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Entity to make a commission payment</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Amount" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>The amount of the payment.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ApprovalDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date when the object was ultimately approved or rejected</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ApprovalStatus" nillable="true" type="tns2:ApprovalStatus">
                <xs:annotation>
                  <xs:documentation>The approval status of the object</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>The currency used by this entity's silo. NOTE: when inserting a CommissionPayment this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Paid" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Indicates whether or not the payment has been made.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Producer" nillable="true" type="tns1:Producer">
                <xs:annotation>
                  <xs:documentation>The producer associated with this payment. NOTE: when inserting a CommissionPayment this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ProducerPayment" nillable="true" type="tns1:ProducerPayment">
                <xs:annotation>
                  <xs:documentation>The producer payment associated with this payment.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="RequestingUser" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The user submitting the object for approval NOTE: when inserting a CommissionPayment this field must be non-null. NOTE: value is the PublicId of the User.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="DelayedCmsnPayment" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:extension base="tns1:CommissionPayment">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="PayOn" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date on which to make the payment. Only applicable when PaymentTime == "payondate"</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PaymentTime" nillable="true" type="tns2:CommissionPaymentTime">
                <xs:annotation>
                  <xs:documentation>The payment time for paying the commission. NOTE: when inserting a DelayedCmsnPayment this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfAdvcCmsnApprActivity" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:AdvcCmsnApprActivity[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AdvanceCmsnPayment" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:extension base="tns1:DelayedCmsnPayment">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="ActivitiesCreatedByAppr" nillable="true" type="tns1:ArrayOfAdvcCmsnApprActivity"/>
              <xs:element name="Expired" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Indicates whether or not the advance has been expired.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="MaintainUntil" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date on which the advance expires. NOTE: when inserting a AdvanceCmsnPayment this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AdvcCmsnApprActivity" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:extension base="tns1:ActivityCreatedByAppr">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AdvanceCmsnPayment" nillable="true" type="tns1:AdvanceCmsnPayment">
                <xs:annotation>
                  <xs:documentation>The associated advance commission payment for approval</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="DisbApprActivity" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:extension base="tns1:ActivityCreatedByAppr">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Disbursement" nillable="true" type="tns1:Disbursement">
                <xs:annotation>
                  <xs:documentation>The associated disbursement for approval</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfNegWoffRevApprActivity" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:NegWoffRevApprActivity[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="NegativeWriteoffRev" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>type for negative writeoff reversals</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="ActivitiesCreatedByAppr" nillable="true" type="tns1:ArrayOfNegWoffRevApprActivity"/>
              <xs:element maxOccurs="1" minOccurs="0" name="ApprovalDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date when the object was ultimately approved or rejected</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ApprovalStatus" nillable="true" type="tns2:ApprovalStatus">
                <xs:annotation>
                  <xs:documentation>The approval status of the object</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="NegativeWriteoff" nillable="true" type="tns1:NegativeWriteoff">
                <xs:annotation>
                  <xs:documentation>The object to reverse.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="RequestingUser" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The user submitting the object for approval NOTE: when inserting a NegativeWriteoffRev this field must be non-null. NOTE: value is the PublicId of the User.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReversalDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date of the reversal. Used primarily for staging table loading.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="NegWoffRevApprActivity" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:extension base="tns1:ActivityCreatedByAppr">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="NegativeWriteoffRev" nillable="true" type="tns1:NegativeWriteoffRev">
                <xs:annotation>
                  <xs:documentation>The associated negative writeoff reversal for approval</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfCreditReversalApprActivity" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:CreditReversalApprActivity[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CreditReversal" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>type for credit reversals</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="ActivitiesCreatedByAppr" nillable="true" type="tns1:ArrayOfCreditReversalApprActivity"/>
              <xs:element maxOccurs="1" minOccurs="0" name="ApprovalDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date when the object was ultimately approved or rejected</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ApprovalStatus" nillable="true" type="tns2:ApprovalStatus">
                <xs:annotation>
                  <xs:documentation>The approval status of the object</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Credit" nillable="true" type="tns1:Credit">
                <xs:annotation>
                  <xs:documentation>The credit to reverse. NOTE: when inserting a CreditReversal this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CreditReversalDate" nillable="true" type="xsd:dateTime"/>
              <xs:element name="RequestingUser" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The user submitting the object for approval NOTE: when inserting a CreditReversal this field must be non-null. NOTE: value is the PublicId of the User.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CreditReversalApprActivity" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:extension base="tns1:ActivityCreatedByAppr">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="CreditReversal" nillable="true" type="tns1:CreditReversal">
                <xs:annotation>
                  <xs:documentation>The associated credit reversal for approval</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfChrgRvslApprActivity" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:ChrgRvslApprActivity[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ChargeReversal" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="ActivitiesCreatedByAppr" nillable="true" type="tns1:ArrayOfChrgRvslApprActivity"/>
              <xs:element maxOccurs="1" minOccurs="0" name="ApprovalDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date when the object was ultimately approved or rejected</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ApprovalStatus" nillable="true" type="tns2:ApprovalStatus">
                <xs:annotation>
                  <xs:documentation>The approval status of the object</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Charge" nillable="true" type="tns1:Charge">
                <xs:annotation>
                  <xs:documentation>The charge to reverse NOTE: when inserting a ChargeReversal this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Reason" nillable="true" type="tns2:ReversalReason">
                <xs:annotation>
                  <xs:documentation>The reason the transaction was reversed</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="RequestingUser" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The user submitting the object for approval NOTE: when inserting a ChargeReversal this field must be non-null. NOTE: value is the PublicId of the User.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ChrgRvslApprActivity" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:extension base="tns1:ActivityCreatedByAppr">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="ChargeReversal" nillable="true" type="tns1:ChargeReversal">
                <xs:annotation>
                  <xs:documentation>The associated charge reversal for approval</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="SharedActivity" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Activity that is not owned by a particular user but is viewable</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:Activity">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AcctInactiveActivity" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Activity created to notify that an account has been inactive for many days</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:Activity">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfActivity" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:Activity[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Hold" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A hold placed on various billing activities</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TroubleTicket" nillable="true" type="tns1:TroubleTicket">
                <xs:annotation>
                  <xs:documentation>The trouble ticket associated with this hold.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="TroubleTicket" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A trouble ticket</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Activities" nillable="true" type="tns1:ArrayOfActivity">
                <xs:annotation>
                  <xs:documentation>Activities that have been defined on this trouble ticket</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CloseUser" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The user who closed this trouble ticket. NOTE: value is the PublicId of the User.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="DetailedDescription" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The detailed description of this trouble ticket NOTE: when inserting a TroubleTicket this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EscalationDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>When the ticket will be escalated if not yet completed; null if ticket is never escalated.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Hold" nillable="true" type="tns1:Hold">
                <xs:annotation>
                  <xs:documentation>Hold applied to late fees, disbursements etc of accounts, policies, producers associated with this trouble ticket</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Priority" nillable="true" type="tns2:Priority">
                <xs:annotation>
                  <xs:documentation>Priority of the trouble ticket with respect to other trouble tickets.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TargetDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date by which this trouble ticket should be closed.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TicketType" nillable="true" type="tns2:TroubleTicketType">
                <xs:annotation>
                  <xs:documentation>The type of this trouble ticket</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Title" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The short summary title of this trouble ticket NOTE: when inserting a TroubleTicket this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TroubleTicketNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The human-readable number for this trouble ticket</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Activity" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>An activity is a instance of work assigned to a user and belonging to a claim.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Account" nillable="true" type="tns1:Account">
                <xs:annotation>
                  <xs:documentation>The account (if any) that is associated with this activity</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AccountContact" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>AccountContact this activity is associated with. NOTE: value is the PublicId of the AccountContact.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ActivityClass" nillable="true" type="tns2:ActivityClass">
                <xs:annotation>
                  <xs:documentation>The class of the activity.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ApprovalIssue" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Reason approval is needed. This field should only be set for approval activities.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ApprovalRationale" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Rationale for approving/rejecting the activity. This field should only be set for approval activities.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Approved" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether the activity is approved. This is null if not relevant or undecided.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="AutoGenerated" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>True if the activity was generated automatically; never fully implemented. Instead, customers can create an extension field and set it after creating an activity in a rule to indicate how the activity was created
@deprecated True if the activity was generated automatically; never fully implemented. Instead, customers can create an extension field and set it after creating an activity in a rule to indicate how the activity was created
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CloseUser" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The user who closed this activity. NOTE: value is the PublicId of the User.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Command" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>A Gosu command to execute for this activity.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DelinquencyProcess" nillable="true" type="tns1:DelinquencyProcess">
                <xs:annotation>
                  <xs:documentation>The process on which this activity was created</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Description" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Description of the activity.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DocumentTemplate" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The id of an associated document template. The id and language gets passed to IDocumentTemplateSource to retrieve the DocumentTemplateDescriptor. This property should not be used by applications.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EmailTemplate" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The id of an associated email template. The id gets passed to IEmailTemplateSource to retrieve the EmailTemplateDescriptor.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EndDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Time the event is scheduled to terminate or null if the activity is not a scheduled event.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EscalationDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>When the activity will be escalated if it isn't yet completed; this is null if the activity is never escalated.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="ExternallyOwned" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether the activity is externally owned.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LogicalName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Logical name of the activity.  Used by the internal workflow engine.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Mandatory" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>True if the activity must be completed and cannot be skipped.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicyPeriod" nillable="true" type="tns1:PolicyPeriod">
                <xs:annotation>
                  <xs:documentation>The associated policy period, if applicable</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Priority" nillable="true" type="tns2:Priority">
                <xs:annotation>
                  <xs:documentation>Priority of the activity with respect to other activities. NOTE: when inserting a Activity this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Recurring" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether this activity is recurring.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ShortSubject" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>A very brief title for the activity e.g., displayable in a calendar; this is associated with its pattern.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Subject" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>A brief title for the activity; this is associated with its pattern.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TargetDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>If this activity is a task, time by which a person should complete the task; if not completed by this time, the task is considered overdue. If this activity is an event, the time the event is scheduled to start.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TroubleTicket" nillable="true" type="tns1:TroubleTicket">
                <xs:annotation>
                  <xs:documentation>The trouble ticket on which this activity was created</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Type" nillable="true" type="tns2:ActivityType">
                <xs:annotation>
                  <xs:documentation>Type of the activity.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Workflow" nillable="true" type="tns1:Workflow">
                <xs:annotation>
                  <xs:documentation>Optional pointer to the workflow this activity is associated with.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ActivityCreatedByAppr" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Activity that is created by the Approval Engine</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:Activity">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="NegWrofApprActivity" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:extension base="tns1:ActivityCreatedByAppr">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="NegativeWriteoff" nillable="true" type="tns1:NegativeWriteoff">
                <xs:annotation>
                  <xs:documentation>The associated negative writeoff for approval</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfNegWrofApprActivity" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:NegWrofApprActivity[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="NegativeWriteoff" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Abstract base type for negative writeoffs</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="ActivitiesCreatedByAppr" nillable="true" type="tns1:ArrayOfNegWrofApprActivity"/>
              <xs:element name="Amount" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>null NOTE: when inserting a NegativeWriteoff this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ApprovalDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date when the object was ultimately approved or rejected</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ApprovalStatus" nillable="true" type="tns2:ApprovalStatus">
                <xs:annotation>
                  <xs:documentation>The approval status of the object</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Channel" nillable="true" type="tns2:WriteoffChannel"/>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>The currency used by this entity's silo. NOTE: when inserting a NegativeWriteoff this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ExecutionDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date that the write-off was actually executed.  If the user that created this write-off did not have the authority to execute it, then the execution date may be different from its creation time.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="NegativeWriteoffRev" nillable="true" type="tns1:NegativeWriteoffRev"/>
              <xs:element name="RequestingUser" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The user submitting the object for approval NOTE: when inserting a NegativeWriteoff this field must be non-null. NOTE: value is the PublicId of the User.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ProdNegativeWriteoff" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A negative writeoff against a producer</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:NegativeWriteoff">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Producer" nillable="true" type="tns1:Producer"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="NegWriteoffProdContext" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>a negative writeoff Context </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ProducerContext">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="ProdNegativeWriteoff" nillable="true" type="tns1:ProdNegativeWriteoff">
                <xs:annotation>
                  <xs:documentation>Foreign key back to the ProdNegativeWriteoff container entity that contains this transaction</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CommissionWriteoffDistItemContext" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Context table for CommissionWriteoffDistItem</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ProducerContext">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="CommissionWriteoffDistItem" nillable="true" type="tns1:CommissionWriteoffDistItem"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="IncomingProducerPayment" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Represents the details of a payment from a producer.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element name="Amount" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>The total amount of the payment NOTE: when inserting a IncomingProducerPayment this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>The currency used by this entity's silo. NOTE: when inserting a IncomingProducerPayment this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PaymentInstrument" nillable="true" type="tns1:PaymentInstrument">
                <xs:annotation>
                  <xs:documentation>The PaymentInstrument associated with this payment receipt. NOTE: when inserting a IncomingProducerPayment this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Producer" nillable="true" type="tns1:Producer">
                <xs:annotation>
                  <xs:documentation>null NOTE: when inserting a IncomingProducerPayment this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="RefNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The reference number for this payment.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ProdPymtRecdContext" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Context for ProducerPaymentRecd transactions</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ProducerContext">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="IncomingPayment" nillable="true" type="tns1:IncomingProducerPayment">
                <xs:annotation>
                  <xs:documentation>The incoming payment associated with this transaction NOTE: when inserting a ProdPymtRecdContext this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ProducerStatement" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>The currency used by this entity's silo. NOTE: when inserting a ProducerStatement this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="PreviousBalance" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>The balance on the previous statement. NOTE: when inserting a ProducerStatement this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Producer" nillable="true" type="tns1:Producer"/>
              <xs:element name="StatementDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>null NOTE: when inserting a ProducerStatement this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="StatementNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The number for this statement NOTE: when inserting a ProducerStatement this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Type" nillable="true" type="tns2:ProducerStatementType">
                <xs:annotation>
                  <xs:documentation>Type of this producer statement. Should be Production, if not used for Upgrade.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ProducerPayableTransferContext" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Context for ProducerPayableTransfer transaction</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ProducerContext">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="CreditsPayableOf" nillable="true" type="tns1:Producer">
                <xs:annotation>
                  <xs:documentation>The producer whose cash t-account we will be crediting. NOTE: when inserting a ProducerPayableTransferContext this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PayableReceiverStatement" nillable="true" type="tns1:ProducerStatement">
                <xs:annotation>
                  <xs:documentation>Producer statement of producer being credited on which this transaction appears, or null if this transaction has not yet been connected up to a statement.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ProducerPayableTransfer" nillable="true" type="tns1:ProducerPayableTransfer">
                <xs:annotation>
                  <xs:documentation>The ProducerPayableTransfer funds entity that wraps the transaction associated with this context. NOTE: when inserting a ProducerPayableTransferContext this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ProducerWriteoff" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Issued to writeoff producer unapplied using writeoff expense t-account.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ProducerTransaction">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CmsnTransferredTo" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Issued when commission is transferred from a producer code to another producer code. Adds funds to CommissionExpense and CommissionReserve.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:CommissionsReserveTxn">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PolicyChangeCmsnTxn" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Issued when the commission is changed as part of a policy change. Adds funds to CommissionExpense and CommissionReserve.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:CommissionsReserveTxn">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CommissionsReservePositiveWriteoffTxn" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Issued to increase the amount of commission payable to a Producer. Credits Commissions Reserve (liability) and   debits Positive Commission Adjustment (expense).</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:CommissionsReserveWriteoffTxn">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CommissionsReserveNegativeWriteoffTxn" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Issued to reduce the amount of commission payable to a producer. Debits Commissions Reserve (liability)         and credits Negative Commission Adjustment (revenue)</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:CommissionsReserveWriteoffTxn">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CommissionsReserveWriteoffTxn" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Base type for the two Commissions Reserve Writeoff transaction types which both must link to a   CommissionWriteoffDistItem entity</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:CommissionsReserveTxn">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CommissionAdjusted" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Issued when the commission is adjusted as part of changing the commission rate on a policy's commission plan or on a charge. Adds funds to CommissionExpense and CommissionReserve.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:CommissionsReserveTxn">
            <xs:sequence>
              <xs:element name="CommissionAmountChanged" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>The commission amount changed by this transaction NOTE: when inserting a CommissionAdjusted this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CmsnTransferredFrom" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Issued when commission is transferred from a producer code to another producer code. Subtracts funds from CommissionExpense and CommissionReserve on ChargeCommission</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:CommissionsReserveTxn">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="SubmissionCmsnTxn" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Issued to log the commission reserved as part of a policy submission. Adds funds to CommissionExpense and CommissionReserve.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:CommissionsReserveTxn">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CommissionsReserveTxn" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Base type for all commission-incurred transactions that first reserve the commission. Such commission         becomes payable according to the CommissionPlan for the ProducerCode on the PolicyPeriod.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ProducerTransaction">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ManualCmsnEarned" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Issued when a producer code earns a manually generated commission.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:CommissionEarned">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ReserveCmsnEarned" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Issued when commission is earned by a producer code on a policy. Moves the amount payable from CommissionReserve to CommissionPayable.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:CommissionEarned">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PolicyIncentivesEarned" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Issued on policy closure for producer codes earning policy-level incentives. Adds funds to CommissionExpense and CommissionPayable.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:CommissionEarned">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ProdCodeBonusEarned" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Issued when a producer code earns a new commission bonus.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:CommissionEarned">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CommissionEarned" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Base type for all producer transactions that earn commission. Amounts accumulated via these transactions will be paid to the producer during its next payment.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ProducerTransaction">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ProducerPaymentRecd" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Issued when money is received from the producer. Adds funds to the producer's CommissionPayable and the carrier's Cash T-Accounts.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ProducerPaymentTxn">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ProducerPaymentSent" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Issued when money is sent to a producer. Subtracts funds from the producer's CommissionPayable and the carrier's Cash T-Accounts.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ProducerPaymentTxn">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ProducerPaymentTxn" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Base class for transactions involving money transfers between a producer and the carrier.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ProducerTransaction">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ProducerNegWriteoffTxn" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Performs a negative writeoff, which moves funds from the producer's "Unapplied" t-Account to the producer's "Negative Writeoff" t-Account.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ProducerTransaction">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ProducerAdvanceExpired" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Issued when an advance has expired. Subtracts the remaining amount of the expired advance from CommissionAdvance and CommissionPayable.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:CommissionPayable">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PolicyCmsnPayable" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Makes commission earned at the policy level payable to the producer. Moves funds from CommissionPayable at the policy level up to CommissionsPaid.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:CommissionPayable">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ProdCodeCmsnPayable" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Makes commission earned at the producer code level payable to the producer. Moves funds from CommissionPayable at the producer code level up to CommissionsPayable at the producer level.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:CommissionPayable">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ProducerAdvancePayable" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Issued when a producer is advanced funds. Adds the advance amount to CommissionAdvance and CommissionPayable.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:CommissionPayable">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ProducerAdvanceRepaid" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Issued when a producer is "paid" out of an advance. Subtracts the amount paid from CommissionAdvance and CommissionPayable.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:CommissionPayable">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ProducerPayableTransferTxn" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Debits CommissionsPayable t-account of one producer, credits CommissionsPayable t-account of another producer</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:CommissionPayable">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CommissionPayable" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Base class for payable transactions involving a producer's CommissionsPayable T-Account.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ProducerTransaction">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="ProducerPaymentSent" nillable="true" type="tns1:ProducerPaymentSent">
                <xs:annotation>
                  <xs:documentation>The payment transaction, if any, associated with this payable transaction.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ProducerTransaction" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Base type for producer-level transactions.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:Transaction">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Basis" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>The basis for the commission, if applicable.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ProducerContext" nillable="true" type="tns1:ProducerContext">
                <xs:annotation>
                  <xs:documentation>Related context entity</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ProducerContext" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Context for producer-level transactions.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ChargeCommission" nillable="true" type="tns1:ChargeCommission">
                <xs:annotation>
                  <xs:documentation>The ChargeCommission with which the transaction is associated (optional).</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ChargeWrittenOff" nillable="true" type="tns1:ChargeWrittenOff">
                <xs:annotation>
                  <xs:documentation>The charge write-off txn that caused this earning transaction, if there is one (optional). Used for 'On Payment Received' earning criteria.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>The currency used by this entity's silo. NOTE: when inserting a ProducerContext this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DistItem" nillable="true" type="tns1:BasePaymentItem">
                <xs:annotation>
                  <xs:documentation>The dist item that caused this earning transaction, if there is one. (optional).  Used for 'On Payment Received' earning criteria.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InvoiceItem" nillable="true" type="tns1:InvoiceItem">
                <xs:annotation>
                  <xs:documentation>InvoiceItem which the commission is earned against</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PayableCriteria" nillable="true" type="tns2:PayableCriteria">
                <xs:annotation>
                  <xs:documentation>The Payable Criteria for which this commission was earned.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicyCommission" nillable="true" type="tns1:PolicyCommission">
                <xs:annotation>
                  <xs:documentation>The PolicyCommission with which the transaction is associated (optional).</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Producer" nillable="true" type="tns1:Producer">
                <xs:annotation>
                  <xs:documentation>The producer with which the transaction is associated. NOTE: when inserting a ProducerContext this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ProducerCode" nillable="true" type="tns1:ProducerCode">
                <xs:annotation>
                  <xs:documentation>The producer code with which the transaction is associated (optional).</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ProducerPayment" nillable="true" type="tns1:ProducerPayment">
                <xs:annotation>
                  <xs:documentation>The producer payment that this transaction is a part of.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Statement" nillable="true" type="tns1:ProducerStatement">
                <xs:annotation>
                  <xs:documentation>The statement, if any, on which this producer transaction appears.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Transaction" nillable="true" type="tns1:ProducerTransaction">
                <xs:annotation>
                  <xs:documentation>Reference to producer transaction</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ProdWriteoffContext" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Context for ProducerWriteoff transactions</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ProducerContext">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AgencyCyclePayment" nillable="true" type="tns1:AgencyCyclePayment">
                <xs:annotation>
                  <xs:documentation>Reference to the agency distribution that this write off may be associated with.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="WriteoffContainer" nillable="true" type="tns1:ProdWriteoffContainer">
                <xs:annotation>
                  <xs:documentation>Reference to ProdWriteoffContainer object that contains this transaction, if there is one.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfProdWriteoffContext" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:ProdWriteoffContext[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AgencyCyclePayment" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>An agency payment made against a agency bill cycle</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:AgencyCycleDist">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AppliedFromPromise" nillable="true" type="tns1:AgencyCyclePromise">
                <xs:annotation>
                  <xs:documentation>If this payment was executed from a promise, this points back to the promise that created this payment.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ProdWriteoffContexts" nillable="true" type="tns1:ArrayOfProdWriteoffContext">
                <xs:annotation>
                  <xs:documentation>The set of ProdWriteoffContexts that are associated with this AgencyCyclePayment.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="WriteOffAmount" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>The amount of the producer unapplied write-off associated with this payment, if there is one.  A positive amount means a loss for the carrier and a gain for the producer unapplied.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AgencyDisbursement" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A disbursement from a Producer</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:Disbursement">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AgencyCyclePayment" nillable="true" type="tns1:AgencyCyclePayment">
                <xs:annotation>
                  <xs:documentation>The associated agency cycle payment, applicable when create disbursement from credit invoice items</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Producer" nillable="true" type="tns1:Producer">
                <xs:annotation>
                  <xs:documentation>The associated producer, if applicable</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AccountDisbursement" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A disbursement from an Account</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:Disbursement">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Account" nillable="true" type="tns1:Account">
                <xs:annotation>
                  <xs:documentation>The associated account, if applicable</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="UnappliedFund" nillable="true" type="tns1:UnappliedFund">
                <xs:annotation>
                  <xs:documentation>The unapplied t-account funding the disbursement NOTE: when inserting a AccountDisbursement this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfDisbApprActivity" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:DisbApprActivity[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CreditReversalAuthEvent" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Contains the foreign key to the Credit Reversal bean</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:AuthorityEvent">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="CreditReversal" nillable="true" type="tns1:CreditReversal">
                <xs:annotation>
                  <xs:documentation>The associated approvable bean. NOTE: when inserting a CreditReversalAuthEvent this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CreditAuthEvent" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Contains the foreign key to the Credit Bean</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:AuthorityEvent">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Credit" nillable="true" type="tns1:Credit">
                <xs:annotation>
                  <xs:documentation>The associated approvable bean. NOTE: when inserting a CreditAuthEvent this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ChargeCommissionWriteoffAuthorityEvent" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Contains the foreign key to the charge commission writeoff bean</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:AuthorityEvent">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="CommissionWriteoff" nillable="true" type="tns1:CommissionWriteoff">
                <xs:annotation>
                  <xs:documentation>The associated approvable bean. NOTE: when inserting a ChargeCommissionWriteoffAuthorityEvent this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ProducerPayableTransferAuthorityEvent" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Contains a foreign key to a ProducerPayableTransfer bean</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:AuthorityEvent">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="ProducerPayableTransfer" nillable="true" type="tns1:ProducerPayableTransfer">
                <xs:annotation>
                  <xs:documentation>The associated approvable bean. NOTE: when inserting a ProducerPayableTransferAuthorityEvent this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="FundsXferAuthEvent" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Contains a funds transfer approvable bean</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:AuthorityEvent">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="FundsTransfer" nillable="true" type="tns1:FundsTransfer">
                <xs:annotation>
                  <xs:documentation>The associated approvable bean. NOTE: when inserting a FundsXferAuthEvent this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="NegWrofAuthEvent" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Contains the Negative Writeoff Foreign Key bean</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:AuthorityEvent">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="NegativeWriteoff" nillable="true" type="tns1:NegativeWriteoff">
                <xs:annotation>
                  <xs:documentation>The associated approvable bean. NOTE: when inserting a NegWrofAuthEvent this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="FundsTransferReversalAuthorityEvent" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Contains a foreign key to the Funds Transfer Reversal Bean</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:AuthorityEvent">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="FundsTransferReversal" nillable="true" type="tns1:FundsTransferReversal">
                <xs:annotation>
                  <xs:documentation>The associated approvable bean. NOTE: when inserting a FundsTransferReversalAuthorityEvent this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="BonusCmsnAuthEvent" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Contains the advance commission approvable payment bean</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:AuthorityEvent">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BonusCmsnPayment" nillable="true" type="tns1:BonusCmsnPayment">
                <xs:annotation>
                  <xs:documentation>The associated approvable bean. NOTE: when inserting a BonusCmsnAuthEvent this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="WriteoffAuthEvent" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Contains a Writeoff foreign key bean</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:AuthorityEvent">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Writeoff" nillable="true" type="tns1:Writeoff">
                <xs:annotation>
                  <xs:documentation>The associated approvable bean. NOTE: when inserting a WriteoffAuthEvent this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="WtoffRevAuthEvent" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Contains a Writeoff Reversal foreign key bean</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:AuthorityEvent">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="WriteoffReversal" nillable="true" type="tns1:WriteoffReversal">
                <xs:annotation>
                  <xs:documentation>The associated approvable bean. NOTE: when inserting a WtoffRevAuthEvent this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AdvcCmsnAuthEvent" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:extension base="tns1:AuthorityEvent">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AdvanceCmsnPayment" nillable="true" type="tns1:AdvanceCmsnPayment">
                <xs:annotation>
                  <xs:documentation>The associated approvable bean. NOTE: when inserting a AdvcCmsnAuthEvent this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="NegWtoffRevAuthEvent" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Contains the Negative Writeoff Rev foreign key bean</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:AuthorityEvent">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="NegativeWriteoffRev" nillable="true" type="tns1:NegativeWriteoffRev">
                <xs:annotation>
                  <xs:documentation>The associated approvable bean. NOTE: when inserting a NegWtoffRevAuthEvent this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ChrgRvslAuthEvent" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Contains a foreign key to the Charge Reversal bean</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:AuthorityEvent">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="ChargeReversal" nillable="true" type="tns1:ChargeReversal">
                <xs:annotation>
                  <xs:documentation>The associated approvable bean. NOTE: when inserting a ChrgRvslAuthEvent this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AuthorityEvent" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A record of when a user tries to perform an action that draws down on that user's authority limit. Useful for the implementation of aggregate authority limits by user.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="User" nillable="true" type="tns1:User">
                <xs:annotation>
                  <xs:documentation>The user attempting to perform this action. NOTE: when inserting a AuthorityEvent this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="DisbAuthEvent" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Contains the foreign key to the Disbursement bean</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:AuthorityEvent">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Disbursement" nillable="true" type="tns1:Disbursement">
                <xs:annotation>
                  <xs:documentation>The associated approvable bean.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Disbursement" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A disbursement</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="ActivitiesCreatedByAppr" nillable="true" type="tns1:ArrayOfDisbApprActivity"/>
              <xs:element name="Address" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The address of the recipient NOTE: when inserting a Disbursement this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Amount" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>The total amount of the payment NOTE: when inserting a Disbursement this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ApprovalDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date when the object was ultimately approved or rejected</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ApprovalStatus" nillable="true" type="tns2:ApprovalStatus">
                <xs:annotation>
                  <xs:documentation>The approval status of the object</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AuthorityEvent" nillable="true" type="tns1:DisbAuthEvent">
                <xs:annotation>
                  <xs:documentation>The associated authority event</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CloseDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date this was sent, rejected, or reapplied</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>The currency used by this entity's silo. NOTE: when inserting a Disbursement this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="DisbursementNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The human-readable number for this disbursement NOTE: when inserting a Disbursement this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="DueDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date an outgoing payment is due to be created from this disbursement, also called Effective Date NOTE: when inserting a Disbursement this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InternalComment" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>internal view only</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="MailTo" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The name of the recipient; this can be different from PayTo NOTE: when inserting a Disbursement this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Memo" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>memo appearing on the check</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OutgoingPayment" nillable="true" type="tns1:OutgoingDisbPmnt">
                <xs:annotation>
                  <xs:documentation>The payment issued on this disbursement</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="PayTo" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The name of the payee NOTE: when inserting a Disbursement this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PaymentInstrument" nillable="true" type="tns1:PaymentInstrument">
                <xs:annotation>
                  <xs:documentation>The PaymentInstrument associated with this payment receipt. NOTE: when inserting a Disbursement this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Reason" nillable="true" type="tns2:Reason">
                <xs:annotation>
                  <xs:documentation>Reason why this disbursement was created NOTE: when inserting a Disbursement this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="RefNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The reference number for this payment.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReportingGroup" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The reporting group assigned, if any NOTE: value is the PublicId of the ReportingGroup.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="RequestingUser" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The user submitting the object for approval NOTE: when inserting a Disbursement this field must be non-null. NOTE: value is the PublicId of the User.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Status" nillable="true" type="tns2:DisbursementStatus">
                <xs:annotation>
                  <xs:documentation>The status of the disbursement</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="VoidReason" nillable="true" type="tns2:VoidReason">
                <xs:annotation>
                  <xs:documentation>The reason for voiding the disbursement</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CollDisbPaidContext" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Context when a collateral is disbursed</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:CollateralContext">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Disbursement" nillable="true" type="tns1:Disbursement">
                <xs:annotation>
                  <xs:documentation>null NOTE: when inserting a CollDisbPaidContext this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CollReqTransferContext" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Context on a collateral requirement segregate transaction</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:CollReqContext">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="SourceCollReq" nillable="true" type="tns1:CollateralRequirement">
                <xs:annotation>
                  <xs:documentation>The collateral requirement that was the source of the funds NOTE: when inserting a CollReqTransferContext this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CollReqContext" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Context on a collateral requirement transaction</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:CollateralContext">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="CollateralRequirement" nillable="true" type="tns1:CollateralRequirement">
                <xs:annotation>
                  <xs:documentation>The collateral requirement associated with this transaction NOTE: when inserting a CollReqContext this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CollateralContext" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Context for collateral-level transactions.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Collateral" nillable="true" type="tns1:Collateral">
                <xs:annotation>
                  <xs:documentation>The collateral associated with this transaction NOTE: when inserting a CollateralContext this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>The currency used by this entity's silo. NOTE: when inserting a CollateralContext this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Transaction" nillable="true" type="tns1:CollateralTransaction">
                <xs:annotation>
                  <xs:documentation>Reference to collateral transaction</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CollateralTransaction" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Base type for Collateral related transactions.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:Transaction">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="CollateralContext" nillable="true" type="tns1:CollateralContext">
                <xs:annotation>
                  <xs:documentation>Related context entity</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AbstractTransaction" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Base transaction. (formally used for transfers, now deprecated</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:Transaction">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="DirectBillMoneyReceivedContext" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Context for DirectBillMoneyReceived-level transactions.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Account" nillable="true" type="tns1:Account">
                <xs:annotation>
                  <xs:documentation>Reference to the Account from which this payment was received. NOTE: when inserting a DirectBillMoneyReceivedContext this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>The currency used by this entity's silo. NOTE: when inserting a DirectBillMoneyReceivedContext this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DirectBillMoneyRcvd" nillable="true" type="tns1:DirectBillMoneyRcvd">
                <xs:annotation>
                  <xs:documentation>Reference to the DirectBillMoneyReceived payment details that goes with this transaction.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Transaction" nillable="true" type="tns1:DirectBillMoneyReceivedTxn">
                <xs:annotation>
                  <xs:documentation>Reference to DirectBillMoneyReceivedTxn</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="DirectBillMoneyReceivedTxn" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Issued when money is 'received' from the Payer as part of a Direct Bill Payment. Credits an Unapplied T-account and debits Account Cash.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:MoneyReceivedTransaction">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="DirectBillMoneyReceivedContext" nillable="true" type="tns1:DirectBillMoneyReceivedContext">
                <xs:annotation>
                  <xs:documentation>Related context entity</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AgencyBillMoneyReceivedContext" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Context for AgencyBillMoneyReceived transactions.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>The currency used by this entity's silo. NOTE: when inserting a AgencyBillMoneyReceivedContext this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PaymentMoneyReceived" nillable="true" type="tns1:PaymentMoneyReceived">
                <xs:annotation>
                  <xs:documentation>Reference to the AgencyBillMoneyReceived payment details that goes with this transaction.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Producer" nillable="true" type="tns1:Producer">
                <xs:annotation>
                  <xs:documentation>Reference to the Producer from which this payment was received. NOTE: when inserting a AgencyBillMoneyReceivedContext this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Transaction" nillable="true" type="tns1:AgencyBillMoneyReceivedTxn">
                <xs:annotation>
                  <xs:documentation>Reference to AgencyBillMoneyReceivedTxn transaction</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AgencyBillMoneyReceivedTxn" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Issued when money is 'received' from the Producer as part of an Agency Payment. Credits Producer Unapplied and debits Producer Cash.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:MoneyReceivedTransaction">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AgencyBillMoneyReceivedContext" nillable="true" type="tns1:AgencyBillMoneyReceivedContext">
                <xs:annotation>
                  <xs:documentation>Related context entity</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="MoneyReceivedTransaction" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Abstract supertype to link the money received transactions as related.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:Transaction">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AcctSuspenseReleaseTxn" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Issued when we release money from an account's suspense t-account back to the unapplied t-account</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:BaseAcctSuspenseTxn">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AcctUnappliedSuspTxn" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Issued when we transfer money from an account's unapplied t-account into the suspense t-account</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:BaseAcctSuspenseTxn">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="BaseAcctSuspenseTxn" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Abstract base transaction for transactions involving transfer of money between an account's unapplied t-account and suspense t-account</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:BaseSuspenseTxn">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ProdSuspenseReleaseTxn" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Issued when we release money from a producer's suspense t-account back to the unapplied t-account</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:BaseProdSuspenseTxn">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ProdUnappliedSuspTxn" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Issued when we transfer money from a producer's unapplied t-account into the suspense t-account</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:BaseProdSuspenseTxn">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="BaseProdSuspenseTxn" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Abstract base transaction for transactions involving transfer of money between a producer's unapplied t-account and suspense t-account</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:BaseSuspenseTxn">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="BaseSuspenseTxn" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Abstract base transaction for transactions involving transfer of money between an unapplied t-account and suspense t-account</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:BaseNonReceivableTxn">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CollateralPaidFromAccount" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Issued when a non receivable collateral is paid from an account.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:BaseNonReceivableTxn">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ProdSuspenseContext" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Context for producer suspense payment-level transactions.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:NonReceivableItemContext">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="ProducerWithSuspense" nillable="true" type="tns1:Producer">
                <xs:annotation>
                  <xs:documentation>null NOTE: when inserting a ProdSuspenseContext this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CollateralPaidContext" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Context when a non-receivable collateral is paid</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:NonReceivableItemContext">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Collateral" nillable="true" type="tns1:Collateral">
                <xs:annotation>
                  <xs:documentation>The collateral associated with this transaction NOTE: when inserting a CollateralPaidContext this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AcctSuspenseContext" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Context for account suspense item payment-level transactions.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:NonReceivableItemContext">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AccountWithSuspense" nillable="true" type="tns1:Account">
                <xs:annotation>
                  <xs:documentation>null NOTE: when inserting a AcctSuspenseContext this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="NonReceivableItemContext" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Context for non receivable item-level transactions.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BaseNonReceivableDistItem" nillable="true" type="tns1:BaseNonReceivableDistItem">
                <xs:annotation>
                  <xs:documentation>null NOTE: when inserting a NonReceivableItemContext this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>The currency used by this entity's silo. NOTE: when inserting a NonReceivableItemContext this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Transaction" nillable="true" type="tns1:BaseNonReceivableTxn">
                <xs:annotation>
                  <xs:documentation>Reference to suspense payment transaction</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="BaseNonReceivableTxn" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Abstract base transaction for transactions involving transfer of money between a unapplied t-account and a non receivable</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:Transaction">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="NonReceivableItemContext" nillable="true" type="tns1:NonReceivableItemContext">
                <xs:annotation>
                  <xs:documentation>Related context entity</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AccountGoodwillTxn" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Issued when a goodwill credit is applied to an account. Adds to Unapplied and Goodwill.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:CreditTransaction">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AccountInterestTxn" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Issued when an interest credit is applied to an account. Adds to Unapplied and InterestCredit.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:CreditTransaction">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AccountCollectionTxn" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Issued when a collection credit is applied to an account. Adds to Unapplied and CollectionCredit.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:CreditTransaction">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AccountOtherTxn" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Issued when an undesignated (other) credit is applied to an account. Adds to Unapplied and OtherCredit.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:CreditTransaction">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CreditContext" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Context for account-level credit transactions.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Account" nillable="true" type="tns1:Account">
                <xs:annotation>
                  <xs:documentation>null NOTE: when inserting a CreditContext this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Credit" nillable="true" type="tns1:Credit">
                <xs:annotation>
                  <xs:documentation>null NOTE: when inserting a CreditContext this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>The currency used by this entity's silo. NOTE: when inserting a CreditContext this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Transaction" nillable="true" type="tns1:CreditTransaction">
                <xs:annotation>
                  <xs:documentation>Reference to credit transaction</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CreditTransaction" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Base type for credit transactions.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:Transaction">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="CreditContext" nillable="true" type="tns1:CreditContext">
                <xs:annotation>
                  <xs:documentation>Related context entity</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AccountAdjustment" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Adjustment of the amount in an unapplied fund on an account</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:AccountTransaction">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="DisbursementPaid" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Issued when a money is refunded to an account. Subtracts from Unapplied and Cash.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:AccountTransaction">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AccountNegativeWriteoffTxn" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Performs a negative writeoff, which moves funds from the Account's "Unapplied" T-account to the Policy's "Negative Writeoff" T-account.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:AccountTransaction">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AccountNegativeWriteoffContext" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>a negative writeoff Context </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:AccountContext">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AcctNegativeWriteoff" nillable="true" type="tns1:AcctNegativeWriteoff"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="DisbPaidContext" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Context when a money is refunded to an account.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:AccountContext">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Disbursement" nillable="true" type="tns1:Disbursement">
                <xs:annotation>
                  <xs:documentation>null NOTE: when inserting a DisbPaidContext this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AccountContext" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Context for account-level transactions.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Account" nillable="true" type="tns1:Account">
                <xs:annotation>
                  <xs:documentation>null NOTE: when inserting a AccountContext this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>The currency used by this entity's silo. NOTE: when inserting a AccountContext this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Transaction" nillable="true" type="tns1:AccountTransaction">
                <xs:annotation>
                  <xs:documentation>Reference to account transaction</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="UnappliedFund" nillable="true" type="tns1:UnappliedFund">
                <xs:annotation>
                  <xs:documentation>null NOTE: when inserting a AccountContext this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AccountTransaction" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Base type for account-level transactions.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:Transaction">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AccountContext" nillable="true" type="tns1:AccountContext">
                <xs:annotation>
                  <xs:documentation>Related context entity</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="SuspPymtDisbPaid" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Issued when a suspense payment is disbursed. Subtracts from Unapplied and Cash.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:SuspPymtTransaction">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="SuspPymntDisbPdContext" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Context for a suspense payment disbursement</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:SuspPymtContext">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Disbursement" nillable="true" type="tns1:Disbursement">
                <xs:annotation>
                  <xs:documentation>null NOTE: when inserting a SuspPymntDisbPdContext this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="SuspPymtContext" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Context for suspense payment-level transactions.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>The currency used by this entity's silo. NOTE: when inserting a SuspPymtContext this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SuspensePayment" nillable="true" type="tns1:SuspensePayment">
                <xs:annotation>
                  <xs:documentation>null NOTE: when inserting a SuspPymtContext this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Transaction" nillable="true" type="tns1:SuspPymtTransaction">
                <xs:annotation>
                  <xs:documentation>Reference to suspense payment transaction</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="SuspPymtTransaction" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Base type for suspense payment transactions.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:Transaction">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="SuspPymtContext" nillable="true" type="tns1:SuspPymtContext">
                <xs:annotation>
                  <xs:documentation>Related context entity</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AgencyDisbPaidContext" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Context for AgencyDisbursementPaid-level transactions.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AgencyDisbursement" nillable="true" type="tns1:AgencyDisbursement">
                <xs:annotation>
                  <xs:documentation>Disbursement associated with this transaction NOTE: when inserting a AgencyDisbPaidContext this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>The currency used by this entity's silo. NOTE: when inserting a AgencyDisbPaidContext this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Producer" nillable="true" type="tns1:Producer">
                <xs:annotation>
                  <xs:documentation>Producer to whom the disbursement is being made NOTE: when inserting a AgencyDisbPaidContext this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Transaction" nillable="true" type="tns1:AgencyDisbursementPaid">
                <xs:annotation>
                  <xs:documentation>Reference to AgencyDisbursementPaid transaction</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AgencyDisbursementPaid" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Executed when a disbursement is made from the unapplied t-account of a Producer to send funds back to that producer</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:Transaction">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AgencyDisbPaidContext" nillable="true" type="tns1:AgencyDisbPaidContext">
                <xs:annotation>
                  <xs:documentation>Related context entity</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Transaction" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>The mechanism by which balances are reflected in T-accounts. Transactions provide the means for finding out the actions that caused a change in T-account balances.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element name="Amount" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>The amount of this transaction. The precise meaning depends on the subtype. Typically, the amounts in the individual line items will be some function of this value. NOTE: when inserting a Transaction this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>The currency used by this entity's silo. NOTE: when inserting a Transaction this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReversedTransaction" nillable="true" type="tns1:Transaction">
                <xs:annotation>
                  <xs:documentation>If non-null, refers to the transaction which this transaction reversed.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="TransactionDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date of the transaction NOTE: when inserting a Transaction this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="TransactionNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The number for this transaction NOTE: when inserting a Transaction this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ChargeTransaction" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Base type for charge related transactions.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:Transaction">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ChargeInstanceCtx" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Context for charge instance transactions.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Charge" nillable="true" type="tns1:Charge">
                <xs:annotation>
                  <xs:documentation>null NOTE: when inserting a ChargeInstanceCtx this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>The currency used by this entity's silo. NOTE: when inserting a ChargeInstanceCtx this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Transaction" nillable="true" type="tns1:ChargeInstanceTxn">
                <xs:annotation>
                  <xs:documentation>Reference to ChargeInstanceTxn</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ChargeInstanceTxn" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Base type for charge-related transactions that are associated with a specific charge.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ChargeTransaction">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="ChargeInstanceCtx" nillable="true" type="tns1:ChargeInstanceCtx">
                <xs:annotation>
                  <xs:documentation>Related context entity</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ChargeInvoicingTxn" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:extension base="tns1:ChargeInstanceTxn">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfProducerContext" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:ProducerContext[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ChargeWrittenOff" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
        Issued when some portion of a charge is paid as a result of a writeoff.
        Increases the charge's "Writeoff Expense" balance and decreases its "Due" balance.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ChargeInvoicingTxn">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="CommissionWriteoffDistItems" nillable="true" type="tns1:ArrayOfCommissionWriteoffDistItem">
                <xs:annotation>
                  <xs:documentation>CommissionWriteoffDistItems created as a result of issuing this ChargeWrittenOff.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EarningContexts" nillable="true" type="tns1:ArrayOfProducerContext">
                <xs:annotation>
                  <xs:documentation>Contexts for earning transactions caused by this Charge Write-off, for 'On Payment Received' earning criteria.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ZeroCmsnEarnedMarkers" nillable="true" type="tns1:ArrayOfZeroCmsnEarnedMarker">
                <xs:annotation>
                  <xs:documentation>The set of ZeroCmsnEarnedMarkers 'earned' from this write-off.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CommissionWriteoffDistItem" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Wrapper for CommissionsReservePositiveWriteoffTxn and CommissionsReserveNegativeWriteoffTxn</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element name="Amount" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>The amount of the payment. NOTE: when inserting a CommissionWriteoffDistItem this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ChargeCommission" nillable="true" type="tns1:ChargeCommission">
                <xs:annotation>
                  <xs:documentation>The ChargeCommission instance associated with this commission writeoff NOTE: when inserting a CommissionWriteoffDistItem this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ChargeWrittenOff" nillable="true" type="tns1:ChargeWrittenOff">
                <xs:annotation>
                  <xs:documentation>The ChargeWrittenOff transaction that triggered this commission writeoff for Direct Bill.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CommissionWriteoff" nillable="true" type="tns1:CommissionWriteoff">
                <xs:annotation>
                  <xs:documentation>The CommissionWriteoff that caused this CommissionWriteoffDistItem to be executed.  Note that this is a nullable foreign key because this CommissionWriteoffDistItem might have been executed directly without a             CommissionWriteoff approvable entity being involved. The CommissionWriteoff is primarily used to enforce             authority limits.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>The currency used by this entity's silo. NOTE: when inserting a CommissionWriteoffDistItem this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="DateWrittenOff" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date of the commission writeoff. NOTE: when inserting a CommissionWriteoffDistItem this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InvoiceItem" nillable="true" type="tns1:InvoiceItem">
                <xs:annotation>
                  <xs:documentation>The InvoiceItem this writeoff is against.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Type" nillable="true" type="tns2:CommissionWriteoffDistItemType">
                <xs:annotation>
                  <xs:documentation>The type of writeoff. NOTE: when inserting a CommissionWriteoffDistItem this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfCommissionWriteoffDistItem" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:CommissionWriteoffDistItem[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CommissionWriteoff" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype that manages authority limit checking and approval of Charge level Commission Writeoffs</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:Writeoff">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="CommissionWriteoffDistItems" nillable="true" type="tns1:ArrayOfCommissionWriteoffDistItem">
                <xs:annotation>
                  <xs:documentation>Set of CommissionWriteoffDistItem entities that wrap the item level commission reduction transactions             executed by this writeoff. This array will be empty until this writeoff has actually been executed.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ChargeGrossWriteoff" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A writeoff against a specific invoice item.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GrossWriteoff">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="ChargePattern" nillable="true" type="tns1:ChargePattern"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ItemGrossWriteoff" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A writeoff against a specific invoice item.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GrossWriteoff">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="GrossAgencyPmntItem" nillable="true" type="tns1:AgencyPaymentItem">
                <xs:annotation>
                  <xs:documentation>This writeoff may be associated with an agency payment item, and if it is, it will be reversed along with the payment item</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InvoiceItem" nillable="true" type="tns1:InvoiceItem"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfChargeWrittenOffCtx" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:ChargeWrittenOffCtx[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="GrossWriteoff" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A writeoff against a specific charge. (This used to be the Writeoff entity in Athena/Sunflower)</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:Writeoff">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="ChargeWrittenOffCtxs" nillable="true" type="tns1:ArrayOfChargeWrittenOffCtx">
                <xs:annotation>
                  <xs:documentation>Contexts of ChargeWrittenOff transactions</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfWriteoffApprActivity" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:WriteoffApprActivity[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Writeoff" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Abstract base type for writeoffs</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="ActivitiesCreatedByAppr" nillable="true" type="tns1:ArrayOfWriteoffApprActivity"/>
              <xs:element name="Amount" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>null NOTE: when inserting a Writeoff this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ApprovalDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date when the object was ultimately approved or rejected</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ApprovalStatus" nillable="true" type="tns2:ApprovalStatus">
                <xs:annotation>
                  <xs:documentation>The approval status of the object</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>The currency used by this entity's silo. NOTE: when inserting a Writeoff this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ExecutionDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date that the write-off was actually executed.  If the user that created this write-off did not have the authority to execute it, then the execution date may be different from its creation time.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Reason" nillable="true" type="tns2:WriteoffReason"/>
              <xs:element name="RequestingUser" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The user submitting the object for approval NOTE: when inserting a Writeoff this field must be non-null. NOTE: value is the PublicId of the User.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReversedAmount" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>Denormalized sum of all reversed ChargeWrittenOff transactions associated with this Writeoff.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TAccountContainer" nillable="true" type="tns1:TAccountContainer"/>
              <xs:element maxOccurs="1" minOccurs="0" name="WriteoffReversal" nillable="true" type="tns1:WriteoffReversal"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ChargeWrittenOffCtx" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Context for ChargeWrittenOff</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ChargeInvoicingCtx">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Writeoff" nillable="true" type="tns1:Writeoff">
                <xs:annotation>
                  <xs:documentation>Reference back to the writeoff that created the related charge paid transaction</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ChargeInvoicingCtx" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Context for charge invoicing transactions</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ChargeInstanceCtx">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="InvoiceItem" nillable="true" type="tns1:InvoiceItem">
                <xs:annotation>
                  <xs:documentation>null NOTE: when inserting a ChargeInvoicingCtx this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ChrgePaidFromProdCtx" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Context for ChargePaidFromProducer</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ChargeInvoicingCtx">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AgencyPaymentItem" nillable="true" type="tns1:AgencyPaymentItem">
                <xs:annotation>
                  <xs:documentation>Reference back to the Agency Payment Item that this ChargePaidFromProducer transactions.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ChargeCommission" nillable="true" type="tns1:ChargeCommission">
                <xs:annotation>
                  <xs:documentation>The ChargeCommission that was paid by this transaction.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FromProducer" nillable="true" type="tns1:Producer">
                <xs:annotation>
                  <xs:documentation>The Producer that is paying this Charge, i.e., the owning Producer. NOTE: when inserting a ChrgePaidFromProdCtx this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfChrgePaidFromProdCtx" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:ChrgePaidFromProdCtx[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfItemGrossWriteoff" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:ItemGrossWriteoff[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AgencyPaymentItem" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Stores values to be applied to an invoice item as part of an Agency Payment</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:BasePaymentItem">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="ChrgePaidFromProdCtxs" nillable="true" type="tns1:ArrayOfChrgePaidFromProdCtx">
                <xs:annotation>
                  <xs:documentation>The set of ChrgePaidFromProdCtxs that are associated with this AgencyPaymentItem.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CommissionWriteoffs" nillable="true" type="tns1:ArrayOfItemCommissionWriteoff">
                <xs:annotation>
                  <xs:documentation>The commission writeoff transactions that have been associated with this payment item.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="GrossWriteoffs" nillable="true" type="tns1:ArrayOfItemGrossWriteoff">
                <xs:annotation>
                  <xs:documentation>The gross writeoff transactions that have been associated with this payment item.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="BasePaymentItem" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Base class for payment items: Stores values to be applied to an invoice item as part of a payment</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:BaseDistItem">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="ProducerContexts" nillable="true" type="tns1:ArrayOfProducerContext">
                <xs:annotation>
                  <xs:documentation>The set of producer contexts that are associated with this payment item.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ZeroCmsnEarnedMarkers" nillable="true" type="tns1:ArrayOfZeroCmsnEarnedMarker">
                <xs:annotation>
                  <xs:documentation>The set of ZeroCmsnEarnedMarkers 'earned' from this payment item.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="BaseDistItem" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Base class for DistItems: Stores values to be applied to an invoice item as part of a Distribution</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="ActiveDist" nillable="true" type="tns1:BaseDist">
                <xs:annotation>
                  <xs:documentation>The Distribution that contains this Payment Item if the payment item is active</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="CommissionAmountToApply" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>Commission amount entered for this invoice item during payment application NOTE: when inserting a BaseDistItem this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>The currency used by this entity's silo. NOTE: when inserting a BaseDistItem this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Disposition" nillable="true" type="tns2:DistItemDisposition">
                <xs:annotation>
                  <xs:documentation>How should this item be handled in exception processing when this payment is executed?</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ExecutedDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date that this payment item was executed.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="GrossAmountToApply" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>Gross amount entered for this invoice item during payment application NOTE: when inserting a BaseDistItem this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InvoiceItem" nillable="true" type="tns1:InvoiceItem">
                <xs:annotation>
                  <xs:documentation>The invoice item being paid</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ModifiedFrom" nillable="true" type="tns1:BaseDistItem">
                <xs:annotation>
                  <xs:documentation>Points to an existing BaseDistItem being modified.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PaymentComments" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Comments entered for this invoice item during payment application</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicyPeriod" nillable="true" type="tns1:PolicyPeriod">
                <xs:annotation>
                  <xs:documentation>The policy period associated with this dist item. This is a denormalized field needed only for performance improvement.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReversedDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date that this payment item was reversed. This will be null if the item isn't reversed.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReversedDist" nillable="true" type="tns1:BaseDist">
                <xs:annotation>
                  <xs:documentation>The Distribution that contains this Payment Item if the payment item is reversed</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AgencyPromiseItem" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Stores values promised to an invoice item as part of an Agency Cycle Promise</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:BaseDistItem">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AppliedDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date that this promise item was applied.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfAgencyPromiseItem" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:AgencyPromiseItem[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfInvoiceItemCommissionRateOverride" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:InvoiceItemCommissionRateOverride[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfItemCommission" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:ItemCommission[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ItemEvent" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>The single entry in the schedule of payments for a given policy or account</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CmsnReserveChanged" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>Commission Reserve changed on the item</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>The currency used by this entity's silo. NOTE: when inserting a ItemEvent this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EventDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date of the event</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EventType" nillable="true" type="tns2:ItemEventType">
                <xs:annotation>
                  <xs:documentation>The type of item event</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="GrossAmountChanged" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>Gross Amount changed on the item</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TransferRole" nillable="true" type="tns2:PolicyRole">
                <xs:annotation>
                  <xs:documentation>The Role for a commission transfer event.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfItemEvent" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:ItemEvent[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfBasePaymentItem" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:BasePaymentItem[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="InvoiceItem" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>The single entry in the schedule of payments for a given policy or account</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AgencyPromiseItems" nillable="true" type="tns1:ArrayOfAgencyPromiseItem">
                <xs:annotation>
                  <xs:documentation>This is here to get around a problem where if an agency promise item is modified (e.g., paid), but not yet committed, a Query won't see the change, but an array access will look into the bundle/cache.  That's why this not being exposed anywhere.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Amount" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>The amount of the invoice item</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BillToday" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether the item must be on an invoice that is billed today</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Comments" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Comments for invoice item</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CommissionRateOverrides" nillable="true" type="tns1:ArrayOfInvoiceItemCommissionRateOverride"/>
              <xs:element maxOccurs="1" minOccurs="0" name="CommissionWriteoffDistItems" nillable="true" type="tns1:ArrayOfCommissionWriteoffDistItem">
                <xs:annotation>
                  <xs:documentation>Set of CommissionWriteoffDistItems against this invoice item</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>The currency used by this entity's silo. NOTE: when inserting a InvoiceItem this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CustomPaymentGroup" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Field for custom grouping of invoice items for payment</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Description" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The description of the invoice item</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="EventDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date of the invoice item NOTE: when inserting a InvoiceItem this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ExceptionComments" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>User-inputted comments about an agency payment exception associated with this invoice item</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="GrossSettled" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Denormalized field, true if and only if Amount is equal to PaidAmount + GrossAmountWrittenOff</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="GrossWriteoffs" nillable="true" type="tns1:ArrayOfItemGrossWriteoff">
                <xs:annotation>
                  <xs:documentation>Set of gross writeoff approvables against this invoice item.  May be executed, or awaiting approval</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InstallmentNumber" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>The number of this installment on the payment schedule</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ItemCommissions" nillable="true" type="tns1:ArrayOfItemCommission">
                <xs:annotation>
                  <xs:documentation>Set of join entities between this InvoiceItem and its PolicyCommissions</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ItemEvents" nillable="true" type="tns1:ArrayOfItemEvent">
                <xs:annotation>
                  <xs:documentation>Events that occurred on this InvoiceItem.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LineItemNumber" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>The number describing where the associated invoice item falls on the invoice.  This should be a unique and unchanging number.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PaymentExceptionLock" nillable="true" type="tns2:ExceptionLock">
                <xs:annotation>
                  <xs:documentation>Describes how and if this invoice item's payment exception status is locked.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PaymentItems" nillable="true" type="tns1:ArrayOfBasePaymentItem">
                <xs:annotation>
                  <xs:documentation>An array of the payment items associated with this invoice item.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicyPeriod" nillable="true" type="tns1:PolicyPeriod">
                <xs:annotation>
                  <xs:documentation>The Policy Period that this Invoice Item belongs to.  This field exists for performance reasons.  (Value is InvoiceItem -&gt; Charge -&gt; TAccountOwner if not Direct Bill Account-Level invoice item, else null)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PrimaryCmsnPayableAmount" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>The amount of the invoice item commission that has been made payable for the active primary producer.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PrimaryCommissionAmount" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>Denormalization of the commission amount for the invoice item for the active primary producer</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PrimaryPaidCommission" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>Denormalization of the total commission paid by ChargePaidFromUnapplieds applied on this invoice item for the active primary producer</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PrimaryWrittenOffCommission" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>Denormalization of the amount of invoice item's commission for the active primary producer that was written off</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PromiseExceptionLock" nillable="true" type="tns2:ExceptionLock">
                <xs:annotation>
                  <xs:documentation>Describes how and if this invoice item's promise exception status is locked.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PromisedAndPaidAmount" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>Denormalization of the total gross amount promised and paid on this invoice item</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PromisedCommission" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>Denormalization of the total primary commission promised on this invoice item</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Type" nillable="true" type="tns2:InvoiceItemType">
                <xs:annotation>
                  <xs:documentation>The type of invoice item</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="SnapshotInvoiceItem" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Captures information about an invoice item at the time an agency bill statement is billed</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>The currency used by this entity's silo. NOTE: when inserting a SnapshotInvoiceItem this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InvoiceItem" nillable="true" type="tns1:InvoiceItem">
                <xs:annotation>
                  <xs:documentation>The invoice item for which we are storing snapshot information NOTE: when inserting a SnapshotInvoiceItem this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LineItemNumber" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>The number describing where the associated invoice item falls on the invoice.  This should be a unique and unchanging number.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PaidAmount" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>Total gross amount paid on the invoice item as of this snapshot</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PrimaryCmsnPayableAmount" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>The amount of the invoice item commission that has been made payable for the active primary producer.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PrimaryCommissionAmount" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>Denormalization of the commission amount for the invoice item for the active primary producer</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PrimaryPaidCommission" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>Denormalization of the total commission paid by ChargePaidFromUnapplieds applied on this invoice item for the active primary producer</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PrimaryWrittenOffCommission" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>Denormalization of the amount of invoice item's commission for the active primary producer that was written off</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PromisedAndPaidAmount" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>Denormalization of the total gross amount promised and paid on this invoice item</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PromisedCommission" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>Denormalization of the total primary commission promised on this invoice item</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="StatementInvoice" nillable="true" type="tns1:StatementInvoice">
                <xs:annotation>
                  <xs:documentation>The agency bill statement invoice to which this snapshot invoice item is attached.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Status" nillable="true" type="tns2:InvoiceStatus">
                <xs:annotation>
                  <xs:documentation>Status of the invoice item as of the snapshot NOTE: when inserting a SnapshotInvoiceItem this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfSnapshotInvoiceItem" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:SnapshotInvoiceItem[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="StatementInvoice" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A statement associated with an Agency Bill Producer</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:Invoice">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AgencyBillCycle" nillable="true" type="tns1:AgencyBillCycle">
                <xs:annotation>
                  <xs:documentation>The cycle of this agency bill statement</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="AllInvoiceItemsExactlyPaid" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>True if gross and commissions is settled on every invoice item.  This is a denormalized field.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CommissionPayable" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>Total Primary Commission Payable on invoice items on this statement.  This is a denormalized field.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="NetAmount" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>Total Primary Net Amount of invoice items on this statement invoice.  This is a denormalized field.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="NetAmountPaid" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>Total Primary Net Amount paid against invoice items on this statement invoice.  This is a denormalized field.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="NetAmountWrittenOff" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>Total Primary Net Amount written off against invoice items on this statement.  This is a denormalized field.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SnapshotInvoiceItems" nillable="true" type="tns1:ArrayOfSnapshotInvoiceItem">
                <xs:annotation>
                  <xs:documentation>For a BILLED statement: Snapshot of invoice items as of the bill date of this statement. For a PLANNED statement: Snapshot of past exactly paid invoice items that became not exactly paid</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AgencyBillCycle" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A single agency bill cycle</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AgencyCycleProcess" nillable="true" type="tns1:AgencyCycleProcess">
                <xs:annotation>
                  <xs:documentation>The workflow that handles agency bill plan processing for this cycle</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>The currency used by this entity's silo. NOTE: when inserting a AgencyBillCycle this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Producer" nillable="true" type="tns1:Producer"/>
              <xs:element maxOccurs="1" minOccurs="0" name="StatementInvoice" nillable="true" type="tns1:StatementInvoice">
                <xs:annotation>
                  <xs:documentation>The statement invoice that defines this cycle</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfAgencyBillCycle" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:AgencyBillCycle[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="BillingPlan" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A plan describing how a policy should be billed</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:Plan">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Aggregation" nillable="true" type="tns2:AggregationType">
                <xs:annotation>
                  <xs:documentation>The amount of granularity on the Transactions as viewed in the invoice</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="AllowModOfManDisb" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether or not manually created Disbursements can have their amounts modified</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AvailableDisbAmtType" nillable="true" type="tns2:AvailableDisbAmtType">
                <xs:annotation>
                  <xs:documentation>Defines how to calculate the amount available to disburse automatically, which is compared to DisbursementOver when deciding whether to create a disbursement.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="ChangeDeadlineInterval" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>The number of days before the Draft Date a non responsive payment is set in stone</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="CreateApprActForAutoDisb" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether Automatic Disbursements should be created with associated approval activities</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>The currency used by this entity's silo. NOTE: when inserting a BillingPlan this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="DelayDisbursement" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>delay disbursement processing for this many days NOTE: when inserting a BillingPlan this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DisbursementOver" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>Amount over which accounts should automatically create disbursements. This allows users to prevent disbursements for insignificant amounts to be created.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DraftDayLogic" nillable="true" type="tns2:DayOfMonthLogic">
                <xs:annotation>
                  <xs:documentation>Defines how the draft day will be adjusted (if at all) to fall on a business day.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="DraftInterval" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>The number of days before the Draft Date and Invoice due date on a non responsive payment</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InvoiceFee" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>the amount of the invoice fee</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LowBalanceMethod" nillable="true" type="tns2:LowBalanceMethod">
                <xs:annotation>
                  <xs:documentation>The method of handling low-balance invoices</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LowBalanceThreshold" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>The minumum amount of money to put on invoice, if low balance flag set</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="NonResponsivePmntDueInterval" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>The number of days between the statement date and the payment due date for payment methods that are not responsive NOTE: when inserting a BillingPlan this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PaymentDueDayLogic" nillable="true" type="tns2:DayOfMonthLogic">
                <xs:annotation>
                  <xs:documentation>Defines how the due day will be adjusted (if at all) to fall on a business day.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="PaymentDueInterval" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>The number of days between the statement date and the payment due date for responsive payment methods NOTE: when inserting a BillingPlan this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PaymentReversalFee" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>the fee associated with a pejorative payment reversal</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="RequestInterval" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>The number of days between the Invoice being billed and the Non responsive payment request</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="ReviewDisbursementOver" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>Review Disbursements greater than this amount NOTE: when inserting a BillingPlan this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="SendAutoDisbAwaitingApproval" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether Automatic Disbursements awaiting approval should be sent on their due dates</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="SkipInstallmentFees" nillable="true" type="soapenc:boolean"/>
              <xs:element maxOccurs="1" minOccurs="0" name="Statement" nillable="true" type="tns2:StatementType">
                <xs:annotation>
                  <xs:documentation>The type of statement to send</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="SuppressLowBalInvoices" nillable="true" type="soapenc:boolean"/>
              <xs:element name="WesternMethod" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether Western Method accounting is used for earned premium calculations, otherwise Standard Method accounting is used.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="SuppressDownPayment" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>SuppressDownPayment modifies a PaymentPlan by suppressing the down payment.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:PaymentPlanModifier">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="DownPaymentOverride" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>DownPaymentOverride modifies a PaymentPlan by overriding the down payment percent</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:PaymentPlanModifier">
            <xs:sequence>
              <xs:element name="DownPaymentPercent" nillable="true" type="soapenc:decimal"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="MatchPlannedInstallments" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Modifies a PaymentPlan by overriding its maximum number of installments, which will be set to equal the number of remaining planned invoice items that have been sliced from the associated reference charge. The intended result is that the the new charge's installments have the same dates as those of the reference charge.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:PaymentPlanModifier">
            <xs:sequence>
              <xs:element name="ReferenceCharge" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The charge whose number of installments and installment dates should be matched. NOTE: when inserting a MatchPlannedInstallments this field must be non-null. NOTE: value is the PublicId of the Charge.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="MaximumNumberOfInstallmentsOverride" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>MaximumNumberOfInstallmentsOverride modifies a PaymentPlan by overriding the PaymentPlan's maximum number of         installments.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:PaymentPlanModifier">
            <xs:sequence>
              <xs:element name="MaximumNumberOfInstallments" nillable="true" type="soapenc:int"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Rewrite" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Billing instruction used to rewrite a policy</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:NewPlcyPeriodBI">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="RewriteAccount" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The account to which the rewrite policy period will belong. NOTE: value is the PublicId of the Account.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="NewRenewal" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Billing instruction used to add a renewed policy when the policy does not have a prior period in BillingCenter</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:NewPlcyPeriodBI">
            <xs:sequence>
              <xs:element name="NewRenewalAccount" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The account to which the new policy period will belong NOTE: when inserting a NewRenewal this field must be non-null. NOTE: value is the PublicId of the Account.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Issuance" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Billing instruction used to add a new policy</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:NewPlcyPeriodBI">
            <xs:sequence>
              <xs:element name="IssuanceAccount" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The account to which the new policy period will belong NOTE: when inserting a Issuance this field must be non-null. NOTE: value is the PublicId of the Account.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Renewal" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Billing instruction used to renew a policy</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:NewPlcyPeriodBI">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="RenewalAccount" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The account to which the renewal policy period will belong. NOTE: value is the PublicId of the Account.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="NewPlcyPeriodBI" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Abstract base type for policy related billing instructions which create new Policy Period</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:PlcyBillingInstruction">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="NewPolicyPeriod" nillable="true" type="tns1:PolicyPeriod">
                <xs:annotation>
                  <xs:documentation>The policy period created by this BI NOTE: when inserting a NewPlcyPeriodBI this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OfferNumber" nillable="true" type="soapenc:string"/>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicyPaymentPlan" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The base payment plan to use for the new Policy Period. Any appropriate modifiers will be added and attached to new payment plan in the PlcyBillingInstruction. NOTE: value is the PublicId of the PaymentPlan.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PriorPolicyPeriod" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The previous policy period NOTE: value is the PublicId of the PolicyPeriod.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="General" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>General billing instruction for an existing policy</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ExistingPlcyPeriodBI">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Cancellation" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Billing instruction used to cancel a policy</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ExistingPlcyPeriodBI">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="CancellationReason" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The reason a policy was canceled</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CancellationType" nillable="true" type="tns2:CancellationType">
                <xs:annotation>
                  <xs:documentation>The type of a policy cancellation</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="HoldUnbilledPremiumCharges" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>If true, all unbilled premium charges on the target policy will be held at end of cancellation</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Reinstatement" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Billing instruction used to reinstate a policy</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ExistingPlcyPeriodBI">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PolicyChange" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Billing instruction used to make changes to an existing policy</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ExistingPlcyPeriodBI">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Audit" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Billing instruction used to make changes to an existing policy as part of an audit</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ExistingPlcyPeriodBI">
            <xs:sequence>
              <xs:element name="FinalAudit" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>True if this is a Final Audit</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="TotalPremium" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>True if this Audit's charge represents total premium for the policy, instead of delta</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ExistingPlcyPeriodBI" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Abstract base type for policy related billing instructions which modify an existing Policy Period</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:PlcyBillingInstruction">
            <xs:sequence>
              <xs:element name="AssociatedPolicyPeriod" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The policy period to cancel NOTE: when inserting a ExistingPlcyPeriodBI this field must be non-null. NOTE: value is the PublicId of the PolicyPeriod.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="ModificationDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date associated with the BI NOTE: when inserting a ExistingPlcyPeriodBI this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SpecialHandling" nillable="true" type="tns2:SpecialHandling">
                <xs:annotation>
                  <xs:documentation>Special Handling for this Billing Instruction, if any</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PremiumReportBI" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Billing instruction used to notify the associated policy period of a premium report</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ExistingPlcyPeriodBI">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="PaymentDueDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>If set, will override the due date of the first invoice that this BI's charge is billed on.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="PaymentReceived" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether the Policy Administration System had received payment for the premium report at the time of this billing instruction</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PeriodEndDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The end date of the billing period of this premium report</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="PeriodStartDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The start date of the billing period of this premium report NOTE: when inserting a PremiumReportBI this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PremiumReportBIPremiumReportDueDate" nillable="true" type="tns1:PremiumReportBIPremiumReportDueDate">
                <xs:annotation>
                  <xs:documentation>The PremiumReportDueDate matching this Premium Report (via join table).</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PremiumReportBIPremiumReportDueDate" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Join table between PremiumReportBI and PremiumReportDueDate, allows only 1 entry per PremiumReportBI</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>The currency used by this entity's silo. NOTE: when inserting a PremiumReportBIPremiumReportDueDate this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PremiumReportBI" nillable="true" type="tns1:PremiumReportBI"/>
              <xs:element maxOccurs="1" minOccurs="0" name="PremiumReportDueDate" nillable="true" type="tns1:PremiumReportDueDate"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfPremiumReportBIPremiumReportDueDate" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:PremiumReportBIPremiumReportDueDate[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PremiumReportDueDate" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Billing instruction used to notify the associated policy period of the next premium report's due date</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:PlcyBillingInstruction">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="DelinquencyProcess" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The delinquency process, if any, which results from missing this due date. NOTE: value is the PublicId of the DelinquencyProcess.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="DueDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The due date of the premium report NOTE: when inserting a PremiumReportDueDate this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PeriodEndDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The end date of the billing period of the expected premium report</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="PeriodStartDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The start date of the billing period of the expected premium report NOTE: when inserting a PremiumReportDueDate this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PremiumReportBIPremiumReportDueDates" nillable="true" type="tns1:ArrayOfPremiumReportBIPremiumReportDueDate">
                <xs:annotation>
                  <xs:documentation>The Premium Report BIs, if any, that matches this Due Date (via join table).</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="PremiumReportDDPolicyPeriod" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The policy period that this due date is for NOTE: when inserting a PremiumReportDueDate this field must be non-null. NOTE: value is the PublicId of the PolicyPeriod.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AccountGeneral" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Billing instruction used with account</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:AcctBillingInstruction">
            <xs:sequence>
              <xs:element name="BillingInstructionDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The effective date of the account billing instruction NOTE: when inserting a AccountGeneral this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="SegregatedCollReqBI" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Billing instruction used with collateral</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:CltlBillingInstruction">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="SegregatedCollReq" nillable="true" type="tns1:CollateralRequirement">
                <xs:annotation>
                  <xs:documentation>The segregated collateral requirement that owns this</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CollateralBI" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Billing instruction used with collateral</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:CltlBillingInstruction">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="CollateralRequirement" nillable="true" type="tns1:CollateralRequirement">
                <xs:annotation>
                  <xs:documentation>The collateral requirement that generated this charge</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CltlBillingInstruction" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Abstract base type for collateral related billing instructions</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:AcctBillingInstruction">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AcctBillingInstruction" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Abstract base type for account related billing instructions</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:BillingInstruction">
            <xs:sequence>
              <xs:element name="Account" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The account on the billingInstruction NOTE: when inserting a AcctBillingInstruction this field must be non-null. NOTE: value is the PublicId of the Account.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ReversalBillingInstruction" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Billing instruction type for reversal charges. Reversal charges are not created by the normal Billing Instruction execution framework, but billing instruction is a required field on all charges, so this is basically a null object. These billing instructions will never be executed. This should only be used internally by Billing Center, and Gosu code should never create one of these.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:BillingInstruction">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="OnsetChargeBI" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>DEPRECATED IN 3.0: Creates onset charges and invoice items to be placed on the statement invoices of a target producer when transferring an agency bill policy period from one producer to another</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:BaseGeneral">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BIThatWasOnset" nillable="true" type="tns1:BillingInstruction">
                <xs:annotation>
                  <xs:documentation>Original BillingInstruction that this Onset Charge Billing Instruction was created to onset NOTE: when inserting a OnsetChargeBI this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfCharge" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:Charge[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="BillingInstruction" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A set of charges</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Charges" nillable="true" type="tns1:ArrayOfCharge">
                <xs:annotation>
                  <xs:documentation>Contained charges</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>The currency used by this entity's silo. NOTE: when inserting a BillingInstruction this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Description" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>A description of the billing instruction</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="OffsetChargeBI" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>DEPRECATED IN 3.0: Creates offset charges and invoice items to cancel existing planned invoice items when transferring an agency bill policy period from one producer to another</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:BaseGeneral">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BIThatWasOffset" nillable="true" type="tns1:BillingInstruction">
                <xs:annotation>
                  <xs:documentation>Original BillingInstruction that this Offset Charge Billing Instruction was created to offset NOTE: when inserting a OffsetChargeBI this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="BaseGeneral" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Common superclass for internal general purpose billing instructions that target an existing policy</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:PlcyBillingInstruction">
            <xs:sequence>
              <xs:element name="BillingInstructionDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The effective date of the billing instruction NOTE: when inserting a BaseGeneral this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Policy" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The policy period affected NOTE: when inserting a BaseGeneral this field must be non-null. NOTE: value is the PublicId of the PolicyPeriod.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfPaymentPlanModifier" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:PaymentPlanModifier[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PlcyBillingInstruction" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Abstract base type for policy related billing instructions</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:BillingInstruction">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="DepositRequirement" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>Amount of segregated collateral requirements that should exist after the BI is executed</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PaymentPlan" nillable="true" type="tns1:PaymentPlan">
                <xs:annotation>
                  <xs:documentation>The payment plan for the charges in this billing instruction.  The billing instruction initializes this     itself when the billing instruction is executed.  It cannot be set by the creator of the billing instruction.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PaymentPlanModifiers" nillable="true" type="tns1:ArrayOfPaymentPlanModifier">
                <xs:annotation>
                  <xs:documentation>If there are any modifiers, they are applied to the paymentPlan of the policy period to make a new             overriding paymentPlan for this billing instruction's charges.  The policyPeriod will retain its original             paymentPlan.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PaymentPlanModifier" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A PaymentPlanModifier modifies a provided payment plan.          PaymentPlanModifier itself is abstract and serves as the superclass of other PaymentPlanModifier subclasses.         A subclass of PaymentPlanModifier does not need to have any methods -- it will automatically delegate the         implementation of PaymentPlanModifer methods to its custom subclass of PaymentPlanModifierMethodsImpl.         That custom subclass is specified in the subtype's .eti file with the implementsInterface element.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="ApplicationOrder" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>The order in which the modifier's billing instruction applies this modifier when the billing           instruction has multiple modifers. Null if the modifier is not used by a billing instruction.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="policyBillingInstruction" nillable="true" type="tns1:PlcyBillingInstruction">
                <xs:annotation>
                  <xs:documentation>The policy billing instruction which uses this modifier.  Null if the modifier is not used by a           billing instruction.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ChargeSlicingOverrides" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Overrides of a PaymentPlan's charge slicing settings.  All fields are nullable, and when a field is         null it means that the ChargeSlicingOverrides does not override that field.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ChargeSlicingModifier" nillable="true" type="tns1:ChargeSlicingModifier">
                <xs:annotation>
                  <xs:documentation>The modifier for which this provides the overrides.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DaysFromReferenceDateToDownPayment" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Override of the payment plan's DaysFromReferenceDateToDownPayment</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DaysFromReferenceDateToFirstInstallment" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Override of the payment plan's DaysFromReferenceDateToFirstInstallment</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DaysFromReferenceDateToOneTimeCharge" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Override of the payment plan's DaysFromReferenceDateToOneTimeCharge</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DownPaymentAfter" nillable="true" type="tns2:PaymentScheduledAfter">
                <xs:annotation>
                  <xs:documentation>Override of the payment plan's DownPaymentAfter</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DownPaymentPercent" nillable="true" type="soapenc:decimal">
                <xs:annotation>
                  <xs:documentation>Override of the payment plan's DownPaymentPercent</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FirstInstallmentAfter" nillable="true" type="tns2:PaymentScheduledAfter">
                <xs:annotation>
                  <xs:documentation>Override of the payment plan's FirstInstallmentAfter</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="MaximumNumberOfInstallments" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Override of the payment plan's MaximumNumberOfInstallments</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OneTimeChargeAfter" nillable="true" type="tns2:PaymentScheduledAfter">
                <xs:annotation>
                  <xs:documentation>Override of the payment plan's OneTimeChargeAfter</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ChargeSlicingModifier" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A ChargeSlicingModifier modifies any of a payment plan's charge slicing settings.  It uses a ChargeSlicingOverrides, which specifies which settings to modify.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:PaymentPlanModifier">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BillingInstructionType" nillable="true" type="tns2:BillingInstruction">
                <xs:annotation>
                  <xs:documentation>The billing instruction type that this modifier applies to.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ChargeSlicingOverrides" nillable="true" type="tns1:ChargeSlicingOverrides">
                <xs:annotation>
                  <xs:documentation>The overrides of the PaymentPlan's charge slicing settings.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PaymentPlan" nillable="true" type="tns1:PaymentPlan">
                <xs:annotation>
                  <xs:documentation>The payment plan that uses this modifier for its overrides.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfChargeSlicingModifier" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:ChargeSlicingModifier[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PaymentPlan" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>new payment plan</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:Plan">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="ChargeSlicingModifiers" nillable="true" type="tns1:ArrayOfChargeSlicingModifier">
                <xs:annotation>
                  <xs:documentation>A map of BillingInstructionType-&gt;ChargeSlicingModifier.  The ChargeSlicingModifier is used           to customize the charge slicing settings of the payment plan when the plan is used by billing instructions           of the given type.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>The currency used by this entity's silo. NOTE: when inserting a PaymentPlan this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="DaysBeforePolicyExpirationForInvoicingBlackout" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>The invoicing blackout starts this number days of days before the policy expiration date.  No invoice items            for the charge will be billed or due, depending on the InvoicingBlackoutType, on or after the invoicing blackout.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="DaysFromReferenceDateToDownPayment" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>The down payment is scheduled this many days after the DownPaymentAfter reference date.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="DaysFromReferenceDateToFirstInstallment" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>The first installment is scheduled this many days after the FirstInstallmentAfter reference date.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="DaysFromReferenceDateToOneTimeCharge" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>The payment for a one time charge is scheduled this many days after the OneTimeChargeAfter reference date.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DownPaymentAfter" nillable="true" type="tns2:PaymentScheduledAfter">
                <xs:annotation>
                  <xs:documentation>The down payment is scheduled daysFromReferenceDateToDownPayment after this reference date.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="DownPaymentPercent" nillable="true" type="soapenc:decimal">
                <xs:annotation>
                  <xs:documentation>The down payment percent NOTE: when inserting a PaymentPlan this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FirstInstallmentAfter" nillable="true" type="tns2:PaymentScheduledAfter">
                <xs:annotation>
                  <xs:documentation>The first installment is scheduled daysFromReferenceDateToFirstInstall after this reference date.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InstallmentFee" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>The amount of the installment fee</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InvoiceItemPlacementCutoffType" nillable="true" type="tns2:InvoiceItemPlacementCutoffType">
                <xs:annotation>
                  <xs:documentation>Invoice items created by the payment plan can be placed on invoices whose cutoff date is after the             date of the invoice item.  InvoiceItemPlacementCutoffType chooses the cutoff date -- it can be either the             invoice event (bill) date or the invoice payment due date.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InvoicingBlackoutType" nillable="true" type="tns2:InvoicingBlackoutType">
                <xs:annotation>
                  <xs:documentation>When placing invoice items, BillingCenter needs to know the last invoice on which items can be placed.             InvoicingBlackoutType determines whether DaysBeforePolicyExpirationForInvoicingBlackout means that no invoice             items will be *billed* that number of days before the policy expires or whether it means that no invoice             items will be *due* that number of days before the policy expires.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="MaximumNumberOfInstallments" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>The maximum number of installments for new business NOTE: when inserting a PaymentPlan this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OneTimeChargeAfter" nillable="true" type="tns2:PaymentScheduledAfter">
                <xs:annotation>
                  <xs:documentation>The payment for a one time charge is scheduled daysFromReferenceDateToOneTimeCharge after this reference date.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Periodicity" nillable="true" type="tns2:Periodicity">
                <xs:annotation>
                  <xs:documentation>The periodicity of installments -- Weekly, Monthly, Quarterly, etc. NOTE: when inserting a PaymentPlan this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Reporting" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether this payment plan is for premium reporting</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="SkipFeeForDownPayment" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether to skip the installment fee for the down payment</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="UserVisible" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether this payment plan shows in lists of payment plans selectable by users</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CommissionPlan" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Describes how to calculate the commission on a policy. A commission plan has a set of producer tiers to which it applies. The plan only applies to a producer if that producer's tier is in the AllowedTiers set. A commission plan also has a set of sub plans which apply in specific conditions, depending on the implementation of the ICommission plugin </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:Plan">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>The currency used by this entity's silo. NOTE: when inserting a CommissionPlan this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ReturnPremiumHandlingScheme" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A scheme for handling return premium</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AllocateMethod" nillable="true" type="tns2:ReturnPremiumAllocateMethod">
                <xs:annotation>
                  <xs:documentation>Method option: First to Last, Last to First, etc.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AllocateTiming" nillable="true" type="tns2:ReturnPremiumAllocateTiming">
                <xs:annotation>
                  <xs:documentation>Allocate Timing option: Bill, etc.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ExcessTreatment" nillable="true" type="tns2:ReturnPremiumExcessTreatment">
                <xs:annotation>
                  <xs:documentation>Excess Treatment option: Unapplied, etc.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="HandlingCondition" nillable="true" type="tns2:ReturnPremiumHandlingCondition">
                <xs:annotation>
                  <xs:documentation>The return premium handling condition to which this return premium handling scheme applies. NOTE: when inserting a ReturnPremiumHandlingScheme this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Priority" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>The priority of this scheme within its parent return premium plan. Lower number values have higher priority. NOTE: when inserting a ReturnPremiumHandlingScheme this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReturnPremiumPlan" nillable="true" type="tns1:ReturnPremiumPlan">
                <xs:annotation>
                  <xs:documentation>The return premium plan to which this handling scheme belongs.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="StartDateOption" nillable="true" type="tns2:ReturnPremiumStartDateOption">
                <xs:annotation>
                  <xs:documentation>Start date option: Policy Effective Date, etc.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfReturnPremiumHandlingScheme" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:ReturnPremiumHandlingScheme[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ReturnPremiumPlan" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A ReturnPremiumPlan specifies how to allocate return premium through a set of ReturnPremiumHandlingSchemes each uniquely identified by a ReturnPremiumHandlingCondition} that identifies whether a scheme applies to a collection of (return premium) InvoiceItems.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:Plan">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="ChargeQualification" nillable="true" type="tns2:ReturnPremiumChargeQualification">
                <xs:annotation>
                  <xs:documentation>Return premium charge qualification type.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ListBillAccountExcessTreatment" nillable="true" type="tns2:ListBillAccountExcess"/>
              <xs:element maxOccurs="1" minOccurs="0" name="ReturnPremiumHandlingSchemes" nillable="true" type="tns1:ArrayOfReturnPremiumHandlingScheme">
                <xs:annotation>
                  <xs:documentation>An array of ReturnPremiumHandlingSchemes. Each ReturnPremiumHandlingScheme specifies how return premium is allocated for its specific condition.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="DistributionCriterionFilter" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Specifies an InvoiceItem distribution target filter criterion associated with an Allocation Plan</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ContainingAllocationPlan" nillable="true" type="tns1:PaymentAllocationPlan">
                <xs:annotation>
                  <xs:documentation>The containing AllocationPlan for this distribution target invoice item filter.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DistributionFilterType" nillable="true" type="tns2:DistributionFilterType">
                <xs:annotation>
                  <xs:documentation>The distribution criterion filter type NOTE: when inserting a DistributionCriterionFilter this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfDistributionCriterionFilter" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:DistributionCriterionFilter[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="InvoiceItemOrdering" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ContainingAllocationPlan" nillable="true" type="tns1:PaymentAllocationPlan">
                <xs:annotation>
                  <xs:documentation>The containing AllocationPlan for this distribution target invoice item filter.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InvoiceItemOrderingType" nillable="true" type="tns2:InvoiceItemOrderingType">
                <xs:annotation>
                  <xs:documentation>The invoice item ordering type NOTE: when inserting a InvoiceItemOrdering this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Priority" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>The priority of this ordering within its parent payment allocation plan. Lower number values have higher priority. NOTE: when inserting a InvoiceItemOrdering this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfInvoiceItemOrdering" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:InvoiceItemOrdering[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PaymentAllocationPlan" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A payment allocation plan specifies distribution and allocation of moneys from payments, excess unapplied funds, etc., to InvoiceItems for an Account.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:Plan">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="DistributionCriteria" nillable="true" type="tns1:ArrayOfDistributionCriterionFilter">
                <xs:annotation>
                  <xs:documentation>A set of filters that together identify the positive, unsettled InvoiceItems available for distribution of moneys.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InvoiceItemOrdering" nillable="true" type="tns1:ArrayOfInvoiceItemOrdering">
                <xs:annotation>
                  <xs:documentation>A set of orderings that, when compounded, order InvoiceItems according to allocation priority.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="DelinquencyPlanEvent" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element name="Automatic" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>null NOTE: when inserting a DelinquencyPlanEvent this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DelinquencyPlanReason" nillable="true" type="tns1:DelinquencyPlanReason">
                <xs:annotation>
                  <xs:documentation>The associated delinquency plan reason</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EventName" nillable="true" type="tns2:DelinquencyEventName">
                <xs:annotation>
                  <xs:documentation>null NOTE: when inserting a DelinquencyPlanEvent this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OffsetDays" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>The target date of the event, in terms of the number of days before or after the trigger basis' date</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="RelativeOrder" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Used for sorting events with same number of days before or after the same trigger basis</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TriggerBasis" nillable="true" type="tns2:DelinquencyTriggerBasis">
                <xs:annotation>
                  <xs:documentation>Date to use as the basis for event trigger target dates</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfDelinquencyPlanEvent" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:DelinquencyPlanEvent[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="DelinquencyPlanReason" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Contain per delinquency reason specific information</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DelinquencyPlan" nillable="true" type="tns1:DelinquencyPlan">
                <xs:annotation>
                  <xs:documentation>The delinquency plan this reason belongs to.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DelinquencyReason" nillable="true" type="tns2:DelinquencyReason">
                <xs:annotation>
                  <xs:documentation>The delinquency reason, such as past due, failure to report, etc.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PlanEvents" nillable="true" type="tns1:ArrayOfDelinquencyPlanEvent">
                <xs:annotation>
                  <xs:documentation>The delinquency plan events for this reason.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="WorkflowType" nillable="true" type="tns2:Workflow">
                <xs:annotation>
                  <xs:documentation>The workflow to use for the delinquency reason. NOTE: when inserting a DelinquencyPlanReason this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfDelinquencyPlanReason" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:DelinquencyPlanReason[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="DelinquencyPlan" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A delinquency plan containing a set of triggers to execute on a delinquency process.             Also holds information about conditions for delinquency, such as threshold overdue premium amount.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:Plan">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AcctEnterDelinquencyThreshold" nillable="true" type="tns1:MonetaryAmount"/>
              <xs:element maxOccurs="1" minOccurs="0" name="ApplicableSegments" nillable="true" type="tns2:ApplicableSegments">
                <xs:annotation>
                  <xs:documentation>The market segments for which this delinquency plan may be used</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CancellationTarget" nillable="true" type="tns2:CancellationTarget">
                <xs:annotation>
                  <xs:documentation>null NOTE: when inserting a DelinquencyPlan this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CancellationThreshold" nillable="true" type="tns1:MonetaryAmount"/>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>The currency used by this entity's silo. NOTE: when inserting a DelinquencyPlan this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DelinquencyPlanReasons" nillable="true" type="tns1:ArrayOfDelinquencyPlanReason"/>
              <xs:element maxOccurs="1" minOccurs="0" name="ExitDelinquencyThreshold" nillable="true" type="tns1:MonetaryAmount"/>
              <xs:element name="GracePeriodDays" nillable="true" type="soapenc:int"/>
              <xs:element name="HoldInvoicingOnDlnqPolicies" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>If true, InvoiceItems associated with delinquent policy periods will be held</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="LateFeeAmount" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>null NOTE: when inserting a DelinquencyPlan this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PolEnterDelinquencyThreshold" nillable="true" type="tns1:MonetaryAmount"/>
              <xs:element name="ReinstatementFeeAmount" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>null NOTE: when inserting a DelinquencyPlan this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="WriteoffThreshold" nillable="true" type="tns1:MonetaryAmount"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ProducerHistory" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Producer-specific history events</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:History">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Producer" nillable="true" type="tns1:Producer">
                <xs:annotation>
                  <xs:documentation>The related producer.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PolTransferByProdCode" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Describes the transfer of a set of policy periods owned by one producer code to another producer code.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:PolicyTransfer">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PolTransferByRole" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Describes the transfer of a role on a policy period to another producer code.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:PolicyTransfer">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicyPeriod" nillable="true" type="tns1:PolicyPeriod">
                <xs:annotation>
                  <xs:documentation>The policy period to transfer NOTE: when inserting a PolTransferByRole this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="RoleToTransfer" nillable="true" type="tns2:PolicyRole">
                <xs:annotation>
                  <xs:documentation>The role to transfer NOTE: when inserting a PolTransferByRole this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PolicyTransfer" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Base entity used for scheduling a policy period transfer between producer codes.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CommissionTransferOption" nillable="true" type="tns2:CommissionTransferOption">
                <xs:annotation>
                  <xs:documentation>Specifies how commission will be transferred to the new producer code NOTE: when inserting a PolicyTransfer this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>The currency used by this entity's silo. NOTE: when inserting a PolicyTransfer this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DestinationProducerCode" nillable="true" type="tns1:ProducerCode">
                <xs:annotation>
                  <xs:documentation>ProducerCode receiving the policy periods</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SourceProducerCode" nillable="true" type="tns1:ProducerCode">
                <xs:annotation>
                  <xs:documentation>The producer code whose policy periods are to be transferred</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Transferred" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>if the transfer has been executed</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ProducerPolicyHistory" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>History events involving a policy and producers</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:PolicyHistory">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicyTransfer" nillable="true" type="tns1:PolicyTransfer">
                <xs:annotation>
                  <xs:documentation>The associated PolicyTransfer entity. NOTE: when inserting a ProducerPolicyHistory this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="RoleTransferred" nillable="true" type="tns2:PolicyRole">
                <xs:annotation>
                  <xs:documentation>The role transferred.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PolicyHistory" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Policy-specific history events</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:AccountHistory">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicyPeriod" nillable="true" type="tns1:PolicyPeriod">
                <xs:annotation>
                  <xs:documentation>The related policy period. NOTE: when inserting a PolicyHistory this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AccountHistory" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Account-specific history events</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:History">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Account" nillable="true" type="tns1:Account">
                <xs:annotation>
                  <xs:documentation>The related account.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OtherAccount" nillable="true" type="tns1:Account">
                <xs:annotation>
                  <xs:documentation>The second account related to this account history. May be null</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="UserHistory" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>User-specific history events</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:History">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="HistoryUser" nillable="true" type="tns1:User">
                <xs:annotation>
                  <xs:documentation>The related user.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="History" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Records history events for billing center entities.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CountsAsActivity" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Denotes whether this history event counts as activity on the HistoryEventContainer.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CustomType" nillable="true" type="tns2:CustomHistoryType">
                <xs:annotation>
                  <xs:documentation>Customer-defined history event type. This is used to support rules that execute only once per claim.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Description" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Description of the history event.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="EventDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date of the history event. NOTE: when inserting a History this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EventTimestamp" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Timestamp when the event occurred.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EventType" nillable="true" type="tns2:HistoryEventType">
                <xs:annotation>
                  <xs:documentation>The type of history event. NOTE: when inserting a History this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="RefNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Reference number.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="RuleUID" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The unique id of the rule that caused this history event to be created. Optional.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Transaction" nillable="true" type="tns1:Transaction">
                <xs:annotation>
                  <xs:documentation>The related transaction.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Type" nillable="true" type="tns2:HistoryType">
                <xs:annotation>
                  <xs:documentation>Type of claim or exposure event.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="User" nillable="true" type="tns1:User">
                <xs:annotation>
                  <xs:documentation>User who created this history event. Optional.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Writeoff" nillable="true" type="tns1:Writeoff">
                <xs:annotation>
                  <xs:documentation>The related writeoff.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PlanHistory" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Plan-specific history events</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:History">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Plan" nillable="true" type="tns1:Plan">
                <xs:annotation>
                  <xs:documentation>The related plan.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfPlanHistory" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:PlanHistory[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Plan" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Base type for plans</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Description" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The description of the plan</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="EffectiveDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date on which this plan becomes effective. NOTE: when inserting a Plan this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ExpirationDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date on which this plan expires. Null indicates that this plan has no definite expiration date.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="History" nillable="true" type="tns1:ArrayOfPlanHistory">
                <xs:annotation>
                  <xs:documentation>History events for this Plan</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="InUse" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Internal flag used to determine whether or not this plan is in use.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Name" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The name of the plan NOTE: when inserting a Plan this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="PlanOrder" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>The order of this plan in the list of all plans.  Lower PlanOrder values are higher priority NOTE: when inserting a Plan this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AgencyBillPlan" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>An Agency Bill Plan. Specifies details about the agency billing cycle such as whether and when statements get sent to a producer.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:Plan">
            <xs:sequence>
              <xs:element name="AutoProcessWhenPaymentMatches" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Automatically apply payment if the payment matches either the statement or promise as appropriate.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ClearCommisionThreshold" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>Automatically write off commission differences if LowCommissionCleared is true and they are less than this threshold.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ClearGrossThreshold" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>Automatically write off gross differences if LowGrossCleared is true and they are less than this threshold.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ClearingLogicTarget" nillable="true" type="tns2:ClearingLogicTarget">
                <xs:annotation>
                  <xs:documentation>Clearing Logic will be applied on this.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="CreateOffsetsOnBilledInvoices" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>True means when an offset is created for moving or holding a billed item, the offset will be created on the same (billed) invoice.  False means it will be created on the next planned invoice.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>The currency used by this entity's silo. NOTE: when inserting a AgencyBillPlan this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="CycleCloseDayOfMonth" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Preferred day of the month on which billing cycle should close (no invoice items with dates after this day show up on statement).             Use StandardCycleCloseDayOfMonth to get a standard CycleCloseDayOfMonth that is useful outside the UI.  (It ensures that the day of             month is correct when the CycleCloseDayOfMonthLogic is first or last business day.)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CycleCloseDayOfMonthLogic" nillable="true" type="tns2:DayOfMonthLogic">
                <xs:annotation>
                  <xs:documentation>Defines how the cycle close day of month will be adjusted (if at all) to fall on a business day.  Use             StandardCycleCloseDayOfMonthLogic to get a standard CycleCloseDayOfMonthLogic that is useful outside the UI.  (It ensures that the day of             month logic works with the cycle close day of month when the CycleCloseDayOfMonthLogic is first or last business day.)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="DaysAfterCycleCloseToSendStmnt" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Number of days after the close of a billing cycle that a statement invoice should be sent to the producer</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="DaysUntilFirstDunningSent" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>If FirstDunningSentIfNotPaid is true, then send a first Dunning Notice if payment not received within this number of days after the due date.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="DaysUntilPromiseReminderSent" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>If promise to pay hasn't been received by this number of days after cycle close, reminder will be sent to producer.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="DaysUntilSecondDunningSent" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>If SecondDunningSentIfNotPaid is true, then send a second Dunning Notice if payment not received within this number of days after the due date.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="ExceptionForPastDueStatement" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>True means an exception item will be generated for a past due statement</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="ExceptionIfPromiseNotReceived" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>True means that a exception will be generated if the producer has not sent in their Account Current Promise to Pay.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="FirstDunningSentIfNotPaid" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Send First Dunning Notice if payment not received within DaysUntilFirstDunningSent after Due Date.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="LowCommissionCleared" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Automatically writeoff commission differences less than ClearCommissionThreshold. If true, the plan cannot be committed unless ClearCommissionThreshold has a value.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="LowGrossCleared" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Automatically writeoff gross differences less than ClearGrossThreshold. If true, the plan cannot be committed unless ClearGrossThreshold has a value.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="NetThresholdForSuppressingStmt" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>If StatementsWithLowNetSuppressed is true, then any statement with a net amount less than this field is not sent to the producer</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="PaymentExceptionsSent" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>True means that a statement of exceptions will be sent to the producer after the Payment is processed.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="PaymentTermsInDays" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Number of days between close date of cycle and due date for statement associated with that cycle</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="PmntSchdChngOffsetsOnBilled" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>True means, during a payment schedule change, when an offset is created for a payment on a billed item, the offset will be created on the same (billed) invoice.  False means it will be created on the next planned invoice.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="ProducerWriteoffThreshold" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>Writeoff threshold at producer level. NOTE: when inserting a AgencyBillPlan this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PromiseDueInDays" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>The number of days after the cycle close at which the promise is considered due.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="PromiseExceptionsSent" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>True means that a statement of exceptions will be sent to the producer after the Promise is processed.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="ReminderSentIfPromiseNotRcvd" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>True means that a reminder notice will be sent to the producer if they have not sent in their Account Current Promise to Pay</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="SecondDunningSentIfNotPaid" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Send Second Dunning Notice if payment not received within DaysUntilSecondDunningSent after Due Date.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="SnapshotNonPastDueItems" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>True means that when a StatementInvoice is billed, we will snapshot all unpaid invoice items from the previous statement, whether they are past due or not.  False means we will only snapshot those unpaid invoice items from the previous statement that are actually past due.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="StatementSentAfterCycleClose" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>True means that BillingCenter will send a statement invoice to the producer after the billing cycle has closed.  False means no statement is sent</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="StatementsWithLowNetSuppressed" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>True means that any statement which has a net amount below a specified threshold will be blocked from being sent to the producer. If true, the plan cannot be committed unless NetThresholdForSuppressingStmt has a value.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="WorkflowPlan" nillable="true" type="tns2:Workflow">
                <xs:annotation>
                  <xs:documentation>The workflow to use for processing this agency bill plan. NOTE: when inserting a AgencyBillPlan this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ProducerContactRole" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A role for a particular producer contact</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ProducerContact" nillable="true" type="tns1:ProducerContact">
                <xs:annotation>
                  <xs:documentation>The related producer contact</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Role" nillable="true" type="tns2:ProducerRole">
                <xs:annotation>
                  <xs:documentation>The role this contact has on the producer</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfProducerContactRole" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:ProducerContactRole[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ProducerContact" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Join entity between a Contact AND a producer</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Contact" nillable="true" type="tns1:Contact">
                <xs:annotation>
                  <xs:documentation>The related contact NOTE: when inserting a ProducerContact this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PrimaryProducer" nillable="true" type="tns1:Producer">
                <xs:annotation>
                  <xs:documentation>The producer for which this is the primary contact (other end of onetoone)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Producer" nillable="true" type="tns1:Producer">
                <xs:annotation>
                  <xs:documentation>The related producer</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Roles" nillable="true" type="tns1:ArrayOfProducerContactRole">
                <xs:annotation>
                  <xs:documentation>The roles for this producer contact</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfProducerContact" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:ProducerContact[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfProducerHistory" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:ProducerHistory[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfInvoiceStream" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:InvoiceStream[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfPaymentInstrument" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:PaymentInstrument[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfProducerCode" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:ProducerCode[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfProducerStatement" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:ProducerStatement[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Producer" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A producer</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AccountRep" nillable="true" type="tns1:User">
                <xs:annotation>
                  <xs:documentation>The internal BillingCenter user who manages all billing and payment related issues associated with this particular producer.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AgencyBillCycles" nillable="true" type="tns1:ArrayOfAgencyBillCycle">
                <xs:annotation>
                  <xs:documentation>Agency Bill Cycles for this Producer</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AgencyBillPlan" nillable="true" type="tns1:AgencyBillPlan">
                <xs:annotation>
                  <xs:documentation>Plan that governs how agency billing occurs.  If null, this is a direct bill.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="CombinedStatements" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether combined statements are allowed</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Contacts" nillable="true" type="tns1:ArrayOfProducerContact">
                <xs:annotation>
                  <xs:documentation>Contacts on this producer</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>The currency used by this entity's silo. NOTE: when inserting a Producer this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DefaultPaymentInstrument" nillable="true" type="tns1:PaymentInstrument">
                <xs:annotation>
                  <xs:documentation>The default PaymentInstrument to be used when no specific PaymentInstrument is specified.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="History" nillable="true" type="tns1:ArrayOfProducerHistory">
                <xs:annotation>
                  <xs:documentation>History entries on this account</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InvoiceStreams" nillable="true" type="tns1:ArrayOfInvoiceStream"/>
              <xs:element name="Name" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The name of this producer NOTE: when inserting a Producer this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="NameKanji" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The name of this producer in kanji.  Used only for Japanese and will be null otherwise.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OwnedPaymentInstruments" nillable="true" type="tns1:ArrayOfPaymentInstrument">
                <xs:annotation>
                  <xs:documentation>PaymentInstruments that belong to this Account and are usable for initiating billing</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PrimaryContact" nillable="true" type="tns1:ProducerContact">
                <xs:annotation>
                  <xs:documentation>The denormalized primary contact</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ProducerCodes" nillable="true" type="tns1:ArrayOfProducerCode">
                <xs:annotation>
                  <xs:documentation>The producer codes for this producer</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReportingGroup" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The reporting group assigned, if any NOTE: value is the PublicId of the ReportingGroup.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SecurityZone" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The security zone assigned to this producer, if any NOTE: value is the PublicId of the SecurityZone.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Statements" nillable="true" type="tns1:ArrayOfProducerStatement">
                <xs:annotation>
                  <xs:documentation>Statements for this Producer</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="SuspendNegativeAmounts" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Determines whether or not to suspend negative accounts NOTE: when inserting a Producer this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Tier" nillable="true" type="tns2:ProducerTier">
                <xs:annotation>
                  <xs:documentation>The Tier of the producer NOTE: when inserting a Producer this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TotalCommissionExpense" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>Denormalized value for Total Commission Expense</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TotalCommissionPayable" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>Denormalized value for Total Commission Payable</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TotalCommissionReserve" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>Denormalized value for Total Commission Reserve</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TroubleTicketJoinEntities" nillable="true" type="tns1:ArrayOfTroubleTicketJoinEntity">
                <xs:annotation>
                  <xs:documentation>Join entity that provides relationship with the trouble tickets associated with this producer</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="TroubleTicketJoinEntity" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A relationship (join entity) between a trouble ticket and an account/policy/producer.  Exactly one of {Account, Policy, PolicyPeriod, Producer, Transaction} must be non-null</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Account" nillable="true" type="tns1:Account">
                <xs:annotation>
                  <xs:documentation>The related account</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Policy" nillable="true" type="tns1:Policy">
                <xs:annotation>
                  <xs:documentation>The related policy</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicyPeriod" nillable="true" type="tns1:PolicyPeriod">
                <xs:annotation>
                  <xs:documentation>The related policy period</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Producer" nillable="true" type="tns1:Producer">
                <xs:annotation>
                  <xs:documentation>The related producer</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Transaction" nillable="true" type="tns1:Transaction">
                <xs:annotation>
                  <xs:documentation>The related transaction</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TroubleTicket" nillable="true" type="tns1:TroubleTicket">
                <xs:annotation>
                  <xs:documentation>The related trouble ticket</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfTroubleTicketJoinEntity" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:TroubleTicketJoinEntity[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PolicyPeriod" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A single policy period</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element name="AssignedRisk" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Indicates whether this policy period is written as part of a mandatory program for covering the worst risks</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BillingMethod" nillable="true" type="tns2:PolicyPeriodBillingMethod">
                <xs:annotation>
                  <xs:documentation>How to determine the default payer for this PolicyPeriod</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="BoundDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date this policy period was bound NOTE: when inserting a PolicyPeriod this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CancelReason" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The reason a policy was cancelled</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CancelStatus" nillable="true" type="tns2:PolicyCancelStatus">
                <xs:annotation>
                  <xs:documentation>Whether or not this policy period is open, pending cancellation, or canceled</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CancellationType" nillable="true" type="tns2:CancellationType">
                <xs:annotation>
                  <xs:documentation>The type of a policy cancellation</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="ChargeHeld" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Denormalized field. True if at least one charge on this policy period is currently held. Only valid for database queries</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CloseDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The time at which this policy period was closed</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ClosureStatus" nillable="true" type="tns2:PolicyClosureStatus">
                <xs:annotation>
                  <xs:documentation>Whether or not this policy period is open, closed, or open but locked</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ConfirmationNotificationState" nillable="true" type="tns2:ConfirmationNotificationState">
                <xs:annotation>
                  <xs:documentation>The state of confirmation notification.  If the state is NotifyUponSufficientPayment, the policy period will notify     the policy administration system (PAS) when sufficient payment is received to confirm the policy period.     If the state is Notified, the policy period has already notified the PAS that the policy period was confirmed.     If the state is DoNotNotify, the policy period won't notify the PAS regardless of payments.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Contacts" nillable="true" type="tns1:ArrayOfPolicyPeriodContact">
                <xs:annotation>
                  <xs:documentation>Contacts on this policy period</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>The currency used by this entity's silo. NOTE: when inserting a PolicyPeriod this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DBA" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Doing business as</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DiscountedPaymentThreshold" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>Amount after the policy is after a full pay discount</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="EligibleForFullPayDiscount" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether the policy is eligible for a full pay discount</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="FullPayDiscountEvaluated" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether the batch process has evaluated the eligible policies</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FullPayDiscountUntil" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date until the policy is eligible for a full pay discount</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="HeldForInvoiceSending" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Denormalized flag that tracks whether there exists a trouble ticket on this policy period with a hold with             type InvoiceSending.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="HoldInvoicingWhenDelinquent" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether to hold invoicing during delinquency; by default, same as field on DelinquencyPlan but can be used to override field on DelinquencyPlan. DO NOT GIVE DEFAULT VALUE - THAT IS SET IN BEFORE INSERT NOTE: when inserting a PolicyPeriod this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OfferNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The offer number used to create this PolicyPeriod in the Policy Administration System (PAS)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OverridingInvoiceStream" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The overriding invoice stream for this policy period.  May be null.  If null an invoice stream which     matches the policy period's periodicity will be automatically selected for the policy period. NOTE: value is the PublicId of the InvoiceStream.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OverridingPayerAccount" nillable="true" type="tns1:Account">
                <xs:annotation>
                  <xs:documentation>Account to use as the payer for new charges and items on this PolicyPeriod</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="PaymentDistributionEnabled" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>True if the policy period should participate in Payment Distribution of payments against its parent account</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="PaymentPlan" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The payment plan in use on this policy period NOTE: when inserting a PolicyPeriod this field must be non-null. NOTE: value is the PublicId of the PaymentPlan.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PendingRemainingBalanceFix" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Set by policy closure batch process when cannot close due to remaining balance and cleared by resolving the remaining balance</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicyCommissions" nillable="true" type="tns1:ArrayOfPolicyCommission">
                <xs:annotation>
                  <xs:documentation>The producer codes associated with this policy period</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicyDelinquencyProcesses" nillable="true" type="tns1:ArrayOfPolicyDlnqProcess">
                <xs:annotation>
                  <xs:documentation>Delinquency processes on this policy</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="PolicyNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The policy number for this policy period NOTE: when inserting a PolicyPeriod this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicyNumberLong" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>A denormalized field for use by searches that is equal to this PolicyPeriod's DisplayName</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="PolicyPerEffDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date when policy period takes effect NOTE: when inserting a PolicyPeriod this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="PolicyPerExpirDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date when policy period expires NOTE: when inserting a PolicyPeriod this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicyPeriodDelinquencyPlan" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The delinquency plan for this policy period. NOTE: value is the PublicId of the DelinquencyPlan.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PrimaryInsured" nillable="true" type="tns1:PolicyPeriodContact">
                <xs:annotation>
                  <xs:documentation>The denormalized primary insured</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PrimaryPolicyCommission" nillable="true" type="tns1:PolicyCommission">
                <xs:annotation>
                  <xs:documentation>Denormalization of the primary producer code (producer code with 'primary' role) on the policy period</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PriorPolicyNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The legacy policy number for this policy period</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="RiskJurisdiction" nillable="true" type="tns2:Jurisdiction">
                <xs:annotation>
                  <xs:documentation>The jurisdiction to which this policy period applies</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SecurityZone" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The security zone assigned to this policy period, if any NOTE: value is the PublicId of the SecurityZone.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="TermConfirmed" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>True if the policyperiod term is confirmed by the PAS (default true).</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="TermNumber" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>The number indicates the term of the policy period, starts with 1 and then incremented by 1 for every renewal or rewrite</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TroubleTicketJoinEntities" nillable="true" type="tns1:ArrayOfTroubleTicketJoinEntity">
                <xs:annotation>
                  <xs:documentation>Join entity that provides relationship with the trouble tickets associated with this policy period</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="UWCompany" nillable="true" type="tns2:UWCompany">
                <xs:annotation>
                  <xs:documentation>The UW company writing this policy period</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="UnderAudit" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether or not the policy period is under audit</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Underwriter" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The name of the underwriter</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="WesternMethod" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether Western Method accounting is used for earned premium calculations, otherwise Standard Method accounting is used. Value should not change after PolicyPeriod has been created</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PolicyDlnqProcess" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>DelinquencyProcess for a policy</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:DelinquencyProcess">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicyPeriod" nillable="true" type="tns1:PolicyPeriod"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="DelinquencyProcessEvent" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>An event occuring in the delinquency process workflow.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="ApprovalActivity" nillable="true" type="tns1:Activity">
                <xs:annotation>
                  <xs:documentation>Activity approving the event; will be null if the event is automatic</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Automatic" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>null NOTE: when inserting a DelinquencyProcessEvent this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CompletionTime" nillable="true" type="xsd:dateTime"/>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>The currency used by this entity's silo. NOTE: when inserting a DelinquencyProcessEvent this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CurrentDelinquencyProcess" nillable="true" type="tns1:DelinquencyProcess">
                <xs:annotation>
                  <xs:documentation>The associated delinquency process for which this event is the current event. (other end of onetoone)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DelinquencyProcess" nillable="true" type="tns1:DelinquencyProcess">
                <xs:annotation>
                  <xs:documentation>The associated delinquency process</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EventName" nillable="true" type="tns2:DelinquencyEventName">
                <xs:annotation>
                  <xs:documentation>null NOTE: when inserting a DelinquencyProcessEvent this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ExactTargetDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Exact target date set after the workflow begins</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OffsetDays" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>The target date of the event, in terms of the number of days before or after the trigger basis' date</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="RelativeOrder" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Used for sorting events with same number of days before or after the same trigger basis</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TriggerBasis" nillable="true" type="tns2:DelinquencyTriggerBasis">
                <xs:annotation>
                  <xs:documentation>Date to use as the basis for event trigger target dates</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="DelinquencyProcess" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Delinquency process for a policy</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Account" nillable="true" type="tns1:Account">
                <xs:annotation>
                  <xs:documentation>The account that has become delinquent</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Activities" nillable="true" type="tns1:ArrayOfActivity">
                <xs:annotation>
                  <xs:documentation>The activities created by this delinquency process</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Amount" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>The delinquent amount on the account that has become delinquent at the point when the delinquency process was started</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AssignCAActivity" nillable="true" type="tns1:Activity">
                <xs:annotation>
                  <xs:documentation>Foreign key to an activity notifying the user that the Collection Agency                 must be set before processing on this delinquency can continue.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>The currency used by this entity's silo. NOTE: when inserting a DelinquencyProcess this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CurrentEventDenorm" nillable="true" type="tns1:DelinquencyProcessEvent">
                <xs:annotation>
                  <xs:documentation>Denormalization of the most recently executed DelinquencyProcessEvent</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DelinquencyPlan" nillable="true" type="tns1:DelinquencyPlan">
                <xs:annotation>
                  <xs:documentation>The delinquency plan for this delinquency process NOTE: when inserting a DelinquencyProcess this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ExitDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date on which the policy exited delinquency. This is set in the workflow.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="HeldDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date on which a hold was applied to the delinquency process; null if the process not held</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InceptionDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The day on which the delinquency process hit the inception step; generally, the start date plus a grace period.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Phase" nillable="true" type="tns2:DelinquencyProcessPhase">
                <xs:annotation>
                  <xs:documentation>The current phase of delinquency processing, either "Delinquency" or "ExitDelinquency"</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Reason" nillable="true" type="tns2:DelinquencyReason">
                <xs:annotation>
                  <xs:documentation>Reason for why the delinquency process was started</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="StartDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date on which the delinquency process started NOTE: when inserting a DelinquencyProcess this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Status" nillable="true" type="tns2:DelinquencyProcessStatus">
                <xs:annotation>
                  <xs:documentation>The current status of the delinquency process</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TopLevelWorkflow" nillable="true" type="tns1:DelProcessWorkflow">
                <xs:annotation>
                  <xs:documentation>Foreign key to the top level workflow.  The top level workflow is the one with the workflow category of delinquency.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfDelinquencyProcess" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:DelinquencyProcess[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AccountContactRole" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A role for a particular account contact</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AccountContact" nillable="true" type="tns1:AccountContact">
                <xs:annotation>
                  <xs:documentation>The related account contact</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Role" nillable="true" type="tns2:AccountRole">
                <xs:annotation>
                  <xs:documentation>The role NOTE: when inserting a AccountContactRole this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfAccountContactRole" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:AccountContactRole[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AccountContact" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Join entity between a contact and an account</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Account" nillable="true" type="tns1:Account">
                <xs:annotation>
                  <xs:documentation>The related account</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Contact" nillable="true" type="tns1:Contact">
                <xs:annotation>
                  <xs:documentation>The related contact NOTE: when inserting a AccountContact this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InsuredAccount" nillable="true" type="tns1:Account">
                <xs:annotation>
                  <xs:documentation>The account for which this contact is the insured (other end of onetoone)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PrimaryPayer" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether this payer is the primary payer on the account</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Roles" nillable="true" type="tns1:ArrayOfAccountContactRole">
                <xs:annotation>
                  <xs:documentation>The roles for this account contact</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfAccountContact" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:AccountContact[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfAccountInvoice" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:AccountInvoice[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AccountPaymentPlanJoinEntity" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A relationship (join entity) between an Account and a PaymentPlan.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Account" nillable="true" type="tns1:Account">
                <xs:annotation>
                  <xs:documentation>The account with related payment plans</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>The currency used by this entity's silo. NOTE: when inserting a AccountPaymentPlanJoinEntity this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="PaymentPlan" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The payment plan supported by this account NOTE: when inserting a AccountPaymentPlanJoinEntity this field must be non-null. NOTE: value is the PublicId of the PaymentPlan.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfAccountPaymentPlanJoinEntity" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:AccountPaymentPlanJoinEntity[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Account" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>An account</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AccountDelinquencyProcesses" nillable="true" type="tns1:ArrayOfDelinquencyProcess">
                <xs:annotation>
                  <xs:documentation>Delinquency processes on this account including Collateral and Policy</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AccountName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The name of this account</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AccountNameKanji" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The name of this account in kanji.  Used only for Japanese and will be null otherwise.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="AccountNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The account number for this account NOTE: when inserting a Account this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AccountType" nillable="true" type="tns2:AccountType">
                <xs:annotation>
                  <xs:documentation>Type of this account</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BillDateOrDueDateBilling" nillable="true" type="tns2:BillDateOrDueDateBilling">
                <xs:annotation>
                  <xs:documentation>Whether the account's invoice days (InvoiceDayOfMonth, InvoiceDayOfWeek, etc.) are the days invoices are sent or due.     If BillDateBilling, the invoice days are the days invoices are sent (Invoice.EventDate).     If DueDateBilling the invoice days are the days invoices are due (Invoice.PaymentDueDate).</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BillingLevel" nillable="true" type="tns2:BillingLevel">
                <xs:annotation>
                  <xs:documentation>Billing level of this account</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="BillingPlan" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>null NOTE: when inserting a Account this field must be non-null. NOTE: value is the PublicId of the BillingPlan.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="ChargeHeld" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Denormalized field. True if at least one charge owned by this account or any of its children policies is currently held. Only valid for database queries</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CloseDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date when the account was closed; null if the account is not closed</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Collecting" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Flag used to determine whether or not this account is being collected.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CollectionAgency" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The collection agency for this account, if any NOTE: value is the PublicId of the CollectionAgency.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Contacts" nillable="true" type="tns1:ArrayOfAccountContact">
                <xs:annotation>
                  <xs:documentation>Contacts on this account</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>The currency used by this entity's silo. NOTE: when inserting a Account this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DBA" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Doing business as</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DefaultPaymentInstrument" nillable="true" type="tns1:PaymentInstrument">
                <xs:annotation>
                  <xs:documentation>The default PaymentInstrument to be used when no specific PaymentInstrument is specified.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DefaultUnappliedFund" nillable="true" type="tns1:UnappliedFund">
                <xs:annotation>
                  <xs:documentation>Denormalization of the account's default unappliedfund</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="DelinquencyPlan" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The delinquency plan for this account NOTE: when inserting a Account this field must be non-null. NOTE: value is the PublicId of the DelinquencyPlan.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DelinquencyStatus" nillable="true" type="tns2:DelinquencyStatus">
                <xs:annotation>
                  <xs:documentation>Delinquency status of this account</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DistributionLimitType" nillable="true" type="tns2:DistributionLimitType">
                <xs:annotation>
                  <xs:documentation>The type of limit the system should impose on payment distribution
@deprecated The type of limit the system should impose on payment distribution
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="EveryOtherWeekInvoiceAnchorDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The base date that defines when the Every Other Week invoices occur. NOTE: when inserting a Account this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FEIN" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The FEIN number of the company</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="FirstTwicePerMonthInvoiceDayOfMonth" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>First day (of two) of the month for twice-per-month invoicing.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="HeldForInvoiceSending" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Denormalized flag that tracks whether there exists a trouble ticket on this account with a hold with type InvoiceSending.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Insured" nillable="true" type="tns1:AccountContact">
                <xs:annotation>
                  <xs:documentation>The denormalized insured</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="InvoiceDayOfMonth" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>For monthly payment plans, this is the day of the month that the invoice should fall on</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InvoiceDayOfWeek" nillable="true" type="tns2:DayOfWeek">
                <xs:annotation>
                  <xs:documentation>For Every Week payment plans, this is the day of the week that the invoice should fall on.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InvoiceDeliveryType" nillable="true" type="tns2:InvoiceDeliveryMethod">
                <xs:annotation>
                  <xs:documentation>Method by which the invoice is delivered</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InvoiceStreams" nillable="true" type="tns1:ArrayOfInvoiceStream"/>
              <xs:element maxOccurs="1" minOccurs="0" name="Invoices" nillable="true" type="tns1:ArrayOfAccountInvoice">
                <xs:annotation>
                  <xs:documentation>Invoices for this account</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="NewPolicyPaymentDistributable" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>True if new policy periods added to this account should be Payment Distributable by default</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OrganizationType" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The company's organization type</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OwnedPaymentInstruments" nillable="true" type="tns1:ArrayOfPaymentInstrument">
                <xs:annotation>
                  <xs:documentation>PaymentInstruments that belong to this Account and are usable for initiating billing</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ParentAccount" nillable="true" type="tns1:Account">
                <xs:annotation>
                  <xs:documentation>The parent account</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PaymentPlanJoinEntities" nillable="true" type="tns1:ArrayOfAccountPaymentPlanJoinEntity">
                <xs:annotation>
                  <xs:documentation>Payment Plans to be used by this account</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicyLevelPaymentOption" nillable="true" type="tns2:PolicyLevelPaymentOption">
                <xs:annotation>
                  <xs:documentation>The method for handling payments directed at a single specific policy period of this account</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="SecondTwicePerMonthInvoiceDayOfMonth" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Second day (of two) of the month for twice-per-month invoicing.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SecurityZone" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The security zone assigned to this account, if any NOTE: value is the PublicId of the SecurityZone.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Segment" nillable="true" type="tns2:AccountSegment">
                <xs:annotation>
                  <xs:documentation>The account's segment</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ServiceTier" nillable="true" type="tns2:CustomerServiceTier">
                <xs:annotation>
                  <xs:documentation>Customer service tier for this account</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TroubleTicketJoinEntities" nillable="true" type="tns1:ArrayOfTroubleTicketJoinEntity">
                <xs:annotation>
                  <xs:documentation>Join entity that provides relationship with the trouble tickets associated with this account</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="UnappliedFunds" nillable="true" type="tns1:ArrayOfUnappliedFund">
                <xs:annotation>
                  <xs:documentation>UnappliedFunds that belong to this Account</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Document" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Internal representation of a physical or electronic document.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Account" nillable="true" type="tns1:Account">
                <xs:annotation>
                  <xs:documentation>The related Account</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Author" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Name of the person who created the document.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DMS" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether this document has content stored in a Document Management System.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DateCreated" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date and time the document was created.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DateModified" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date and time the document was last modified.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Description" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Description of the document.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DocUID" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The Unique Identifier (UID) for this document.     The format of this UID is specific to the deployed Document Management System (DMS), and is passed to the configured IDocumentContentSource implementation.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DocumentIdentifier" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Short human-readable identifier for the document, often used as an extra storage location for form codes, when name and documenttype are inadequate.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Inbound" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether the document is an inbound, outbound, or stationary (null) document</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Language" nillable="true" type="tns2:LanguageType">
                <xs:annotation>
                  <xs:documentation>The language in which this document is created.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="MimeType" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The MIME type of this document; for example, application/msword for a Microsoft Word document.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Name" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Human-readable name of the document.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Obsolete" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>If true, the information in the document can no longer be relied upon to be up-to-date and relevant. This is often used instead of deletion to preserve history.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PendingDocUID" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The document is pending, and it's pending storage has Unique Identifier (UID).     The format of this UID is specific to the IDCS implementation.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Policy" nillable="true" type="tns1:Policy">
                <xs:annotation>
                  <xs:documentation>The related Policy</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Producer" nillable="true" type="tns1:Producer">
                <xs:annotation>
                  <xs:documentation>The related Producer</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Recipient" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Name of the intended recipient of the document (if any).</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Section" nillable="true" type="tns2:DocumentSection">
                <xs:annotation>
                  <xs:documentation>The section to which this document belongs, if any.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SecurityType" nillable="true" type="tns2:DocumentSecurityType">
                <xs:annotation>
                  <xs:documentation>Type of document used for access-restriction purposes, in conjunction with the information in security-config.xml.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Status" nillable="true" type="tns2:DocumentStatusType">
                <xs:annotation>
                  <xs:documentation>The current status of the document, if any.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Type" nillable="true" type="tns2:DocumentType">
                <xs:annotation>
                  <xs:documentation>The specific type of the document, if any.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Note" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Notes added by users</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Account" nillable="true" type="tns1:Account">
                <xs:annotation>
                  <xs:documentation>The related Account</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Author" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>User who wrote the note. NOTE: value is the PublicId of the User.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AuthoringDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date on which the note was originally authored.  If null, the CreateTime seves this purpose.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Body" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Body of the note.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Confidential" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether the note is confidential.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Language" nillable="true" type="tns2:LanguageType">
                <xs:annotation>
                  <xs:documentation>The language in which this note is created.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Policy" nillable="true" type="tns1:Policy">
                <xs:annotation>
                  <xs:documentation>The related Policy</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Producer" nillable="true" type="tns1:Producer">
                <xs:annotation>
                  <xs:documentation>The related Producer</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="RelatedTo" nillable="true" type="tns2:RelatedTo">
                <xs:annotation>
                  <xs:documentation>The subject the note is related to</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SecurityType" nillable="true" type="tns2:NoteSecurityType">
                <xs:annotation>
                  <xs:documentation>Type of note; used for access-restriction purposes</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Subject" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Subject or summary of the note.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Topic" nillable="true" type="tns2:NoteTopicType">
                <xs:annotation>
                  <xs:documentation>Topic to which the note belongs.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TroubleTicket" nillable="true" type="tns1:TroubleTicket">
                <xs:annotation>
                  <xs:documentation>The related trouble ticket</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AccountInfo" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>AccountInfo has been superseded by Data Transfer Object ("DTO") AccountInfoDTO</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element name="Account" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Account from which status information is collection NOTE: when inserting a AccountInfo this field must be non-null. NOTE: value is the PublicId of the Account.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AmountBilled" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>The amount billed on this account (includes all of account's policies)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AmountDue" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>The amount due on this account (includes all of account's policies)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AmountPaid" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>The amount paid on this account (includes all of account's policies)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AmountUnbilled" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>The unbilled amount on this account (includes all of account's policies)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Delinquent" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether or not the account is delinquent on the date of this request</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="HasOpenPolicies" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether or not the account has open policies</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InfoDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date and time that this snapshot of the Account Info was taken.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LastInvoice" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The last billed invoice NOTE: value is the PublicId of the Invoice.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LastInvoiceAmount" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>The amount of the last billed invoice</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LastPayment" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The last payment made on this account NOTE: value is the PublicId of the DirectBillMoneyRcvd.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="NextInvoice" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The next planned invoice NOTE: value is the PublicId of the Invoice.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="NextInvoiceAmount" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>The amount of the next planned invoice</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ActivityPattern" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>An activity pattern is a template for an activity. An activity pattern is not assigned to a user, nor does it belong to a claim; it is used only to create new activity instances. To create a new activity, an activity pattern is first chosen, and the values in the activity pattern are used to seed the values of the new activity instance.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="ActivityClass" nillable="true" type="tns2:ActivityClass">
                <xs:annotation>
                  <xs:documentation>The class of the activity.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="AutomatedOnly" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>True if the activity pattern is used only by automated additions to the workplan. If true, the pattern won't be shown as an option for users to choose in the application's interface.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Category" nillable="true" type="tns2:ActivityCategory">
                <xs:annotation>
                  <xs:documentation>Category used to organize the activity pattern.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Code" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The concise name of the activity pattern, used to identify the pattern within rules.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Command" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>A Gosu command to execute for this activity.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Description" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Description of the activity pattern.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DocumentTemplate" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The id of an associated document template. The id gets passed to IDocumentTemplateSource to retrieve the DocumentTemplateDescriptor.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EmailTemplate" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The id of an associated email template. The id gets passed to IEmailTemplateSource to retrieve the EmailTemplateDescriptor.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EscBusCalLocPath" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Location bean path to use for business calendar in calculating EscalationDate, if applicable.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EscalationBusCalTag" nillable="true" type="tns2:HolidayTagCode">
                <xs:annotation>
                  <xs:documentation>Holiday tag code to use for business calendar in calculating EscalationDate, if applicable.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EscalationDays" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Used in conjunction with EscalationStartPoint and EscalationIncludedDays to calculate the EscalationDate of the activity.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EscalationHours" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Used in conjunction with EscalationStartPoint and EscalationIncludedDays to calculate the EscalationDate of the activity.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EscalationInclDays" nillable="true" type="tns2:IncludeDaysType">
                <xs:annotation>
                  <xs:documentation>Which days to include in calculating the EscalationDate.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EscalationStartPt" nillable="true" type="tns2:StartPointType">
                <xs:annotation>
                  <xs:documentation>Which existing date on the activity or associated claim to use as the starting date for the EscalationDate.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Mandatory" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether completion of the activity is mandatory.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Priority" nillable="true" type="tns2:Priority">
                <xs:annotation>
                  <xs:documentation>Priority of the activity with respect to other activities.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Recurring" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether this activity is recurring.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ShortSubject" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Short subject field of the activity. For use in small areas e.g., a calendar event entry.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Subject" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Subject field of the activity.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TargetBusCalLocPath" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Location bean path to use for business calendar in calculating TargetDate, if applicable.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TargetBusCalTag" nillable="true" type="tns2:HolidayTagCode">
                <xs:annotation>
                  <xs:documentation>Holiday tag code to use for business calendar in calculating TargetDate, if applicable.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TargetDays" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Used in conjunction with TargetStartPoint and TargetIncludedDays to calculate the ActionDate of the activity.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TargetHours" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Used in conjunction with TargetStartPoint and TargetIncludedDays to calculate the ActionDate of the activity.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TargetIncludeDays" nillable="true" type="tns2:IncludeDaysType">
                <xs:annotation>
                  <xs:documentation>Which days to include in calculating the TargetDate.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TargetStartPoint" nillable="true" type="tns2:StartPointType">
                <xs:annotation>
                  <xs:documentation>Which existing date on the activity or associated claim to use as the starting date for the TargetDate.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Type" nillable="true" type="tns2:ActivityType">
                <xs:annotation>
                  <xs:documentation>Type of the activity.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfActivityPattern" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:ActivityPattern[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfBillingPlan" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:BillingPlan[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfDelinquencyPlan" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:DelinquencyPlan[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfPaymentPlan" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:PaymentPlan[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="DefaultCmsnSubPlan" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Represents the default sub-plan. The default sub-plan has no conditions, and so may be applied when                  no other sub-plan applies.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:CommissionSubPlan">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CondCmsnSubPlanJurisdiction" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>An entry in the CondCmsnSubPlan's IncludedJurisdictions table. Each entry contains a Jurisdiction included by the sub-plan.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CondCmsnSubPlan" nillable="true" type="tns1:CondCmsnSubPlan">
                <xs:annotation>
                  <xs:documentation>FK to container.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Jurisdiction" nillable="true" type="tns2:Jurisdiction">
                <xs:annotation>
                  <xs:documentation>The jurisdiction. NOTE: when inserting a CondCmsnSubPlanJurisdiction this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfCondCmsnSubPlanJurisdiction" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:CondCmsnSubPlanJurisdiction[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CondCmsnSubPlan" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Represents a conditional sub-plan. A conditional sub-plan's conditions must be satisfied by a policy in order to apply.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:CommissionSubPlan">
            <xs:sequence>
              <xs:element name="AllEvaluations" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>If true, indicates that this sub-plan applies to all account evaluations. NOTE: when inserting a CondCmsnSubPlan this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="AllJurisdictions" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>If true, indicates that this sub-plan applies to all jurisdictions. NOTE: when inserting a CondCmsnSubPlan this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="AllLOBCodes" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>If true, indicates that this sub-plan applies to all LOBs. NOTE: when inserting a CondCmsnSubPlan this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="AllSegments" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>If true, indicates that this sub-plan applies to all segments. NOTE: when inserting a CondCmsnSubPlan this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="AllTerms" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>If true, indicates that this sub-plan applies to all terms. NOTE: when inserting a CondCmsnSubPlan this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="AllUWCompanies" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>If true, indicates that this sub-plan applies to all UW company types. NOTE: when inserting a CondCmsnSubPlan this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AssignedRisk" nillable="true" type="tns2:AssignedRiskRestriction">
                <xs:annotation>
                  <xs:documentation>The assigned risk restriction for this sub-plan. NOTE: when inserting a CondCmsnSubPlan this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="IncludedJurisdictions" nillable="true" type="tns1:ArrayOfCondCmsnSubPlanJurisdiction">
                <xs:annotation>
                  <xs:documentation>If AllJurisdictions is false, then an entry in this array includes the jurisdiction from this sub-plan's set of allowed jurisdictions.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="RenewalSet" nillable="true" type="soapenc:long">
                <xs:annotation>
                  <xs:documentation>The bitset of renewal numbers to which this conditional sub-plan applies. Bits [0, 62] correspond to            the respective renewal number. If bit 63 is set, it means that all subsequent renewals are included.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CommissionableChargeItem" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Represents an entry in the CommissionSubPlan's CommissionableChargeItems array.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ChargePattern" nillable="true" type="tns1:ChargePattern">
                <xs:annotation>
                  <xs:documentation>The name of the charge. NOTE: when inserting a CommissionableChargeItem this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CommissionSubPlan" nillable="true" type="tns1:CommissionSubPlan">
                <xs:annotation>
                  <xs:documentation>FK to container.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfCommissionableChargeItem" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:CommissionableChargeItem[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PremiumIncentive" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Describes an incentive which gives the producer code a bonus if the commissionable charges on the                  policy exceed a threshold.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:PolicyBasedIncentive">
            <xs:sequence>
              <xs:element name="BonusPercentage" nillable="true" type="soapenc:decimal">
                <xs:annotation>
                  <xs:documentation>Bonus percentage to be applied when the commissionable charge threshold is exceeded. NOTE: when inserting a PremiumIncentive this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Threshold" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>Commissionable charge threshold which must be exceeded in order for this incentive to apply. NOTE: when inserting a PremiumIncentive this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PolicyBasedIncentive" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Base class for policy-based commission incentives. These incentives are applied based on                  characteristics of the policy.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:Incentive">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Incentive" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Base class for commission incentives.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CommissionSubPlan" nillable="true" type="tns1:CommissionSubPlan"/>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>The currency used by this entity's silo. NOTE: when inserting a Incentive this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfIncentive" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:Incentive[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CommissionSubPlan" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Represents a sub-plan of a commission plan. A sub-plan consists of a set of restrictions and commission parameters. When calculating commission for a policy, the first sub-plan whose restrictions are satisfied by the policy in question is used to determine commission.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CommissionPlan" nillable="true" type="tns1:CommissionPlan">
                <xs:annotation>
                  <xs:documentation>FK to container.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CommissionableChargeItems" nillable="true" type="tns1:ArrayOfCommissionableChargeItem">
                <xs:annotation>
                  <xs:documentation>The charges for which commission may be calculated.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>The currency used by this entity's silo. NOTE: when inserting a CommissionSubPlan this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Incentives" nillable="true" type="tns1:ArrayOfIncentive">
                <xs:annotation>
                  <xs:documentation>Incentives for the sub-plan</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Name" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The name of the sub-plan NOTE: when inserting a CommissionSubPlan this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PayableCriteria" nillable="true" type="tns2:PayableCriteria">
                <xs:annotation>
                  <xs:documentation>The criteria used for determining when commission becomes payable. NOTE: when inserting a CommissionSubPlan this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="SubPlanOrder" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>The order of this sub-plan in the containing commission plan's sub-plans list. When determining which sub-plan to use, sub-plans will be scanned in ascending order by this value. NOTE: when inserting a CommissionSubPlan this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="SuspendForDelinquency" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Determines whether or not to suspend payability if the policy is delinquent NOTE: when inserting a CommissionSubPlan this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PolicyPeriodInfo" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Holds status information about a single Policy Period</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Account" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Owning account for this policy period. NOTE: value is the PublicId of the Account.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EffectiveDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date when this policy period takes effect.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ExpirationDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date when this policy period expires.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InfoDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date and time that this snapshot of the PolicyPeriod Info was taken.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="PolicyPeriod" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The policy period itself NOTE: when inserting a PolicyPeriodInfo this field must be non-null. NOTE: value is the PublicId of the PolicyPeriod.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ProducerInfo" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Holds status information about a Producer</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InfoDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date and time that this snapshot of the Producer Info was taken.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PrimaryAddress" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The Address of the Producer's Primary Contact NOTE: value is the PublicId of the Address.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Producer" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The Producer from which status information is collected NOTE: when inserting a ProducerInfo this field must be non-null. NOTE: value is the PublicId of the Producer.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TotalGrossPremium" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>Total Gross Premium</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TotalOutstanding" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>Total Outstanding</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TotalPastDue" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>Total Past Due</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="FieldFilter" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A FieldFilter represents a mapping from an entity name to an array of field names.  To see how it is used, see {@link
ObjectFilter}.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="EntityName" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>The name of the entity</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="FieldNames" nillable="true" type="impl:ArrayOf_soapenc_string">
            <xs:annotation>
              <xs:documentation>The field names to set</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ArrayOfFieldFilter" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:FieldFilter[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ObjectFilter" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>An ObjectFilter, given a graph of objects, will extract a subgraph of "interesting" objects.  It is designed to be
used in places such as webservices where returning a large graph of objects may lead to performance problems.
&lt;p/&gt;
At a lower level, an ObjectFilter represents a set of rules which are applied recursively to a object (which we will
call the "root object").  Each ObjectFilter consists of an array of {@link FieldFilter} objects, and each {@link FieldFilter} object
defines a one-to-many relation from an entity name to a list of field names. The graph described by a given
ObjectFilter and root object is calculated using the following algorithm:
&lt;p/&gt;
&lt;ol&gt; &lt;li&gt; Find the entity name for the current object.
&lt;p/&gt;
&lt;li&gt; Look through the ObjectFilter for a {@link FieldFilter} whose entity name correponds to the entity name of the current
object.
&lt;p/&gt;
&lt;li&gt; If there is no such {@link FieldFilter}, set every property of the current object to null. object.
&lt;p/&gt;
&lt;li&gt; Take the {@link FieldFilter} with the matching entity name (if there is more than one such {@link FieldFilter}, choose one of
them arbitrarily)
&lt;p/&gt;
&lt;li&gt; Fetch the list of field names from the {@link FieldFilter}
&lt;p/&gt;
&lt;li&gt; Set each field on the current object to null &lt;b&gt;unless&lt;/b&gt; the field's name appears in the {@link FieldFilter}'s list of
field names.
&lt;p/&gt;
&lt;li&gt; Recursively apply this procedure to each object which is a property of the current object. &lt;/ol&gt;
&lt;p/&gt;
Applying this procedure to the root object yields the directed graph.
@deprecated The ObjectFilter class is deprecated. Instead, rewrite integration code as custom web service APIs for
each integration point, defining most application logic within the web service. Before this release, external code
requested large objects and used ObjectFilter to define arbitrary fields to return so that the data transfer is not
too large. Instead, design your new custom web services to return only what is needed. You might want to create new
Gosu classes or non-persistent business entities for some integration points to encapsulate data passed to the
web service or returned from the web service.
</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="FieldFilters" nillable="true" type="tns1:ArrayOfFieldFilter">
            <xs:annotation>
              <xs:documentation>Returns an array containing the field filters for this ObjectFilter.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OrganizationZoneAdmin" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Join table between the organization and the zone, to see which zones an organization can admin over.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Country" nillable="true" type="tns2:Country">
                <xs:annotation>
                  <xs:documentation>The country to which the zone belongs. NOTE: when inserting a OrganizationZoneAdmin this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Organization" nillable="true" type="tns1:Organization">
                <xs:annotation>
                  <xs:documentation>Fk to the Organization</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="ZoneCode" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Code of the zone NOTE: when inserting a OrganizationZoneAdmin this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ZoneType" nillable="true" type="tns2:ZoneType">
                <xs:annotation>
                  <xs:documentation>Type of zone. NOTE: when inserting a OrganizationZoneAdmin this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfOrganizationZoneAdmin" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:OrganizationZoneAdmin[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Organization" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
        Represents a gathering of people brought together to form a business. Each organization contains a hierarchy of
        groups. Unlike a group, an organization has a related Contact.
      
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Carrier" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Flag indicating whether this organization corresponds to the carrier itself.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Contact" nillable="true" type="tns1:Contact">
                <xs:annotation>
                  <xs:documentation>Contact entry related to the organization.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="MasterAdmin" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Flag indicating whether this organization is the superuser organization with admin powers over all organizations.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Name" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The name of the organization. NOTE: when inserting a Organization this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="NameKanji" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The kanji name of the organization. Used only for Japanese and will be null otherwise.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="RootGroup" nillable="true" type="tns1:Group">
                <xs:annotation>
                  <xs:documentation>The organization's root group.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Type" nillable="true" type="tns2:BusinessType">
                <xs:annotation>
                  <xs:documentation>The type of the organization.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ZonesToAdmin" nillable="true" type="tns1:ArrayOfOrganizationZoneAdmin">
                <xs:annotation>
                  <xs:documentation>Link to joiner table for zones to admin.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Group" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
        Organizes system users. In addition to being a primary administrative object, group objects also provide a means
        for defining company hierarchy when viewed through the user interface.
      
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="GroupType" nillable="true" type="tns2:GroupType">
                <xs:annotation>
                  <xs:documentation>Type of group (describes its function). NOTE: when inserting a Group this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LoadFactor" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Percentage value of normal workload to be given to this group. This is used for round-robin assignment.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Name" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The group name; this must be unique. NOTE: when inserting a Group this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="NameKanji" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The group name in Kanji. Used only for Japanese and will be null otherwise.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Organization" nillable="true" type="tns1:Organization">
                <xs:annotation>
                  <xs:documentation>The Organization that this group belongs to.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Parent" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The group's parent group. NOTE: value is the PublicId of the Group.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="SecurityZone" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Security zone to which the group belongs. NOTE: value is the PublicId of the SecurityZone.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Supervisor" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Supervisor of the group. NOTE: value is the PublicId of the User.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="VisibilityZone" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Group that defines the visibility zone for this group. A visibility zone is defined by a direct child of the root group. The visibility zone of the root group will always be null. NOTE: value is the PublicId of the Group.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="WorldVisible" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>If true, this group is visible to all users, regardless of what groups they belong to.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AssignableQueue" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
        A queue of assignable entities. Entities can be assigned to a queue (rather than a user) and
        any entity assigned to a queue is said to be "in the queue". A queue belongs to a group
        and is typically used to organize items which can be handled by any user in its group.
        When a user has time to tackle a new item they look at the items in the queue and reassign
        the top item to themselves.
      
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Description" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The description of what this queue is for.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Group" nillable="true" type="tns1:Group">
                <xs:annotation>
                  <xs:documentation>The group to which the queue belongs.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Name" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The name of this queue.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="SubGroupVisible" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>If true the queue is visible from sub-groups of the group to which it belongs.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ContactFindMatchResult" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
      Deprecated since ClaimCenter 8.0 along with the IAddressBookAdapter.
      This is a non-persistent entity that represents the results of definitive match search.
      Besides the matched &lt;code&gt;Contact&lt;/code&gt; objects, it also contains a result type. See the &lt;code&gt;ContactMatchResultType&lt;/code&gt;
      typelist for  more detail about the result of the match.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Contact" nillable="true" type="tns1:Contact">
                <xs:annotation>
                  <xs:documentation>Gets the Contact that was matched, or null if none.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ResultType" nillable="true" type="tns2:ContactMatchResultType">
                <xs:annotation>
                  <xs:documentation>Provides more detail about the result of the match.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ContactRelationshipSpecRel" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
      Wraps around contact relationships. See the &lt;code&gt;ContactRel&lt;/code&gt; entity for a list of contact relationships.
      The &lt;code.ContactRelationshipSpecRel&lt;/code&gt; entity exists so that &lt;code&gt;ContactRelationshipSpec&lt;/code&gt; can use its
      objects as entries in its arrays.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Relationship" nillable="true" type="tns2:ContactRel">
                <xs:annotation>
                  <xs:documentation>Type of relationship. NOTE: when inserting a ContactRelationshipSpecRel this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Source" nillable="true" type="tns1:ContactRelationshipSpec">
                <xs:annotation>
                  <xs:documentation>Source relationship.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Target" nillable="true" type="tns1:ContactRelationshipSpec">
                <xs:annotation>
                  <xs:documentation>Target relationship.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfContactRelationshipSpecRel" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:ContactRelationshipSpecRel[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ContactRelationshipSpec" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
      Represents a specification of relationships to retrieve/sync from the Address Book. The set of relationships to
      retrieve from the Address Book is specified in contact-sync-config.xml. Each of the contactBidiRel that is specified
      in &amp;lt;IncludeRelationship&amp;gt; in the contact-sync-config.xml is called "Syncable Relationship". A ContactRelationshipSpec
      contains two sets of syncable relationships, "SourceRelationships" and "TargetRelationships" which is grouped according to
      the contactBidiRel. This entity has been deprecated as of ClaimCenter 8.0 along with the IAddressBookAdapter plugin.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SourceRelationships" nillable="true" type="tns1:ArrayOfContactRelationshipSpecRel">
                <xs:annotation>
                  <xs:documentation>Relationships that the contact is on the source side.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TargetRelationships" nillable="true" type="tns1:ArrayOfContactRelationshipSpecRel">
                <xs:annotation>
                  <xs:documentation>Relationships that the contact is on the target side.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ProximitySearchParameters" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>&lt;p&gt;
      Encapsulates the set of additional criteria needed to perform a proximity search. This entity is
      a child object to the &lt;code&gt;ContactSearchCriteria&lt;/code&gt; entity.
      &lt;/p&gt;&lt;p&gt;
      Note that there are two ways to specify the origin location for a proximity search: the Geocode fields on
      the &lt;code&gt;ProximitySearchParameters&lt;/code&gt; itself (SpatialPoint/GeocodeStatus) or the
      &lt;code&gt;ConstactSearchCriteria.ProximitySearchCenter&lt;/code&gt; field. If both are set prior to performing the search,
      the system will use Geocode fields and ignore the &lt;code&gt;ProximitySearchCenter&lt;/code&gt; field.&lt;/p&gt;
      &lt;p&gt;
      See &lt;code&gt;ContactSearchCriteria&lt;/code&gt; for more information
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CorrectedSearchCenter" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The corrected address (if any) corresponding to the SpatialPoint of that is being searched for, in localized/user-displayable form. This is normally set by the ProximitySearchPageHelper.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DistanceBasedSearch" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Indicates whether this is a distance based search (within n-mi/km) or an ordinal search (nearest-n)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="GeocodeStatus" nillable="true" type="tns2:GeocodeStatus">
                <xs:annotation>
                  <xs:documentation>Gives the status of the provided SpatialPoint; this is normally copied from the a Geocodable entity.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Number" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Indicates either the radius (in UnitOfDistance units) if a distance based search, or the number of results to return if an ordinal search.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="RadiusSearchMaxResults" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Indicates the maximum number of items to return on a radius search.  Ignored if DistanceBasedSearch is false; if DistanceBasedSearch is true, and this value is null, zero, or negative, the search will be limited by the value of ProximityRadiusSearchDefaultMaxResultCount</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SavedSearchCenter" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Used internally by ProximitySearchPageHelper to save the search center address (if any) in standardized form; DO NOT USE unless you are overriding the standard performProximitySearch() method.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SpatialPoint" nillable="true" type="tns1:SpatialPoint">
                <xs:annotation>
                  <xs:documentation>SpatialPoint to do a proximity search from; this is normally copied from the a Geocodable entity.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="UnitOfDistance" nillable="true" type="tns2:UnitOfDistance">
                <xs:annotation>
                  <xs:documentation>Indicates the UnitOfDistance to use, both to return distances in results and to indicate the unit of radius for distance-based searches.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ContactSearchCriteria" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Address" nillable="true" type="tns1:Address">
                <xs:annotation>
                  <xs:documentation>The address of the contact.  Supercedes the separate fields of City, State, and PostalCode.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ContactSubtype" nillable="true" type="tns2:Contact">
                <xs:annotation>
                  <xs:documentation>Contact class, like Person, Company, and Venue.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FirstName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>First Name</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FirstNameKanji" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>First name in kanji (used only for Japanese names)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Keyword" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Keyword is the general term for Name (Companies and Places) and LastName (for Persons)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="KeywordKanji" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>KeywordKanji is the general term for NameKanji (Companies and Places) and LastNameKanji (for Persons)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="MatchType" nillable="true" type="tns2:ContactMatchResultType">
                <xs:annotation>
                  <xs:documentation>Match type requirement</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OfficialId" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Field matched against the OfficialIDValue of the OfficialID objects associated with Contacts.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OrganizationName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Matched against Contacts belonging to an Organization (such as of person's employer) matching this name.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PreferredVendors" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Preferred Vendors</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ProximitySearchCenter" nillable="true" type="tns1:Address">
                <xs:annotation>
                  <xs:documentation>The center for a proximity search. Ignored if location fields are set on the Proximity Search Parameters.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ProximitySearchParameters" nillable="true" type="tns1:ProximitySearchParameters">
                <xs:annotation>
                  <xs:documentation>The parameters for a proximity search.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SearchType" nillable="true" type="tns2:ContactSearchType">
                <xs:annotation>
                  <xs:documentation>External search type (external search only)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TaxID" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Tax ID for the contact (SSN or EIN).</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="VendorType" nillable="true" type="tns2:VendorType">
                <xs:annotation>
                  <xs:documentation>The company's vendor type.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfContact" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:Contact[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ContactSearchResult" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
      ContactSearchResult has been deprecated since ClaimCenter 8.0 along with IAddressBookAdapter.
      &lt;p&gt;Represents the set of results and additional information returned by an Address Book search.
      See the &lt;code&gt;IAddressBookAdapter&lt;/code&gt; for information on searching for contacts.
      &lt;/p&gt;
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Contact" nillable="true" type="tns1:Contact">
                <xs:annotation>
                  <xs:documentation>Gets the Contact that was matched, or null if none.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ResultType" nillable="true" type="tns2:ContactMatchResultType">
                <xs:annotation>
                  <xs:documentation>Provides more detail about the result of the match.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Results" nillable="true" type="tns1:ArrayOfContact">
                <xs:annotation>
                  <xs:documentation>Gets the results. Length should not be greater than the maxResults setting
in the corresponding RemotableSearchResultSpec. If there is at least one
result, the first result should correspond to the startRow setting in the
corresponding RemotableSearchResultSpec. Order should depend on the sort
settings.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SearchResultType" nillable="true" type="tns2:ContactSearchResultType">
                <xs:annotation>
                  <xs:documentation>Indicates wheather the search succeeded of failed, and if failed, why.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TotalResults" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Gets the total number of results. This will only be populated if the corresponding ContactSearchResultSpec has includeTotal = true.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="GeneralValidation" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>General validation error or warning raised on an entity</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ValidationIssue">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ValidationIssue" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>&lt;p&gt;Supertype for validation errors and warnings.&lt;/p&gt;
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EntityValidation" nillable="true" type="tns1:EntityValidation"/>
              <xs:element maxOccurs="1" minOccurs="0" name="FlowStepId" nillable="true" type="soapenc:string"/>
              <xs:element maxOccurs="1" minOccurs="0" name="Level" nillable="true" type="tns2:ValidationLevel">
                <xs:annotation>
                  <xs:documentation>null NOTE: when inserting a ValidationIssue this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Reason" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>null NOTE: when inserting a ValidationIssue this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Type" nillable="true" type="tns2:ValidationIssueType"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="FieldValidation" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Field validation error or warning raised on an entity</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ValidationIssue">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BadValue" nillable="true" type="soapenc:string"/>
              <xs:element name="FieldName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>null NOTE: when inserting a FieldValidation this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfFieldValidation" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:FieldValidation[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfGeneralValidation" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:GeneralValidation[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="EntityValidation" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Validation on a specific entity</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="EntityId" nillable="true" type="soapenc:long">
                <xs:annotation>
                  <xs:documentation>ID of the entity NOTE: when inserting a EntityValidation this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="EntityType" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>What kind of entity NOTE: when inserting a EntityValidation this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FieldValidations" nillable="true" type="tns1:ArrayOfFieldValidation"/>
              <xs:element maxOccurs="1" minOccurs="0" name="GeneralValidations" nillable="true" type="tns1:ArrayOfGeneralValidation"/>
              <xs:element maxOccurs="1" minOccurs="0" name="OwningValidationResult" nillable="true" type="tns1:ValidationResult"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfEntityValidation" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:EntityValidation[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ValidationResult" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>&lt;p&gt;ValidationResult is used to read and write results of an object's validation (e.g. validation via rules, or field level validation).&lt;/p&gt;
      &lt;p&gt;ValidationResult stores both entity level errors (general errors not associated with a particular field) and field level errors (errors associated with a particular field on an entity).&lt;/p&gt;
      &lt;p&gt;A FieldValidation object can store the bad value which triggered the error (e.g. a mangled loss date that was imported with the claim) and may also suggests possible correct values,
      either as a list of objects or foreign keys (if the field is a foreign key, e.g. picking from a set of users with the last name "Shaw" if the imported ClaimDef only identifies "Shaw" as the owner).
      See FieldValidation to learn what information may be captured with an invalid field.&lt;/p&gt;
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EntityValidations" nillable="true" type="tns1:ArrayOfEntityValidation"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="TempToPermEntry" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
      After an addressbook client-application (for example, ClaimCenter) adds an entity (for example, &lt;code&gt;Contact&lt;/code&gt;
      or &lt;code&gt;Address&lt;/code&gt;) to the addressbook, it usually needs to link the local entity to the newly created entity
      in the addressbook by setting the &lt;code&gt;AddressBookUId&lt;/code&gt; in the local entity.
      After calling &lt;code&gt;AddressBookPluginGateway.submitUpdates(UpdateBatch,AddressBookConvertable)&lt;/code&gt;
      the client application can get the newly generated &lt;code&gt;AddressBookUId&lt;/code&gt; from the
      &lt;code&gt;ContactUpdateResult.getTempToPermEntrys()&lt;/code&gt;.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ContactUpdateResult" nillable="true" type="tns1:ContactUpdateResult">
                <xs:annotation>
                  <xs:documentation>The ContactUpdateResult which owns this entry.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PermId" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The permanent AddressBookUId given by the address book</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TempId" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The temporary id given by an UpdateBatch CreateUpdateOp</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfTempToPermEntry" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:TempToPermEntry[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ContactUpdateResult" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
      ContactUpdateResult has been deprecated as of ClaimCenter 8.0 along with IAddressBookAdapter..
      ContactUpdateResult represents the result of creating or updating a Contact. This operation can
      either succeed or fail. If it failed, then errors will be accessible via getValidationResult. If it succeeded,
      then there should be no errors in the ValidationResult, and the created or updated Contact will be accessible
      via getContact.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Contact" nillable="true" type="tns1:Contact">
                <xs:annotation>
                  <xs:documentation>Gets the Contact that was created or updated. Ignored if errors occurred.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ContactValidationResult" nillable="true" type="tns1:ValidationResult">
                <xs:annotation>
                  <xs:documentation>Used to report any errors that occurred during creation or update. May be null to report no errors.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TempToPermEntrys" nillable="true" type="tns1:ArrayOfTempToPermEntry">
                <xs:annotation>
                  <xs:documentation>The address book's mapping of the given temp ids to permanent ids</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfCreateUpdateOp" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:CreateUpdateOp[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfDeleteUpdateOp" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:DeleteUpdateOp[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="FieldChangeUpdateOp" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>This non-persistent entity has been deprecated since ClaimCenter 8.0 along with the IAddressBookAdapter.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:UpdateOp">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="EntityTypeName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Identifies the entity type.  e.g. Person, Company, or Adjudicator.  (Entity type on the application side not a ContactManager entity type)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Field" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Identifies the field for the application side.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ObjectUId" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Uniquely identifies target object of the operation.  Can be either an AddressBookUId or a temporary ObjectId that was defined in a CreateUpdateOp.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="UpdateBatch" nillable="true" type="tns1:UpdateBatch">
                <xs:annotation>
                  <xs:documentation>Associated UpdateBatch.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Value" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Identifies the value of the field on the app side.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfFieldChangeUpdateOp" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:FieldChangeUpdateOp[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ValidationWarning" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Describes a single validation warning sent to the address book</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="UpdateBatch" nillable="true" type="tns1:UpdateBatch">
                <xs:annotation>
                  <xs:documentation>Associated UpdateBatch.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Warning" nillable="true" type="soapenc:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfValidationWarning" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:ValidationWarning[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="UpdateBatch" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
      UpdateBatch has been deprecated since ClaimCenter 8.0 along with the IAddressBookAdapter.
  </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CreateUpdateOps" nillable="true" type="tns1:ArrayOfCreateUpdateOp">
                <xs:annotation>
                  <xs:documentation>List of objects to be created in the Address Book.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DeleteUpdateOps" nillable="true" type="tns1:ArrayOfDeleteUpdateOp">
                <xs:annotation>
                  <xs:documentation>List of entities to be deleted from the Address Book.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FieldChangeUpdateOps" nillable="true" type="tns1:ArrayOfFieldChangeUpdateOp">
                <xs:annotation>
                  <xs:documentation>List of changes to fields' values in different entities.  Notice that in this list every entry may apply to a different entity.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ValidationWarningsToIgnore" nillable="true" type="tns1:ArrayOfValidationWarning">
                <xs:annotation>
                  <xs:documentation>List of validation warnings to be ignored by Address Book</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="DeleteUpdateOp" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>This non-persistent entity has been deprecated since ClaimCenter 8.0 along with the IAddressBookAdapter.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:UpdateOp">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="EntityTypeName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Identifies the entity type.  e.g. Person, Company, or Adjudicator.  (Entity type on the application side not a ContactManager entity type)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ObjectUId" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>An AddressBookUId of an entity in Address Book that is to be deleted.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="UpdateBatch" nillable="true" type="tns1:UpdateBatch">
                <xs:annotation>
                  <xs:documentation>Associated UpdateBatch.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="UpdateOp" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
        This non-persistent entity has been deprecated since ClaimCenter 8.0 along with the IAddressBookAdapter.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CreateUpdateOp" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>This non-persistent entity has been deprecated since ClaimCenter 8.0 along with the IAddressBookAdapter.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:UpdateOp">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="EntityTypeName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Identifies the entity type.  e.g. Person, Company, or Adjudicator.  (Entity type on the application side not a ContactManager entity type)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ObjectUId" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Temporary ID for the newly created object.  Needs to be unique within this UpdateBatch.  Can be referenced from the FieldUpdateOps.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="UpdateBatch" nillable="true" type="tns1:UpdateBatch">
                <xs:annotation>
                  <xs:documentation>Associated UpdateBatch.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="DataChange" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>The change to production data.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="CreateDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date the gosu was added.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CreateUser" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The user who created the gosu. NOTE: value is the PublicId of the User.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Description" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Description of the change requested.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ExecuteDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The time the gosu was executed.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ExecuteUser" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The user who executed the gosu. NOTE: value is the PublicId of the User.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ExternalReference" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>An external reference for tracking change requests.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Gosu" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The gosu to execute.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Result" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The result of executing the gosu.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Status" nillable="true" type="tns2:DataChangeStatus"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfDataGenInfoDetail" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:DataGenInfoDetail[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="DataGenInfo" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Stores metadata for database generation info.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Action" nillable="true" type="tns2:DataGenActionType">
                <xs:annotation>
                  <xs:documentation>the action type this data-gen performed</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BuildVersion" nillable="true" type="soapenc:string"/>
              <xs:element maxOccurs="1" minOccurs="0" name="Description" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Info logged by the generation process.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Details" nillable="true" type="tns1:ArrayOfDataGenInfoDetail">
                <xs:annotation>
                  <xs:documentation>Detailed description.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="PerformDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Time this generation happened. NOTE: when inserting a DataGenInfo this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Status" nillable="true" type="tns2:DataGenStatusType"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="DataGenInfoDetail" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Details for data gen.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="DataGenInfo" nillable="true" type="tns1:DataGenInfo">
                <xs:annotation>
                  <xs:documentation>Parent.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Description" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Line for detailed description.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="DisplayOrder" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>display order within parent NOTE: when inserting a DataGenInfoDetail this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="NumIndents" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation># of tabs for readability NOTE: when inserting a DataGenInfoDetail this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="DateCriteria" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
        A component used as part of a larger search criteria entity. Encapsulates the information
        entered by the user to restrict the search to a particular date range. Specifies the date
        field to be restricted and allows the date range to be restricted either through a typelist of
        preset ranges (such as next 30 days) or through a start and end date.
        &lt;p&gt;
        Very similar to DateCriterionChoice, but DateCriterionChoice supports configurable search.
        (See the Configuration Guide for details of customizing search screens.)
      
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DateFieldToSearch" nillable="true" type="tns2:DateFieldsToSearchType">
                <xs:annotation>
                  <xs:documentation>The date field which is being restricted. The available choices are filtered by the SearchType field.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DateRangeChoice" nillable="true" type="tns2:DateRangeChoiceType">
                <xs:annotation>
                  <xs:documentation>The chosen preset date range, if any. The available ranges are filtered by the SearchType field. Used if DateSearchType is "fromlist".</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DateSearchType" nillable="true" type="tns2:DateSearchType">
                <xs:annotation>
                  <xs:documentation>The type of date search, either "fromlist" (for a preset range) or "enteredrange" (for an explicitly entered range).</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EndDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The end (inclusive) of the date range to which the chosen date field should be restricted.  Used if DateSearchType is "enteredrange".</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SearchType" nillable="true" type="tns2:SearchObjectType">
                <xs:annotation>
                  <xs:documentation>The type of search, filters the date fields allowed in the DateFieldToSearch field and the preset ranges allowed in the DateRangeChoice field.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="StartDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The start (inclusive) of the date range to which the chosen date field should be restricted. Used if DateSearchType is "enteredrange".</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="DateCriterionChoice" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
        A component used as part of a larger search criteria entity. Encapsulates the information
        entered by the user to restrict the search to a particular date range. Specifies the date
        field to be restricted and allows the date range to be restricted either through a typelist of
        preset ranges (such as next 30 days) or through a start and end date.
        &lt;p&gt;
        Very similar to DateCriteria, but DateCriterionChoice supports configurable search.
        (See the Configuration Guide for details of customizing search screens.)
      
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ChosenOption" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The chosen configurable search option, specifies the date field to be restricted.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DateRangeChoice" nillable="true" type="tns2:DateRangeChoiceType">
                <xs:annotation>
                  <xs:documentation>The chosen preset date range, if any. The available ranges are filtered by the SearchType field. Used if DateSearchType is "fromlist". NOTE: when inserting a DateCriterionChoice this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DateSearchType" nillable="true" type="tns2:DateSearchType">
                <xs:annotation>
                  <xs:documentation>The type of date search, either "fromlist" (for a preset range) or "enteredrange" (for an explicitly entered range). NOTE: when inserting a DateCriterionChoice this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EndDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The end (inclusive) of the date range to which the chosen date field should be restricted.  Used if DateSearchType is "enteredrange".</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SearchType" nillable="true" type="tns2:SearchObjectType">
                <xs:annotation>
                  <xs:documentation>The type of search, filters the preset ranges allowed in the DateRangeChoice field. NOTE: when inserting a DateCriterionChoice this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="StartDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The start (inclusive) of the date range to which the chosen date field should be restricted. Used if DateSearchType is "enteredrange".</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="SearchResult" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
        Base class use for the results of plugin search methods. The result encapsulates a Boolean value
        indicating if results were capped, and optionally the total number of matches that would have
        been returned had the results not been capped. The total number of matches is relevant only when
        the capped Boolean value is true.
        &lt;p&gt;
        This base class is of little interest on its own but provides basic functionality that may be
        useful for application specific subclasses.
      
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="ResultsCapped" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Returns true if and only if the results of the search have been capped, that is, if fewer results are contained in this result than actually satisfied the search criteria.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="UncappedResultCount" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Returns the total number of matches that would have been returned had the results not been capped, or null if the value is unknown. The result of this method is relevant only if ResultsCapped returns true.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ExtContactSrchResult" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>&lt;p&gt;
      Results of an external contact search ( &lt;code&gt;IContactSearchAdapter.searchContacts()&lt;/code&gt;) containing a set of
      contact summary objects. Not all resulting contacts may be returned.  If the matching results exceeds the maximum
      number of result rows, then only the system returns only the first &lt;i&gt;n&lt;/i&gt; contact summary objects.
      See &lt;code&gt;IContactSearchAdapter&lt;/code&gt; for details about external searches.&lt;/p&gt;
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:SearchResult">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Results" nillable="true" type="tns1:ArrayOfContact">
                <xs:annotation>
                  <xs:documentation>Set of contact summaries returned from the search. If no results match the search criteria,
then this is empty (not null).</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="LoadCallbackResult" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Timed loader callback results.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AffectedRowCount" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Number of rows affected.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EndTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Timestamp when the timing completed.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="ExecutionOrder" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Order of execution (1-N). NOTE: when inserting a LoadCallbackResult this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LoadCallback" nillable="true" type="tns1:LoadCallback">
                <xs:annotation>
                  <xs:documentation>Parent.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Name" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Name of loader callback result. NOTE: when inserting a LoadCallbackResult this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SQLText" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>SQL text.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="StartTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Timestamp when the timing began.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfLoadCallbackResult" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:LoadCallbackResult[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfLoadCallback" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:LoadCallback[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="LoadEncryptChunk" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Timings for each chuck of encyrption updates</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element name="ChunkSize" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Number of statements executed in this chunk NOTE: when inserting a LoadEncryptChunk this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EndTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Timestamp when the timing completed.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LoadEncryptTable" nillable="true" type="tns1:LoadEncryptTable">
                <xs:annotation>
                  <xs:documentation>Parent load encyrption step</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="StartTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Timestamp when the timing began.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfLoadEncryptChunk" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:LoadEncryptChunk[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="LoadEncryptTable" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Encrypt columns in a staging table</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AffectedRowCount" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Total rows read and updated</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ColumnsToEncrypt" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Column(s) being encrypted (comma separated)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EndTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Timestamp when the timing completed.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LoadCommand" nillable="true" type="tns1:LoadCommand">
                <xs:annotation>
                  <xs:documentation>Parent load command</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LoadEncryptChunks" nillable="true" type="tns1:ArrayOfLoadEncryptChunk"/>
              <xs:element name="SelectStmt" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Select statement used to read rows NOTE: when inserting a LoadEncryptTable this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="SizeOfTimedChuck" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Target number of update executions in each chunk NOTE: when inserting a LoadEncryptTable this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="StartTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Timestamp when the timing began.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="TableName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Name of table being updated NOTE: when inserting a LoadEncryptTable this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="UpdateStmt" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Update statement used to update rows NOTE: when inserting a LoadEncryptTable this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfLoadEncryptTable" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:LoadEncryptTable[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="LoadIntegrityCheck" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Timed loader integrity checks.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element name="Description" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Description of integrity check. NOTE: when inserting a LoadIntegrityCheck this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EndTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Timestamp when the timing completed.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="ExecutionOrder" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Order of execution (1-N). NOTE: when inserting a LoadIntegrityCheck this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LoadCommand" nillable="true" type="tns1:LoadCommand">
                <xs:annotation>
                  <xs:documentation>Denorm FK for unique index.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LoadIntegrityCheckType" nillable="true" type="tns2:LoadErrorType">
                <xs:annotation>
                  <xs:documentation>Type of loader integrity check. NOTE: when inserting a LoadIntegrityCheck this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LoadOperation" nillable="true" type="tns1:LoadOperation">
                <xs:annotation>
                  <xs:documentation>Parent.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Query" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Query from integrity check.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="StartTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Timestamp when the timing began.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfLoadIntegrityCheck" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:LoadIntegrityCheck[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="LoadUpdateStatisticsSelect" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Timed loader update statistics selects.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="EndTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Timestamp when the timing completed.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="ExecutionOrder" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Order of execution (1-N). NOTE: when inserting a LoadUpdateStatisticsSelect this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LoadCommand" nillable="true" type="tns1:LoadCommand">
                <xs:annotation>
                  <xs:documentation>Denorm FK for unique index. NOTE: when inserting a LoadUpdateStatisticsSelect this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LoadOperation" nillable="true" type="tns1:LoadOperation">
                <xs:annotation>
                  <xs:documentation>Parent.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Query" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>insert/select.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="StartTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Timestamp when the timing began.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="TableName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Affected staging table. NOTE: when inserting a LoadUpdateStatisticsSelect this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfLoadUpdateStatisticsSelect" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:LoadUpdateStatisticsSelect[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="LoadOperation" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Detail of the staging table load history.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AffectedRowCount" nillable="true" type="soapenc:long">
                <xs:annotation>
                  <xs:documentation>Number of rows affected.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Callbacks" nillable="true" type="tns1:ArrayOfLoadCallback">
                <xs:annotation>
                  <xs:documentation>Timed loader callbacks.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EndTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Timestamp when the timing completed.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ErrorCount" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Number of integrity check errors detected (if applicable).</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="ExecutionOrder" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Order of execution (1-N). NOTE: when inserting a LoadOperation this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="HighestID" nillable="true" type="soapenc:long">
                <xs:annotation>
                  <xs:documentation>If associated with a idsgenerated step, contains the end of the id range for the rows being loaded.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InsertSelects" nillable="true" type="tns1:ArrayOfLoadInsertSelect">
                <xs:annotation>
                  <xs:documentation>Timed loader insert/selects.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="IntegrityChecks" nillable="true" type="tns1:ArrayOfLoadIntegrityCheck">
                <xs:annotation>
                  <xs:documentation>Timed loader integrity checks.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LowestID" nillable="true" type="soapenc:long">
                <xs:annotation>
                  <xs:documentation>If associated with a idsgenerated step, contains the start of the id range for the rows being loaded.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="StartTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Timestamp when the timing began.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="TableName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Affected staging table. NOTE: when inserting a LoadOperation this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="UpdateStatisticsSelects" nillable="true" type="tns1:ArrayOfLoadUpdateStatisticsSelect">
                <xs:annotation>
                  <xs:documentation>db update statistics loader selects.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="LoadInsertSelect" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Timed loader insert/selects.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AffectedRowCount" nillable="true" type="soapenc:long">
                <xs:annotation>
                  <xs:documentation>Number of rows affected.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EndTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Timestamp when the timing completed.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="ExecutionOrder" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Order of execution (1-N). NOTE: when inserting a LoadInsertSelect this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FKEnablingDuration" nillable="true" type="soapenc:long">
                <xs:annotation>
                  <xs:documentation>Duration of Re-enabling FK.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LoadCommand" nillable="true" type="tns1:LoadCommand">
                <xs:annotation>
                  <xs:documentation>Denorm FK for unique index.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LoadOperation" nillable="true" type="tns1:LoadOperation">
                <xs:annotation>
                  <xs:documentation>Parent.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Query" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>insert/select.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="StartTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Timestamp when the timing began.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfLoadInsertSelect" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:LoadInsertSelect[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="LoadParameter" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>(parameter, value) pairs for load commands.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element name="ParameterName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Parameter name. NOTE: when inserting a LoadParameter this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ParameterValue" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Parameter value.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfLoadParameter" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:LoadParameter[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="LoadRowCount" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Row counts for load history.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="LoadCommand" nillable="true" type="tns1:LoadCommand">
                <xs:annotation>
                  <xs:documentation>Parent.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SourceBlockCount" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Number of blocks in source table.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SourceRowCount" nillable="true" type="soapenc:long">
                <xs:annotation>
                  <xs:documentation>Number of rows in source table.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="SourceTableName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Name of source table. NOTE: when inserting a LoadRowCount this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="StagingBlockCount" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Number of blocks in staging table.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="StagingRowCount" nillable="true" type="soapenc:long">
                <xs:annotation>
                  <xs:documentation>Number of rows in staging table.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="StagingTableName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Name of staging table. NOTE: when inserting a LoadRowCount this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfLoadRowCount" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:LoadRowCount[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfLoadOperation" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:LoadOperation[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="LoadStep" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Steps within a load command.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="EndTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Timestamp when the timing completed.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="ExecutionOrder" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Order of execution (1-N). NOTE: when inserting a LoadStep this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LoadCommand" nillable="true" type="tns1:LoadCommand">
                <xs:annotation>
                  <xs:documentation>Parent.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Operations" nillable="true" type="tns1:ArrayOfLoadOperation">
                <xs:annotation>
                  <xs:documentation>Detailed operations.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="StartTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Timestamp when the timing began.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="StepType" nillable="true" type="tns2:LoadStepType">
                <xs:annotation>
                  <xs:documentation>Type of load step. NOTE: when inserting a LoadStep this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfLoadStep" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:LoadStep[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="UpdateDBStatisticsCommand" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>DB statistics commands to run after a staging table load.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="LoadCommand" nillable="true" type="tns1:LoadCommand">
                <xs:annotation>
                  <xs:documentation>Parent.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="StatsCommand" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Update database statistics command to run. NOTE: when inserting a UpdateDBStatisticsCommand this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="TableName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Affected table. NOTE: when inserting a UpdateDBStatisticsCommand this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfUpdateDBStatisticsCommand" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:UpdateDBStatisticsCommand[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="LoadCommand" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Staging table load history.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Callbacks" nillable="true" type="tns1:ArrayOfLoadCallback">
                <xs:annotation>
                  <xs:documentation>Timed loader callbacks.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CallingUser" nillable="true" type="tns1:User">
                <xs:annotation>
                  <xs:documentation>ID of the user who executed the operation. NOTE: when inserting a LoadCommand this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CommandType" nillable="true" type="tns2:LoadCommandType">
                <xs:annotation>
                  <xs:documentation>Type of load command. NOTE: when inserting a LoadCommand this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Description" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Description of the load history event.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EncryptTables" nillable="true" type="tns1:ArrayOfLoadEncryptTable">
                <xs:annotation>
                  <xs:documentation>Timed loader table columns encryptions.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EndTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Timestamp when the timing completed.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ErrorCount" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Total number of integrity check errors detected for all affected tables (if applicable).</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InsertSelects" nillable="true" type="tns1:ArrayOfLoadInsertSelect">
                <xs:annotation>
                  <xs:documentation>Timed loader insert/selects.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="IntegrityChecks" nillable="true" type="tns1:ArrayOfLoadIntegrityCheck">
                <xs:annotation>
                  <xs:documentation>Timed loader integrity checks.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ParameterNameValuePairs" nillable="true" type="tns1:ArrayOfLoadParameter">
                <xs:annotation>
                  <xs:documentation>Parameter values for command.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="RowCounts" nillable="true" type="tns1:ArrayOfLoadRowCount">
                <xs:annotation>
                  <xs:documentation>Row counts.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="StartTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Timestamp when the timing began.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Steps" nillable="true" type="tns1:ArrayOfLoadStep">
                <xs:annotation>
                  <xs:documentation>Steps.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="UpdateDBStatisticsCommands" nillable="true" type="tns1:ArrayOfUpdateDBStatisticsCommand">
                <xs:annotation>
                  <xs:documentation>UpdateDBStatisticsCommands.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="LoadCallback" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Timed loader callbacks.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="CallbackResults" nillable="true" type="tns1:ArrayOfLoadCallbackResult">
                <xs:annotation>
                  <xs:documentation>Timed loader callback results.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Description" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Description of loader callback. NOTE: when inserting a LoadCallback this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EndTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Timestamp when the timing completed.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="ExecutionOrder" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Order of execution (1-N). NOTE: when inserting a LoadCallback this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ExecutionTime" nillable="true" type="tns2:LoaderCallbackTimeType">
                <xs:annotation>
                  <xs:documentation>Execution time of LoaderCallback. NOTE: when inserting a LoadCallback this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LoadCommand" nillable="true" type="tns1:LoadCommand">
                <xs:annotation>
                  <xs:documentation>Parent.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LoadOperation" nillable="true" type="tns1:LoadOperation">
                <xs:annotation>
                  <xs:documentation>Parent.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Name" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Name of loader callback. NOTE: when inserting a LoadCallback this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="StartTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Timestamp when the timing began.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="NameCriteria" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
        A component used as part of a larger search criteria entity. Encapsulates the information
        entered by the user to restrict the search to particular contact, specified by some combination
        of name, tax ID and official ID. One NameCriteria entity will be used for each field that needs to
        be restricted. For example if a search criteria was being constructed to specify searches for
        an entity which had two different contact fields, then the search criteria would likely
        contain two distinct NameCriteria components.
      
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CompanyName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The company name, if searching for a company.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CompanyNameKanji" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The company name, if searching for a company, in kanji.  Used only for Japanese names and will be null otherwise.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FirstName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The first name, if searching for a person.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FirstNameKanji" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The first name, if searching for a person, in kanji.  Used only for Japanese names and will be null otherwise.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LastName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The last name, if searching for a person.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LastNameKanji" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The last name, if searching for a person, in kanji.  Used only for Japanese names and will be null otherwise.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Name" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The last name or the first name.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="NameKanji" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The last name or the first name in kanji.  Used only for Japanese names and will be null otherwise.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OfficialId" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Field matched against the OfficialIDValue of the OfficialID objects associated with Contacts.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TaxId" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The contact's tax identification number.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfGWObject" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:GWObject[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="FindIdsResult" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Deprecated interface. This class was used by the &lt;code&gt;IDataObjectAPI&lt;/code&gt; to return
object Ids.
@deprecated Part of IDataObjectAPI
</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="Ids" nillable="true" type="impl:ArrayOf_soapenc_string">
            <xs:annotation>
              <xs:documentation>A string array containing object Ids.
@deprecated
</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="NumResults" type="xsd:int">
            <xs:annotation>
              <xs:documentation>null
@deprecated
</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="InsertPathValue" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>&lt;p&gt;
Represents the location and type of an entity to insert. Used in conjunction with
&lt;code&gt;IDataObjectAPI.setPathValues(String,String,InsertPathValue[],PathValue[],String[])&lt;/code&gt;.&lt;/p&gt;
@deprecated Part of IDataObjectAPI
</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="EntityName" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>Type of entity to insert at the location. If the type is null then it is
inferred from the location. For example, if the location is an array, then
the entity created will be of the array's element type. However, if the
location refers to an abstract type, then this value must be specified.
@deprecated
</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Path" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>Path from root entity to location where to insert this new entity. The leaf
of the path must null or refer to an array or a foreign key link. If the
path is null then a new "rootless" entity will be inserted.
@deprecated
</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="RefId" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>RefId of this newly inserted entity. The RefId is defined by the caller and
is used to set properties on the newly inserted entity.
@deprecated
</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ArrayOfInsertPathValue" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:InsertPathValue[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PathValue" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Represents the path and value to update.
&lt;p/&gt;
Used in conjunction with &lt;code&gt;IDataObjectAPI.setPathValues(String, String, InsertPathValue[], PathValue[], String[])&lt;/code&gt;.
@deprecated Part of IDataObjectAPI
</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="Path" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>Path from the root entity to the property to update.
@deprecated
</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Value" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>Path from the root entity to the property to update.
@deprecated
</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ArrayOfPathValue" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:PathValue[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="SetPathValuesIDRef" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
@deprecated Part of IDataObjectAPI
</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="PublicID" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>null
@deprecated
</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="RefID" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>null
@deprecated
</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ArrayOfSetPathValuesIDRef" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:SetPathValuesIDRef[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="SetPathValuesResult" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
@deprecated Part of IDataObjectAPI
</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element maxOccurs="1" minOccurs="0" name="NewObjects" nillable="true" type="tns1:ArrayOfSetPathValuesIDRef">
            <xs:annotation>
              <xs:documentation>null
@deprecated
</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ImportResultDetail" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Class that contains detailed information for an entity that was imported.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="EntityName" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>The type of entity.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="ExternalID" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>The external ID of the entity.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="ExternalSource" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>The external source for the entity.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="InternalID" type="xsd:long">
            <xs:annotation>
              <xs:documentation>The internal ID of the entity.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Type" type="xsd:int">
            <xs:annotation>
              <xs:documentation>Either &lt;code&gt;ImportResults.INSERTED&lt;/code&gt; or &lt;code&gt;ImportResults.UPDATED&lt;/code&gt;,
depending on whether the entity was inserted or updated.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ArrayOfImportResultDetail" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:ImportResultDetail[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ImportResultSummary" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Class that contains a summary information for the insertion or update of a
particular kind of entity.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="Count" type="xsd:int">
            <xs:annotation>
              <xs:documentation>The number of entities affected.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="EntityName" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>The name of the entity in question.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Type" type="xsd:int">
            <xs:annotation>
              <xs:documentation>Either &lt;code&gt;ImportResults.INSERTED&lt;/code&gt; or &lt;code&gt;ImportResults.UPDATED&lt;/code&gt;,
depending on whether this summary is for updated or inserted entities.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ArrayOfImportResultSummary" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:ImportResultSummary[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ImportResults" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Class that contains information about the results of an import call.  This data structure
contains data on which entities were inserted and/or updated, along with any errors
that might have occurred during the import.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="Details" nillable="true" type="tns2:ArrayOfImportResultDetail">
            <xs:annotation>
              <xs:documentation>The details of every item that was imported.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="ErrorLog" nillable="true" type="impl:ArrayOf_soapenc_string">
            <xs:annotation>
              <xs:documentation>Contains any error messages that occurred during import.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Ok" type="xsd:boolean">
            <xs:annotation>
              <xs:documentation>&lt;code&gt;true&lt;/code&gt; if the import succeeded, &lt;code&gt;false&lt;/code&gt; if it failed (in which case the
&lt;code&gt;errorLog&lt;/code&gt; field should indicate what the problem is.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="ParseTime" type="xsd:long">
            <xs:annotation>
              <xs:documentation>The amount of time spent parsing the XML.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Summaries" nillable="true" type="tns2:ArrayOfImportResultSummary">
            <xs:annotation>
              <xs:documentation>A summary of items that were imported, by type.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="WriteTime" type="xsd:long">
            <xs:annotation>
              <xs:documentation>The amount of time taken to write to the database.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ProcessID" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A simple class that contains the pid of a previously started batch process.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="Pid" type="xsd:long">
            <xs:annotation>
              <xs:documentation>The process id of the batch process</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ProcessStatus" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Contains information about the status of a previously started batch process.  This could contain status
information for a process that is currently running or for a process that ran was run in the past.
If the process is not currently running, the opsCompleted and failedOps fields won't have any useful information.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="DateCompleted" nillable="true" type="xsd:dateTime">
            <xs:annotation>
              <xs:documentation>The date that the process completed</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="DetailedStatus" nillable="true" type="soapenc:string"/>
          <xs:element name="FailedOps" nillable="true" type="soapenc:int">
            <xs:annotation>
              <xs:documentation>The number of operations that failed</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="FailureReason" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>If the process didn't succeed, the reason that the process failed</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="OpsCompleted" nillable="true" type="soapenc:int">
            <xs:annotation>
              <xs:documentation>The number of operations completed by the process</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="OpsExpected" nillable="true" type="soapenc:int">
            <xs:annotation>
              <xs:documentation>The number of operations expected to be completed by the process</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Progress" nillable="true" type="soapenc:string"/>
          <xs:element name="Running" type="xsd:boolean">
            <xs:annotation>
              <xs:documentation>Whether or not the process is currently running</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="StartDate" nillable="true" type="xsd:dateTime">
            <xs:annotation>
              <xs:documentation>The date that the process started running</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Success" nillable="true" type="soapenc:boolean">
            <xs:annotation>
              <xs:documentation>Whether or not the process finished successfully, or null if the process has not finished its work.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Type" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>The type of process</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WQTaskDetails" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Details for a particular Worker Task.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="Active" type="xsd:boolean">
            <xs:annotation>
              <xs:documentation>Active state of the worker.  More precisely, true if the given worker has not been stopped.
This includes workers that are both active and suspended.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="ConsecutiveExceptions" type="xsd:int">
            <xs:annotation>
              <xs:documentation>Number of consecutive exceptions</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="EndTime" nillable="true" type="xsd:dateTime">
            <xs:annotation>
              <xs:documentation>The time at which the given worker was stopped or null if the worker has not been stopped yet.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Exceptions" type="xsd:int">
            <xs:annotation>
              <xs:documentation>Number of exceptions caught during work items processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Hostname" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>The host name.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="InstanceId" nillable="true" type="soapenc:int">
            <xs:annotation>
              <xs:documentation>The Instance ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="ItemsCheckedOut" type="xsd:int">
            <xs:annotation>
              <xs:documentation>Number of checked out work items</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="ItemsFailed" type="xsd:int">
            <xs:annotation>
              <xs:documentation>Number of failed work items</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="ItemsProcessed" type="xsd:int">
            <xs:annotation>
              <xs:documentation>Number of processed work items</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="ItemsSkipped" type="xsd:int">
            <xs:annotation>
              <xs:documentation>Number of skipped work items</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="OrphansAdopted" type="xsd:int">
            <xs:annotation>
              <xs:documentation>Number of orphans adopted by this task</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="StartTime" nillable="true" type="xsd:dateTime">
            <xs:annotation>
              <xs:documentation>The worker start time.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ArrayOfWQTaskDetails" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:WQTaskDetails[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="WQueueExecutorDetails" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Details for a particular WorkQueueExecutor of a particular WorkQueue for a particular host.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="Active" type="xsd:boolean">
            <xs:annotation>
              <xs:documentation>Active state of the worker.  More precisely, true if the given worker has not been stopped.
This includes workers that are both active and suspended.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="EndTime" nillable="true" type="xsd:dateTime">
            <xs:annotation>
              <xs:documentation>The time at which the given worker was stopped or null if the worker has not been stopped yet.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Hostname" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>The host name.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="MaxNumOfWorkers" type="xsd:int">
            <xs:annotation>
              <xs:documentation>Maximum number of allowed workers for the given executor.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="StartTime" nillable="true" type="xsd:dateTime">
            <xs:annotation>
              <xs:documentation>The worker start time.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Tasks" nillable="true" type="tns1:ArrayOfWQTaskDetails">
            <xs:annotation>
              <xs:documentation>An array of {@link WQTaskDetails} for Workers of the given executor.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ArrayOfWQueueExecutorDetails" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:WQueueExecutorDetails[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="WQueueStatus" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Detailed information about Worker Queue.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="Executors" nillable="true" type="tns1:ArrayOfWQueueExecutorDetails">
            <xs:annotation>
              <xs:documentation>An array of {@link gw.api.webservice.maintenanceTools.WQueueExecutorDetails} for Executors of the given queue.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="NumActiveExecutors" type="xsd:int">
            <xs:annotation>
              <xs:documentation>The number of active executors.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="NumActiveWorkItems" type="xsd:int">
            <xs:annotation>
              <xs:documentation>The number of active work items.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="QueueName" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>The queue name</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WorkQueueConfig" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Carries information about the distributed worker processes
for a distributed workqueue.  Used to query and set the
worker configuration on a server.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="BatchSize" type="xsd:int">
            <xs:annotation>
              <xs:documentation>Get the max number of workitems to be checked out when a
worker wakes up.  (Default = 10)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Instances" type="xsd:int">
            <xs:annotation>
              <xs:documentation>Get the number of worker instances configured to run on this server</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="MaxPollInterval" type="xsd:long">
            <xs:annotation>
              <xs:documentation>Get the maximum time in milliseconds that a worker will wait
between queries for new workitems.  When a worker exhausts
the supply of workitems, it will suspend itself and wait for
notifications.  If no notification is received, it will wake
up and check for new workitems every maxPollInterval millis.
This acts as a safety mechanism in case notifications are lost
in a clustered environment, and guarantees a maximum latency
for workitem processing.  This parameter should increase with
the number of workers configured, to keep the load on the database
from growing excessively.
(Default = 60000)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="ThrottleInterval" type="xsd:long">
            <xs:annotation>
              <xs:documentation>Get the current sleep time between workitems</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CustomEvents" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:sequence>
          <xs:element name="Events" nillable="true" type="impl:ArrayOf_soapenc_string"/>
          <xs:element name="ObjectKey" nillable="true" type="soapenc:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ArrayOfCustomEvents" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:CustomEvents[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="FieldChangeValue" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:sequence>
          <xs:element name="Name" nillable="true" type="soapenc:string"/>
          <xs:element name="Value" nillable="true" type="soapenc:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ArrayOfFieldChangeValue" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:FieldChangeValue[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="FieldChanges" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:sequence>
          <xs:element name="FieldValues" nillable="true" type="tns1:ArrayOfFieldChangeValue"/>
          <xs:element name="ObjectKey" nillable="true" type="soapenc:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ArrayOfFieldChanges" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:FieldChanges[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Acknowledgement" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:sequence>
          <xs:element name="AckCode" nillable="true" type="soapenc:string"/>
          <xs:element name="CustomEvents" nillable="true" type="tns1:ArrayOfCustomEvents"/>
          <xs:element name="Duplicate" type="xsd:boolean"/>
          <xs:element name="Error" type="xsd:boolean"/>
          <xs:element name="ErrorDescription" nillable="true" type="soapenc:string"/>
          <xs:element name="FieldChanges" nillable="true" type="tns1:ArrayOfFieldChanges"/>
          <xs:element name="MessageID" type="xsd:long"/>
          <xs:element name="Retryable" type="xsd:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="MessageOptionalFields" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:sequence>
          <xs:element name="MessageCode" nillable="true" type="soapenc:string"/>
          <xs:element name="OptionalInt" nillable="true" type="soapenc:int"/>
          <xs:element name="OptionalMoney" nillable="true" type="soapenc:decimal"/>
          <xs:element name="OptionalString" nillable="true" type="soapenc:string"/>
          <xs:element name="SenderRefID" nillable="true" type="soapenc:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="MessageStatisticsData" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Holds the statistics for messages for a given safe ordered object.
The statistics include:
&lt;ul&gt;
&lt;li&gt;# of failed messages&lt;/li&gt;
&lt;li&gt;# of failed messages that can be retried&lt;/li&gt;
&lt;li&gt;# of inflight messages&lt;/li&gt;
&lt;li&gt;# of unsent messages&lt;/li&gt;
&lt;/ul&gt;</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="Failed" type="xsd:int">
            <xs:annotation>
              <xs:documentation>Returns the number of messages that failed.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Inflight" type="xsd:int">
            <xs:annotation>
              <xs:documentation>Returns the number of messages that are in flight.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Retry" type="xsd:int">
            <xs:annotation>
              <xs:documentation>Returns the number of failed messages that can be retried.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Unsent" type="xsd:int">
            <xs:annotation>
              <xs:documentation>Returns the number of messages that are not sent yet.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="NewAgencyMoneyDetails" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Non-persistent entity for use with the New Agency Payment Wizard.  Holds information about the amount,                            payment method, check number, and other details associated with money being applied towards a producer/statement.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AgencyCyclePaymentToModify" nillable="true" type="tns1:AgencyCyclePayment">
                <xs:annotation>
                  <xs:documentation>Points to an existing Agency Payment that has been fully paid and distributed. A modifying AgencyCyclePayment will be created based on this Agency Payment. If/when the payment is executed, the original Agency Payment will be reversed.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AgencyCyclePromiseToModify" nillable="true" type="tns1:AgencyCyclePromise">
                <xs:annotation>
                  <xs:documentation>Points to an existing Agency Promise that has been executed.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AgencyPaymentTargetType" nillable="true" type="tns2:AgencyPaymentTargetType">
                <xs:annotation>
                  <xs:documentation>Describes what we're paying, for instance, paying a promise, completing a saved payment, or             creating an entirely new instance of a payment against a statement.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AgencyPromiseTargetType" nillable="true" type="tns2:AgencyPromiseTargetType">
                <xs:annotation>
                  <xs:documentation>Describes what we're promising towards, for instance, completing a saved promise, or             creating an entirely new instance of a promise against a statement.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Amount" nillable="true" type="tns1:MonetaryAmount">
                <xs:annotation>
                  <xs:documentation>The total amount of the payment NOTE: when inserting a NewAgencyMoneyDetails this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Description" nillable="true" type="soapenc:string"/>
              <xs:element maxOccurs="1" minOccurs="0" name="PaymentInstrument" nillable="true" type="tns1:PaymentInstrument">
                <xs:annotation>
                  <xs:documentation>The PaymentInstrument associated with this payment receipt. NOTE: when inserting a NewAgencyMoneyDetails this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Prefill" nillable="true" type="tns2:AgencyCycleDistPrefill">
                <xs:annotation>
                  <xs:documentation>Describes how the distribution built off of these details should be filled before beginning the             distribution wizard.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PreviouslySavedAgencyCyclePayment" nillable="true" type="tns1:AgencyCyclePayment">
                <xs:annotation>
                  <xs:documentation>Points to an existing Agency Payment on the statement we are about to apply money to, that has not been executed.             Null if no such payment exists.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PreviouslySavedAgencyCyclePromise" nillable="true" type="tns1:AgencyCyclePromise">
                <xs:annotation>
                  <xs:documentation>Points to an existing Agency Promise on the statement we are about to apply money to, that has not been executed.             Null if no such Promise exists.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Producer" nillable="true" type="tns1:Producer">
                <xs:annotation>
                  <xs:documentation>The producer that the payment is coming from.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="ReceivedDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date that funds were physically received (e.g., the date the check arrived in the mail). NOTE: when inserting a NewAgencyMoneyDetails this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReceivedMoneyToBeModified" nillable="true" type="tns1:BaseMoneyReceived">
                <xs:annotation>
                  <xs:documentation>Points to an existing executed agency money received when we're using the wizard to edit or distribute a payment             that's already been received, but not yet distributed.  When creating a new Agency Payment, or editing a Saved             payment, this must be null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="RefNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The reference number for this payment.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="StatementInvoice" nillable="true" type="tns1:StatementInvoice">
                <xs:annotation>
                  <xs:documentation>The statement to apply the money to.  If null, the money is simply received in producer unapplied.  WARNING: Do not set this directly for Payments, you should instead set this by setting the Statement View.  This needs to be refactored, see CC-48318</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="ZeroDollar" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>True if this details is for an ZeroDollarAMR</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="DBConsistencyCheckResult" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Class containing information resulting from the running of database consistency
checks.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="CheckType" type="xsd:int">
            <xs:annotation>
              <xs:documentation>Type of consistency check</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="ConsistencyCheckDescription" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>description of the consistency check</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Duration" type="xsd:long">
            <xs:annotation>
              <xs:documentation>the length of time (in seconds) the check took</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="FailureDescription" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>the description of the failure</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Fingerprint" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>Fingerprint of SQL query</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="GetNumInconsistenciesValid" type="xsd:boolean">
            <xs:annotation>
              <xs:documentation>is the getNumInconsistencies() method valid for the associated consistency check type.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="GetSqlStringValid" type="xsd:boolean">
            <xs:annotation>
              <xs:documentation>Is the getSqlString() method valid for the associated consistency check type.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="NumInconsistencies" type="xsd:int">
            <xs:annotation>
              <xs:documentation>This method is only valid for the following types of checks (NO_MATCH_ROWS).
Call isGetNumInconsistenciesValid() first.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="QueryToIdentifyRows" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>This method is only valid for the following types of checks (NO_MATCH_ROWS).
Call isGetSqlStringValid() first.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="SqlFailure" type="xsd:boolean">
            <xs:annotation>
              <xs:documentation>whether the query failed with a SQL error.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="SqlString" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>This method is only valid for the following types of checks (NO_MATCH_ROWS).
Call isGetSqlStringValid() first.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Succeeded" type="xsd:boolean">
            <xs:annotation>
              <xs:documentation>Whether or not check succeeded</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ArrayOfDBConsistencyCheckResult" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:DBConsistencyCheckResult[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="SessionData" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Returns session information for a server session.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="SessionId" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>The session id for this entry.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="UserId" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>The user id in the session</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="UserName" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>The name of the user's credential</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ArrayOfSessionData" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:SessionData[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="DatabaseSnapshotInfo" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:sequence>
          <xs:element name="BeginIntervalTime" nillable="true" type="xsd:dateTime"/>
          <xs:element name="Description" nillable="true" type="soapenc:string"/>
          <xs:element name="Id" type="xsd:int"/>
          <xs:element name="Persisted" type="xsd:boolean"/>
          <xs:element name="SnapTime" nillable="true" type="xsd:dateTime"/>
          <xs:element name="SnapshotChosen" type="xsd:boolean"/>
          <xs:element name="StartupTime" nillable="true" type="xsd:dateTime"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ArrayOfDatabaseSnapshotInfo" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:DatabaseSnapshotInfo[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ServerVersion" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Data transfer object containing the servers version information.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="AppVersion" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>The version of the application</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="ConfigVersion" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>Gets the version of the configuration files</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="ConfigVersionModified" nillable="true" type="soapenc:string"/>
          <xs:element name="PlatformVersion" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>The version of the platform</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="SchemaVersion" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>The schema version</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AWRReportUserSettings" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:sequence>
          <xs:element name="BeginSnapId" type="xsd:int"/>
          <xs:element name="CapturePeakedBindVariables" type="xsd:boolean"/>
          <xs:element name="CapturePeakedBindVariablesFromAWR" type="xsd:boolean"/>
          <xs:element name="ConcurrentBatchProcessAndWorkerAnalysis" type="xsd:boolean"/>
          <xs:element name="ConcurrentHistoryAnalysis" type="xsd:boolean"/>
          <xs:element name="ConcurrentMessagingAnalysis" type="xsd:boolean"/>
          <xs:element name="EndSnapId" type="xsd:int"/>
          <xs:element name="GenerateCallsToASHScripts" type="xsd:boolean"/>
          <xs:element name="InMemorySQLMonitorIncludeAllExecutions" type="xsd:boolean"/>
          <xs:element name="IncludeDatabaseStatistics" type="xsd:boolean"/>
          <xs:element name="IncludeMetadataForInstrumentationTables" type="xsd:boolean"/>
          <xs:element name="OnDiskSQLMonitorIncludeAllExecutions" type="xsd:boolean"/>
          <xs:element name="ProbeInMemorySQLMonitor" type="xsd:boolean"/>
          <xs:element name="ProbeOnDiskSQLMonitor" type="xsd:boolean"/>
          <xs:element name="ProbeVDollarTables" type="xsd:boolean"/>
          <xs:element name="SearchForQueriesOnlyInFirstSnapshot" type="xsd:boolean"/>
          <xs:element name="SearchForQueriesOnlyInLastSnapshot" type="xsd:boolean"/>
          <xs:element name="SearchForQueriesWithMultiplePlans" type="xsd:boolean"/>
          <xs:element name="UseExperimentalRawDataOutput" type="xsd:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TableImportResult" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A simple data class used to transmit the aggregated results of a staging
table load</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="LoadCommandID" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>Returns the public id of the row in loadcommand table for the operation.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="NumErrors" type="xsd:int">
            <xs:annotation>
              <xs:documentation>Returns the number of load errors generated by the operation.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="StrErrorMessage" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>The error message string</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TypeKeyData" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Contains raw data about a TypeKey instance.  Used instead of a typekey instance because the TypeKey class doesn't
have a no-arg constructor.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="Code" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>Corresponds to the code field on TypeKey</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Description" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>Corresponds to the description field on TypeKey</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Name" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>Corresponds to the name field on TypeKey</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Retired" type="xsd:boolean">
            <xs:annotation>
              <xs:documentation>Corresponds to the retired field on TypeKey</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ArrayOfTypeKeyData" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:TypeKeyData[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="InvoiceItemPreview" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:sequence>
          <xs:element name="Amount" nillable="true" type="tns1:MonetaryAmount"/>
          <xs:element name="ChargeName" nillable="true" type="soapenc:string"/>
          <xs:element name="InvoiceDate" nillable="true" type="xsd:dateTime"/>
          <xs:element name="InvoiceDueDate" nillable="true" type="xsd:dateTime"/>
          <xs:element maxOccurs="1" minOccurs="0" name="Type" nillable="true" type="tns2:InvoiceItemType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ArrayOfInvoiceItemPreview" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:InvoiceItemPreview[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
    <xs:schema targetNamespace="http://fault.webservices.bc.guidewire.com/">
      <xs:import namespace="http://entity.webservices.bc.guidewire.com/" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
      <xs:import namespace="http://enumeration.webservices.bc.guidewire.com/" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
      <xs:import namespace="http://schemas.xmlsoap.org/soap/encoding/" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
      <xs:import namespace="http://api.webservices.bc.guidewire.com/" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
      <xs:complexType name="SOAPException" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A generic SOAP exception.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="Message" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>The message associated with this exception</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="OtherMessages" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>Other messages attached to this exception.  This message may contain information
related to other exceptions that occurred during a SOAP call, but not directly
associated with this particular exception.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="SOAPSenderException" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>SOAPSenderException is the base class for all exceptions that resulted from
a sender error. This usually means that required data was not properly encoded
or was absent. Senders should not send the message again unless some steps have
been taken to make the encoded data valid.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns3:SOAPException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="DataConversionException" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Thrown by many APIs when they encounter a problem translating a SOAP data object into
an internal system object.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns3:SOAPSenderException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="BadIdentifierException" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect).</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns3:DataConversionException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PermissionException" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Thrown when the authenticated SOAP user does not have permission to
perform the requested operation</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns3:SOAPSenderException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="SOAPServerException" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>SOAPServerException is the base class for all exceptions that resulted from
a server error. This is something of a catch-all exception type insofar as
some things which might in fact be considered SOAPSenderExceptions are reported
as SOAPServerExceptions. Perhaps a rule failed or something else. Generally it
indicates a problem in the server that is likely retryable at some future time.
The database being down, an unavailable plugin, etc would fall into this catagory.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns3:SOAPException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ServerStateException" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>ServerStateException is thrown when a request is made at a time the
server is in a state that disallows the request. An example is if
an attempt is made to add a claim and the server is in maintenance
mode.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns3:SOAPServerException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="DuplicateKeyException" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Throws if a duplicate data exception is detected in the database.  I.e. a unique index violation.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns3:DataConversionException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="RequiredFieldException" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Thrown when required data is missing from a bean.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns3:DataConversionException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="EntityStateException" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Thrown when an attempt is made to manipulate an object that is in a state
that prevents the operation from being performed. An example is trying to
modify a Claim that is marked as closed.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns3:SOAPSenderException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="SOAPRetryableException" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>SOAPRetryableException is the class for all exceptions that are retryable
immediately.  The primary example of this is ConcurrentDataChangeException.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns3:SOAPException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="LoginException" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Class of exceptions thrown when a user tries to log in and an authentication failure occurs.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns3:PermissionException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="FieldConversionException" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Thrown when a data type cannot be converted into the native data type.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns3:DataConversionException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="FieldFormatException" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Thrown when the input type does not match the format specified in the metadata.  I.e. a string is too long.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns3:DataConversionException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="UnknownTypeKeyException" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Thrown when a typekey value isn't available on the server.  This exception can only
happen if the SOAP WSDL that is being used on the remote side is invalid.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns3:DataConversionException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="BatchProcessException" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>SOAP Exception specific to batch process operations</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns3:SOAPServerException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AlreadyExecutedException" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:extension base="tns3:SOAPSenderException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
    <xs:schema targetNamespace="http://api.webservices.bc.guidewire.com/">
      <xs:import namespace="http://fault.webservices.bc.guidewire.com/" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
      <xs:import namespace="http://entity.webservices.bc.guidewire.com/" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
      <xs:import namespace="http://enumeration.webservices.bc.guidewire.com/" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
      <xs:import namespace="http://schemas.xmlsoap.org/soap/encoding/" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
      <xs:complexType name="ArrayOf_soapenc_string" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="soapenc:string[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfArrayOf_soapenc_string" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="soapenc:string[][]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOf_soapenc_decimal" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="soapenc:decimal[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
    <xs:schema targetNamespace="http://enumeration.webservices.bc.guidewire.com/">
      <xs:import namespace="http://fault.webservices.bc.guidewire.com/" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
      <xs:import namespace="http://entity.webservices.bc.guidewire.com/" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
      <xs:import namespace="http://schemas.xmlsoap.org/soap/encoding/" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
      <xs:import namespace="http://api.webservices.bc.guidewire.com/" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
      <xs:complexType name="ArrayOfHoldType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="tns2:HoldType[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:simpleType name="RefTypeEnum" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Enumeration used to control how beans are used when calling into the system.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="GW_ByRef">
            <xs:annotation>
              <xs:documentation>Use this value to refer to a pre-existing bean.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="GW_NotByRef">
            <xs:annotation>
              <xs:documentation>Use this value to specify the bean is being inserted into the database</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="GW_Events" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Typelist containing all events that can be fired</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="AccountAdded">
            <xs:annotation>
              <xs:documentation>Account was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="AccountChanged">
            <xs:annotation>
              <xs:documentation>Account was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="AccountRemoved">
            <xs:annotation>
              <xs:documentation>Account was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="AccountResync">
            <xs:annotation>
              <xs:documentation>Resync event. Generated only as a result of an application administrator requesting a Resync.                 All pending messages for the account are thrown away and this event is then fired.                 Implementers will generally handle this event and send enough of the account to bring the                 remote system up to date.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ActivityAdded">
            <xs:annotation>
              <xs:documentation>Activity was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ActivityChanged">
            <xs:annotation>
              <xs:documentation>Activity was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ActivityRemoved">
            <xs:annotation>
              <xs:documentation>Activity was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="AgencyBillWorkflowAdded">
            <xs:annotation>
              <xs:documentation>AgencyBillWorkflow was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="AgencyBillWorkflowChanged">
            <xs:annotation>
              <xs:documentation>AgencyBillWorkflow was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="AgencyBillWorkflowRemoved">
            <xs:annotation>
              <xs:documentation>AgencyBillWorkflow was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="AuthorityLimitProfileAdded">
            <xs:annotation>
              <xs:documentation>AuthorityLimitProfile was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="AuthorityLimitProfileChanged">
            <xs:annotation>
              <xs:documentation>AuthorityLimitProfile was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="AuthorityLimitProfileRemoved">
            <xs:annotation>
              <xs:documentation>AuthorityLimitProfile was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ChargeAdded">
            <xs:annotation>
              <xs:documentation>Charge was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ChargeChanged">
            <xs:annotation>
              <xs:documentation>Charge was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ChargeRemoved">
            <xs:annotation>
              <xs:documentation>Charge was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="CollectionAgencyAdded">
            <xs:annotation>
              <xs:documentation>CollectionAgency was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="CollectionAgencyChanged">
            <xs:annotation>
              <xs:documentation>CollectionAgency was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="CollectionAgencyRemoved">
            <xs:annotation>
              <xs:documentation>CollectionAgency was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ConnectCollectionAgency">
            <xs:annotation>
              <xs:documentation>Event fired when the Collection Agency on this delinquency process needs to be connected to the account.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ContactAdded">
            <xs:annotation>
              <xs:documentation>Contact was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ContactAutoSyncFailed">
            <xs:annotation>
              <xs:documentation>Fired when a contact auto sync work item is failed to process.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ContactAutoSyncWorkItemAdded">
            <xs:annotation>
              <xs:documentation>ContactAutoSyncWorkItem was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ContactAutoSyncWorkItemChanged">
            <xs:annotation>
              <xs:documentation>ContactAutoSyncWorkItem was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ContactAutoSyncWorkItemRemoved">
            <xs:annotation>
              <xs:documentation>ContactAutoSyncWorkItem was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ContactChanged">
            <xs:annotation>
              <xs:documentation>Contact was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ContactRemoved">
            <xs:annotation>
              <xs:documentation>Contact was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="DataChangeAdded">
            <xs:annotation>
              <xs:documentation>DataChange was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="DataChangeChanged">
            <xs:annotation>
              <xs:documentation>DataChange was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="DataChangeEditorIsExecutor">
            <xs:annotation>
              <xs:documentation>This event is raised if editor of the gosu script is the same person who executed the gosu script</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="DataChangeRemoved">
            <xs:annotation>
              <xs:documentation>DataChange was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="DelProcessWorkflowAdded">
            <xs:annotation>
              <xs:documentation>DelProcessWorkflow was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="DelProcessWorkflowChanged">
            <xs:annotation>
              <xs:documentation>DelProcessWorkflow was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="DelProcessWorkflowRemoved">
            <xs:annotation>
              <xs:documentation>DelProcessWorkflow was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="DelinquencyProcessAdded">
            <xs:annotation>
              <xs:documentation>DelinquencyProcess was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="DelinquencyProcessChanged">
            <xs:annotation>
              <xs:documentation>DelinquencyProcess was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="DelinquencyProcessRemoved">
            <xs:annotation>
              <xs:documentation>DelinquencyProcess was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="DocumentAdded">
            <xs:annotation>
              <xs:documentation>Document was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="DocumentChanged">
            <xs:annotation>
              <xs:documentation>Document was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="DocumentRemoved">
            <xs:annotation>
              <xs:documentation>Document was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="DocumentStore">
            <xs:annotation>
              <xs:documentation>This is used by the asynchronous storage to inform the transport that this document needs to be processed.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="GroupAdded">
            <xs:annotation>
              <xs:documentation>Group was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="GroupChanged">
            <xs:annotation>
              <xs:documentation>Group was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="GroupRemoved">
            <xs:annotation>
              <xs:documentation>Group was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="GroupUserAdded">
            <xs:annotation>
              <xs:documentation>GroupUser was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="GroupUserChanged">
            <xs:annotation>
              <xs:documentation>GroupUser was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="GroupUserRemoved">
            <xs:annotation>
              <xs:documentation>GroupUser was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="InboundHistoryAdded">
            <xs:annotation>
              <xs:documentation>InboundHistory was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="InboundHistoryChanged">
            <xs:annotation>
              <xs:documentation>InboundHistory was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="InboundHistoryRemoved">
            <xs:annotation>
              <xs:documentation>InboundHistory was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="InvoiceAdded">
            <xs:annotation>
              <xs:documentation>Invoice was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="InvoiceChanged">
            <xs:annotation>
              <xs:documentation>Invoice was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="InvoiceItemAdded">
            <xs:annotation>
              <xs:documentation>InvoiceItem was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="InvoiceItemChanged">
            <xs:annotation>
              <xs:documentation>InvoiceItem was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="InvoiceItemRemoved">
            <xs:annotation>
              <xs:documentation>InvoiceItem was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="InvoiceRemoved">
            <xs:annotation>
              <xs:documentation>Invoice was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="InvoiceResent">
            <xs:annotation>
              <xs:documentation>Fired when the invoice is resent (NOT when it is sent the first time)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="LineItemAdded">
            <xs:annotation>
              <xs:documentation>LineItem was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="LineItemChanged">
            <xs:annotation>
              <xs:documentation>LineItem was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="LineItemRemoved">
            <xs:annotation>
              <xs:documentation>LineItem was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="NoteAdded">
            <xs:annotation>
              <xs:documentation>Note was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="NoteChanged">
            <xs:annotation>
              <xs:documentation>Note was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="NoteRemoved">
            <xs:annotation>
              <xs:documentation>Note was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="OutgoingPaymentAdded">
            <xs:annotation>
              <xs:documentation>OutgoingPayment was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="OutgoingPaymentChanged">
            <xs:annotation>
              <xs:documentation>OutgoingPayment was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="OutgoingPaymentRemoved">
            <xs:annotation>
              <xs:documentation>OutgoingPayment was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="OutgoingPaymentStatusChanged">
            <xs:annotation>
              <xs:documentation>Fired when the payment is created, and each time its status changes.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="PaymentMoneyReceivedAdded">
            <xs:annotation>
              <xs:documentation>PaymentMoneyReceived was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="PaymentMoneyReceivedChanged">
            <xs:annotation>
              <xs:documentation>PaymentMoneyReceived was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="PaymentMoneyReceivedRemoved">
            <xs:annotation>
              <xs:documentation>PaymentMoneyReceived was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="PaymentRequestAdded">
            <xs:annotation>
              <xs:documentation>PaymentRequest was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="PaymentRequestChanged">
            <xs:annotation>
              <xs:documentation>PaymentRequest was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="PaymentRequestRemoved">
            <xs:annotation>
              <xs:documentation>PaymentRequest was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="PlanAdded">
            <xs:annotation>
              <xs:documentation>Plan was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="PlanChanged">
            <xs:annotation>
              <xs:documentation>Plan was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="PlanRemoved">
            <xs:annotation>
              <xs:documentation>Plan was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="PolicyAdded">
            <xs:annotation>
              <xs:documentation>Policy was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="PolicyChanged">
            <xs:annotation>
              <xs:documentation>Policy was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="PolicyPeriodAdded">
            <xs:annotation>
              <xs:documentation>PolicyPeriod was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="PolicyPeriodChanged">
            <xs:annotation>
              <xs:documentation>PolicyPeriod was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="PolicyPeriodRemoved">
            <xs:annotation>
              <xs:documentation>PolicyPeriod was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="PolicyPeriodResync">
            <xs:annotation>
              <xs:documentation>Resync event. Generated only as a result of an application administrator requesting a Resync.                 All pending messages for the policy period are thrown away and this event is then fired.                 Implementers will generally handle this event and send enough of the policy period to bring the                 remote system up to date.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="PolicyRemoved">
            <xs:annotation>
              <xs:documentation>Policy was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ProcessHistoryAdded">
            <xs:annotation>
              <xs:documentation>ProcessHistory was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ProcessHistoryChanged">
            <xs:annotation>
              <xs:documentation>ProcessHistory was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ProcessHistoryRemoved">
            <xs:annotation>
              <xs:documentation>ProcessHistory was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ProducerAdded">
            <xs:annotation>
              <xs:documentation>Producer was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ProducerChanged">
            <xs:annotation>
              <xs:documentation>Producer was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ProducerRemoved">
            <xs:annotation>
              <xs:documentation>Producer was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ProducerResync">
            <xs:annotation>
              <xs:documentation>Resync event. Generated only as a result of an application administrator requesting a Resync.             All pending messages for the producer are thrown away and this event is then fired.             Implementers will generally handle this event and send enough of the producer to bring the             remote system up to date.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ProducerStatementAdded">
            <xs:annotation>
              <xs:documentation>ProducerStatement was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ProducerStatementChanged">
            <xs:annotation>
              <xs:documentation>ProducerStatement was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ProducerStatementRemoved">
            <xs:annotation>
              <xs:documentation>ProducerStatement was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="PurgedRootInfoAdded">
            <xs:annotation>
              <xs:documentation>PurgedRootInfo was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="PurgedRootInfoChanged">
            <xs:annotation>
              <xs:documentation>PurgedRootInfo was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="PurgedRootInfoRemoved">
            <xs:annotation>
              <xs:documentation>PurgedRootInfo was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="RoleAdded">
            <xs:annotation>
              <xs:documentation>Role was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="RoleChanged">
            <xs:annotation>
              <xs:documentation>Role was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="RoleRemoved">
            <xs:annotation>
              <xs:documentation>Role was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="SoapCallHistoryAdded">
            <xs:annotation>
              <xs:documentation>SoapCallHistory was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="SoapCallHistoryChanged">
            <xs:annotation>
              <xs:documentation>SoapCallHistory was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="SoapCallHistoryRemoved">
            <xs:annotation>
              <xs:documentation>SoapCallHistory was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="StartablePluginHistoryAdded">
            <xs:annotation>
              <xs:documentation>StartablePluginHistory was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="StartablePluginHistoryChanged">
            <xs:annotation>
              <xs:documentation>StartablePluginHistory was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="StartablePluginHistoryRemoved">
            <xs:annotation>
              <xs:documentation>StartablePluginHistory was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="SuspensePaymentAdded">
            <xs:annotation>
              <xs:documentation>SuspensePayment was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="SuspensePaymentChanged">
            <xs:annotation>
              <xs:documentation>SuspensePayment was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="SuspensePaymentRemoved">
            <xs:annotation>
              <xs:documentation>SuspensePayment was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TAccountAdded">
            <xs:annotation>
              <xs:documentation>TAccount was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TAccountChanged">
            <xs:annotation>
              <xs:documentation>TAccount was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TAccountRemoved">
            <xs:annotation>
              <xs:documentation>TAccount was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TransactionAdded">
            <xs:annotation>
              <xs:documentation>Transaction was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TransactionChanged">
            <xs:annotation>
              <xs:documentation>Transaction was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TransactionRemoved">
            <xs:annotation>
              <xs:documentation>Transaction was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="UserAdded">
            <xs:annotation>
              <xs:documentation>User was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="UserChanged">
            <xs:annotation>
              <xs:documentation>User was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="UserRemoved">
            <xs:annotation>
              <xs:documentation>User was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="UserRoleAssignmentAdded">
            <xs:annotation>
              <xs:documentation>UserRoleAssignment was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="UserRoleAssignmentChanged">
            <xs:annotation>
              <xs:documentation>UserRoleAssignment was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="UserRoleAssignmentRemoved">
            <xs:annotation>
              <xs:documentation>UserRoleAssignment was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="DelinquencyProcess" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype typelist for entity DelinquencyProcess</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_DelinquencyProcess">
            <xs:annotation>
              <xs:documentation>DelinquencyProcess</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PolicyDlnqProcess">
            <xs:annotation>
              <xs:documentation>PolicyDlnqProcess</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PolicyPeriodBillingMethod" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Billing Method for a PolicyPeriod.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_AgencyBill">
            <xs:annotation>
              <xs:documentation>Agency Bill; PolicyPeriod is paid by the producer associated with this PolicyPeriod's primary earning Producer Code by default.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DirectBill">
            <xs:annotation>
              <xs:documentation>Direct Billing; PolicyPeriod is paid by the owning account by default.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ListBill">
            <xs:annotation>
              <xs:documentation>List Bill; PolicyPeriod is paid by an overriding payer List-Bill Account by default.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PolicyCancelStatus" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>The cancellation status of a policy</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_canceled">
            <xs:annotation>
              <xs:documentation>The policy is canceled</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_open">
            <xs:annotation>
              <xs:documentation>The policy is open</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pendingcancellation">
            <xs:annotation>
              <xs:documentation>The policy is pending cancellation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pendingreinstatement">
            <xs:annotation>
              <xs:documentation>Reinstatement of the canceled policy has been requested</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pendingrescindcancel">
            <xs:annotation>
              <xs:documentation>Recission of a pending cancellation has been requested</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CancellationType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>The three cancellation types for policy cancellation</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_flat">
            <xs:annotation>
              <xs:documentation>Flat</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_prorata">
            <xs:annotation>
              <xs:documentation>Pro rata</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_shortrate">
            <xs:annotation>
              <xs:documentation>Short rate</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PolicyClosureStatus" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>The closure status of a policy</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_closed">
            <xs:annotation>
              <xs:documentation>The policy is closed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_open">
            <xs:annotation>
              <xs:documentation>The policy is open</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_openlocked">
            <xs:annotation>
              <xs:documentation>The policy is open, and may not be closed until the PAS sets its status to "Open"</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ConfirmationNotificationState" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>The state of confirmation notification for a policy period.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_DoNotNotify">
            <xs:annotation>
              <xs:documentation>Don't notify the policy administration system regardless of payments.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Notified">
            <xs:annotation>
              <xs:documentation>The policy administration system has already been notified that the policy period was confirmed.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NotifyUponSufficientPayment">
            <xs:annotation>
              <xs:documentation>Notify the policy administration system when sufficient payment is received to confirm the policy period.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Contact" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype typelist for entity Contact</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_Company">
            <xs:annotation>
              <xs:documentation>Company</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CompanyVendor">
            <xs:annotation>
              <xs:documentation>Vendor (Company)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Contact">
            <xs:annotation>
              <xs:documentation>Contact</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LegalVenue">
            <xs:annotation>
              <xs:documentation>Legal Venue</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Person">
            <xs:annotation>
              <xs:documentation>Person</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PersonVendor">
            <xs:annotation>
              <xs:documentation>Vendor (Person)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Place">
            <xs:annotation>
              <xs:documentation>Place</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_UserContact">
            <xs:annotation>
              <xs:documentation>User Contact</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="VenueType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>The types of legal venues.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_ADR">
            <xs:annotation>
              <xs:documentation>Alternative dispute resolution</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_County">
            <xs:annotation>
              <xs:documentation>County</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Fed">
            <xs:annotation>
              <xs:documentation>Federal</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Muni">
            <xs:annotation>
              <xs:documentation>Municipal</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_State">
            <xs:annotation>
              <xs:documentation>State</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_StateSup">
            <xs:annotation>
              <xs:documentation>State Supreme Court</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Supreme">
            <xs:annotation>
              <xs:documentation>Supreme Court</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WcAppeals">
            <xs:annotation>
              <xs:documentation>Workers' Comp Appeals Board</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PhoneCountryCode" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>List of regions and their regional phone codes</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_AC">
            <xs:annotation>
              <xs:documentation>247</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AD">
            <xs:annotation>
              <xs:documentation>376</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AE">
            <xs:annotation>
              <xs:documentation>971</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AF">
            <xs:annotation>
              <xs:documentation>93</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AG">
            <xs:annotation>
              <xs:documentation>1</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AI">
            <xs:annotation>
              <xs:documentation>1</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AL">
            <xs:annotation>
              <xs:documentation>355</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AM">
            <xs:annotation>
              <xs:documentation>374</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AN">
            <xs:annotation>
              <xs:documentation>599</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AO">
            <xs:annotation>
              <xs:documentation>244</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AR">
            <xs:annotation>
              <xs:documentation>54</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AS">
            <xs:annotation>
              <xs:documentation>1</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AT">
            <xs:annotation>
              <xs:documentation>43</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AU">
            <xs:annotation>
              <xs:documentation>61</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AW">
            <xs:annotation>
              <xs:documentation>297</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AX">
            <xs:annotation>
              <xs:documentation>358</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AZ">
            <xs:annotation>
              <xs:documentation>994</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BA">
            <xs:annotation>
              <xs:documentation>387</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BB">
            <xs:annotation>
              <xs:documentation>1</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BD">
            <xs:annotation>
              <xs:documentation>880</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BE">
            <xs:annotation>
              <xs:documentation>32</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BF">
            <xs:annotation>
              <xs:documentation>226</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BG">
            <xs:annotation>
              <xs:documentation>359</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BH">
            <xs:annotation>
              <xs:documentation>973</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BI">
            <xs:annotation>
              <xs:documentation>257</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BJ">
            <xs:annotation>
              <xs:documentation>229</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BL">
            <xs:annotation>
              <xs:documentation>590</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BM">
            <xs:annotation>
              <xs:documentation>1</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BN">
            <xs:annotation>
              <xs:documentation>673</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BO">
            <xs:annotation>
              <xs:documentation>591</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BQ">
            <xs:annotation>
              <xs:documentation>599</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BR">
            <xs:annotation>
              <xs:documentation>55</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BS">
            <xs:annotation>
              <xs:documentation>1</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BT">
            <xs:annotation>
              <xs:documentation>975</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BW">
            <xs:annotation>
              <xs:documentation>267</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BY">
            <xs:annotation>
              <xs:documentation>375</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BZ">
            <xs:annotation>
              <xs:documentation>501</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CA">
            <xs:annotation>
              <xs:documentation>1</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CC">
            <xs:annotation>
              <xs:documentation>61</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CD">
            <xs:annotation>
              <xs:documentation>243</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CF">
            <xs:annotation>
              <xs:documentation>236</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CG">
            <xs:annotation>
              <xs:documentation>242</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CH">
            <xs:annotation>
              <xs:documentation>41</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CI">
            <xs:annotation>
              <xs:documentation>225</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CK">
            <xs:annotation>
              <xs:documentation>682</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CL">
            <xs:annotation>
              <xs:documentation>56</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CM">
            <xs:annotation>
              <xs:documentation>237</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CN">
            <xs:annotation>
              <xs:documentation>86</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CO">
            <xs:annotation>
              <xs:documentation>57</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CR">
            <xs:annotation>
              <xs:documentation>506</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CU">
            <xs:annotation>
              <xs:documentation>53</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CV">
            <xs:annotation>
              <xs:documentation>238</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CW">
            <xs:annotation>
              <xs:documentation>599</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CX">
            <xs:annotation>
              <xs:documentation>61</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CY">
            <xs:annotation>
              <xs:documentation>357</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CZ">
            <xs:annotation>
              <xs:documentation>420</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE">
            <xs:annotation>
              <xs:documentation>49</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DJ">
            <xs:annotation>
              <xs:documentation>253</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DK">
            <xs:annotation>
              <xs:documentation>45</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DM">
            <xs:annotation>
              <xs:documentation>1</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DO">
            <xs:annotation>
              <xs:documentation>1</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DZ">
            <xs:annotation>
              <xs:documentation>213</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_EC">
            <xs:annotation>
              <xs:documentation>593</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_EE">
            <xs:annotation>
              <xs:documentation>372</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_EG">
            <xs:annotation>
              <xs:documentation>20</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ER">
            <xs:annotation>
              <xs:documentation>291</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ES">
            <xs:annotation>
              <xs:documentation>34</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ET">
            <xs:annotation>
              <xs:documentation>251</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_FI">
            <xs:annotation>
              <xs:documentation>358</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_FJ">
            <xs:annotation>
              <xs:documentation>679</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_FK">
            <xs:annotation>
              <xs:documentation>500</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_FM">
            <xs:annotation>
              <xs:documentation>691</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_FO">
            <xs:annotation>
              <xs:documentation>298</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_FR">
            <xs:annotation>
              <xs:documentation>33</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GA">
            <xs:annotation>
              <xs:documentation>241</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GB">
            <xs:annotation>
              <xs:documentation>44</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GD">
            <xs:annotation>
              <xs:documentation>1</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GE">
            <xs:annotation>
              <xs:documentation>995</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GF">
            <xs:annotation>
              <xs:documentation>594</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GG">
            <xs:annotation>
              <xs:documentation>44</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GH">
            <xs:annotation>
              <xs:documentation>233</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GI">
            <xs:annotation>
              <xs:documentation>350</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GL">
            <xs:annotation>
              <xs:documentation>299</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GM">
            <xs:annotation>
              <xs:documentation>220</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GN">
            <xs:annotation>
              <xs:documentation>224</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GP">
            <xs:annotation>
              <xs:documentation>590</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GQ">
            <xs:annotation>
              <xs:documentation>240</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GR">
            <xs:annotation>
              <xs:documentation>30</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GT">
            <xs:annotation>
              <xs:documentation>502</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GU">
            <xs:annotation>
              <xs:documentation>1</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GW">
            <xs:annotation>
              <xs:documentation>245</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GY">
            <xs:annotation>
              <xs:documentation>592</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HK">
            <xs:annotation>
              <xs:documentation>852</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HN">
            <xs:annotation>
              <xs:documentation>504</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HR">
            <xs:annotation>
              <xs:documentation>385</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HT">
            <xs:annotation>
              <xs:documentation>509</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HU">
            <xs:annotation>
              <xs:documentation>36</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ID">
            <xs:annotation>
              <xs:documentation>62</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_IE">
            <xs:annotation>
              <xs:documentation>353</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_IL">
            <xs:annotation>
              <xs:documentation>972</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_IM">
            <xs:annotation>
              <xs:documentation>44</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_IN">
            <xs:annotation>
              <xs:documentation>91</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_IO">
            <xs:annotation>
              <xs:documentation>246</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_IQ">
            <xs:annotation>
              <xs:documentation>964</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_IR">
            <xs:annotation>
              <xs:documentation>98</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_IS">
            <xs:annotation>
              <xs:documentation>354</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_IT">
            <xs:annotation>
              <xs:documentation>39</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_JE">
            <xs:annotation>
              <xs:documentation>44</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_JM">
            <xs:annotation>
              <xs:documentation>1</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_JO">
            <xs:annotation>
              <xs:documentation>962</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_JP">
            <xs:annotation>
              <xs:documentation>81</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_KE">
            <xs:annotation>
              <xs:documentation>254</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_KG">
            <xs:annotation>
              <xs:documentation>996</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_KH">
            <xs:annotation>
              <xs:documentation>855</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_KI">
            <xs:annotation>
              <xs:documentation>686</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_KM">
            <xs:annotation>
              <xs:documentation>269</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_KN">
            <xs:annotation>
              <xs:documentation>1</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_KP">
            <xs:annotation>
              <xs:documentation>850</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_KR">
            <xs:annotation>
              <xs:documentation>82</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_KW">
            <xs:annotation>
              <xs:documentation>965</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_KY">
            <xs:annotation>
              <xs:documentation>1</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_KZ">
            <xs:annotation>
              <xs:documentation>7</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LA">
            <xs:annotation>
              <xs:documentation>856</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LB">
            <xs:annotation>
              <xs:documentation>961</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LC">
            <xs:annotation>
              <xs:documentation>1</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LI">
            <xs:annotation>
              <xs:documentation>423</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LK">
            <xs:annotation>
              <xs:documentation>94</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LR">
            <xs:annotation>
              <xs:documentation>231</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LS">
            <xs:annotation>
              <xs:documentation>266</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LT">
            <xs:annotation>
              <xs:documentation>370</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LU">
            <xs:annotation>
              <xs:documentation>352</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LV">
            <xs:annotation>
              <xs:documentation>371</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LY">
            <xs:annotation>
              <xs:documentation>218</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MA">
            <xs:annotation>
              <xs:documentation>212</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MC">
            <xs:annotation>
              <xs:documentation>377</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MD">
            <xs:annotation>
              <xs:documentation>373</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ME">
            <xs:annotation>
              <xs:documentation>382</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MF">
            <xs:annotation>
              <xs:documentation>590</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MG">
            <xs:annotation>
              <xs:documentation>261</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MH">
            <xs:annotation>
              <xs:documentation>692</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MK">
            <xs:annotation>
              <xs:documentation>389</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ML">
            <xs:annotation>
              <xs:documentation>223</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MM">
            <xs:annotation>
              <xs:documentation>95</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MN">
            <xs:annotation>
              <xs:documentation>976</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MO">
            <xs:annotation>
              <xs:documentation>853</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MP">
            <xs:annotation>
              <xs:documentation>1</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MQ">
            <xs:annotation>
              <xs:documentation>596</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MR">
            <xs:annotation>
              <xs:documentation>222</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MS">
            <xs:annotation>
              <xs:documentation>1</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MT">
            <xs:annotation>
              <xs:documentation>356</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MU">
            <xs:annotation>
              <xs:documentation>230</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MV">
            <xs:annotation>
              <xs:documentation>960</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MW">
            <xs:annotation>
              <xs:documentation>265</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MX">
            <xs:annotation>
              <xs:documentation>52</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MY">
            <xs:annotation>
              <xs:documentation>60</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MZ">
            <xs:annotation>
              <xs:documentation>258</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NA">
            <xs:annotation>
              <xs:documentation>264</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NC">
            <xs:annotation>
              <xs:documentation>687</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NE">
            <xs:annotation>
              <xs:documentation>227</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NF">
            <xs:annotation>
              <xs:documentation>672</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NG">
            <xs:annotation>
              <xs:documentation>234</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NI">
            <xs:annotation>
              <xs:documentation>505</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NL">
            <xs:annotation>
              <xs:documentation>31</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NO">
            <xs:annotation>
              <xs:documentation>47</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NP">
            <xs:annotation>
              <xs:documentation>977</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NR">
            <xs:annotation>
              <xs:documentation>674</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NU">
            <xs:annotation>
              <xs:documentation>683</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NZ">
            <xs:annotation>
              <xs:documentation>64</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_OM">
            <xs:annotation>
              <xs:documentation>968</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PA">
            <xs:annotation>
              <xs:documentation>507</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PE">
            <xs:annotation>
              <xs:documentation>51</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PF">
            <xs:annotation>
              <xs:documentation>689</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PG">
            <xs:annotation>
              <xs:documentation>675</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PH">
            <xs:annotation>
              <xs:documentation>63</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PK">
            <xs:annotation>
              <xs:documentation>92</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PL">
            <xs:annotation>
              <xs:documentation>48</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PM">
            <xs:annotation>
              <xs:documentation>508</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PR">
            <xs:annotation>
              <xs:documentation>1</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PS">
            <xs:annotation>
              <xs:documentation>970</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PT">
            <xs:annotation>
              <xs:documentation>351</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PW">
            <xs:annotation>
              <xs:documentation>680</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PY">
            <xs:annotation>
              <xs:documentation>595</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_QA">
            <xs:annotation>
              <xs:documentation>974</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_RE">
            <xs:annotation>
              <xs:documentation>262</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_RO">
            <xs:annotation>
              <xs:documentation>40</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_RS">
            <xs:annotation>
              <xs:documentation>381</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_RU">
            <xs:annotation>
              <xs:documentation>7</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_RW">
            <xs:annotation>
              <xs:documentation>250</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SA">
            <xs:annotation>
              <xs:documentation>966</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SB">
            <xs:annotation>
              <xs:documentation>677</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SC">
            <xs:annotation>
              <xs:documentation>248</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SD">
            <xs:annotation>
              <xs:documentation>249</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SE">
            <xs:annotation>
              <xs:documentation>46</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SG">
            <xs:annotation>
              <xs:documentation>65</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SH">
            <xs:annotation>
              <xs:documentation>290</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SI">
            <xs:annotation>
              <xs:documentation>386</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SJ">
            <xs:annotation>
              <xs:documentation>47</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SK">
            <xs:annotation>
              <xs:documentation>421</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SL">
            <xs:annotation>
              <xs:documentation>232</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SM">
            <xs:annotation>
              <xs:documentation>378</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SN">
            <xs:annotation>
              <xs:documentation>221</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SO">
            <xs:annotation>
              <xs:documentation>252</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SR">
            <xs:annotation>
              <xs:documentation>597</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SS">
            <xs:annotation>
              <xs:documentation>211</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ST">
            <xs:annotation>
              <xs:documentation>239</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SV">
            <xs:annotation>
              <xs:documentation>503</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SX">
            <xs:annotation>
              <xs:documentation>1</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SY">
            <xs:annotation>
              <xs:documentation>963</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SZ">
            <xs:annotation>
              <xs:documentation>268</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TC">
            <xs:annotation>
              <xs:documentation>1</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TD">
            <xs:annotation>
              <xs:documentation>235</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TG">
            <xs:annotation>
              <xs:documentation>228</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TH">
            <xs:annotation>
              <xs:documentation>66</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TJ">
            <xs:annotation>
              <xs:documentation>992</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TK">
            <xs:annotation>
              <xs:documentation>690</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TL">
            <xs:annotation>
              <xs:documentation>670</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TM">
            <xs:annotation>
              <xs:documentation>993</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TN">
            <xs:annotation>
              <xs:documentation>216</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TO">
            <xs:annotation>
              <xs:documentation>676</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TR">
            <xs:annotation>
              <xs:documentation>90</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TT">
            <xs:annotation>
              <xs:documentation>1</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TV">
            <xs:annotation>
              <xs:documentation>688</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TW">
            <xs:annotation>
              <xs:documentation>886</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TZ">
            <xs:annotation>
              <xs:documentation>255</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_UA">
            <xs:annotation>
              <xs:documentation>380</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_UG">
            <xs:annotation>
              <xs:documentation>256</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_UNPARSEABLE">
            <xs:annotation>
              <xs:documentation>Unparseable Phone Numbers</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_US">
            <xs:annotation>
              <xs:documentation>1</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_UY">
            <xs:annotation>
              <xs:documentation>598</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_UZ">
            <xs:annotation>
              <xs:documentation>998</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_VA">
            <xs:annotation>
              <xs:documentation>379</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_VC">
            <xs:annotation>
              <xs:documentation>1</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_VE">
            <xs:annotation>
              <xs:documentation>58</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_VG">
            <xs:annotation>
              <xs:documentation>1</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_VI">
            <xs:annotation>
              <xs:documentation>1</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_VN">
            <xs:annotation>
              <xs:documentation>84</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_VU">
            <xs:annotation>
              <xs:documentation>678</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WF">
            <xs:annotation>
              <xs:documentation>681</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WS">
            <xs:annotation>
              <xs:documentation>685</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_YE">
            <xs:annotation>
              <xs:documentation>967</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_YT">
            <xs:annotation>
              <xs:documentation>262</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ZA">
            <xs:annotation>
              <xs:documentation>27</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ZM">
            <xs:annotation>
              <xs:documentation>260</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ZW">
            <xs:annotation>
              <xs:documentation>263</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ZZ">
            <xs:annotation>
              <xs:documentation>0</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="GenderType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Gender</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_F">
            <xs:annotation>
              <xs:documentation>Female</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_M">
            <xs:annotation>
              <xs:documentation>Male</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Jurisdiction" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>The list of jurisdictions regulating insurance and other licensing within this deployment. This is similar to the State typelist, which is used for addresses and locations. In many deployments, the State and Jurisdiction typelists will be equal</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_AB">
            <xs:annotation>
              <xs:documentation>Alberta</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AK">
            <xs:annotation>
              <xs:documentation>Alaska</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AL">
            <xs:annotation>
              <xs:documentation>Alabama</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AR">
            <xs:annotation>
              <xs:documentation>Arkansas</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AU_ACT">
            <xs:annotation>
              <xs:documentation>Australian Capital Territory</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AU_NSW">
            <xs:annotation>
              <xs:documentation>New South Wales</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AU_NT">
            <xs:annotation>
              <xs:documentation>Northern Territory</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AU_QLD">
            <xs:annotation>
              <xs:documentation>Queensland</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AU_SA">
            <xs:annotation>
              <xs:documentation>South Australia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AU_TAS">
            <xs:annotation>
              <xs:documentation>Tasmania</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AU_VIC">
            <xs:annotation>
              <xs:documentation>Victoria</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AU_WA">
            <xs:annotation>
              <xs:documentation>Western Australia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AZ">
            <xs:annotation>
              <xs:documentation>Arizona</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BC">
            <xs:annotation>
              <xs:documentation>British Columbia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CA">
            <xs:annotation>
              <xs:documentation>California</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CO">
            <xs:annotation>
              <xs:documentation>Colorado</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CT">
            <xs:annotation>
              <xs:documentation>Connecticut</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DC">
            <xs:annotation>
              <xs:documentation>District of Columbia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE">
            <xs:annotation>
              <xs:documentation>Delaware</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE_BB">
            <xs:annotation>
              <xs:documentation>Brandenburg</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE_BE">
            <xs:annotation>
              <xs:documentation>Berlin</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE_BW">
            <xs:annotation>
              <xs:documentation>Baden-Wuerttemberg</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE_BY">
            <xs:annotation>
              <xs:documentation>Bavaria</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE_HB">
            <xs:annotation>
              <xs:documentation>Bremen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE_HE">
            <xs:annotation>
              <xs:documentation>Hesse</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE_HH">
            <xs:annotation>
              <xs:documentation>Hamburg</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE_MV">
            <xs:annotation>
              <xs:documentation>Mecklenburg-Vorpommern</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE_NI">
            <xs:annotation>
              <xs:documentation>Lower Saxony</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE_NW">
            <xs:annotation>
              <xs:documentation>North Rhine-Westphalia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE_RP">
            <xs:annotation>
              <xs:documentation>Rhineland-Palatinate</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE_SH">
            <xs:annotation>
              <xs:documentation>Schleswig-Holstein</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE_SL">
            <xs:annotation>
              <xs:documentation>Saarland</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE_SN">
            <xs:annotation>
              <xs:documentation>Saxony</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE_ST">
            <xs:annotation>
              <xs:documentation>Saxony-Anhalt</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE_TH">
            <xs:annotation>
              <xs:documentation>Thuringia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_FL">
            <xs:annotation>
              <xs:documentation>Florida</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_FM">
            <xs:annotation>
              <xs:documentation>Federated States of Micronesia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_FR">
            <xs:annotation>
              <xs:documentation>France</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GA">
            <xs:annotation>
              <xs:documentation>Georgia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GB">
            <xs:annotation>
              <xs:documentation>United Kingdom</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GU">
            <xs:annotation>
              <xs:documentation>Guam</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HI">
            <xs:annotation>
              <xs:documentation>Hawaii</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_IA">
            <xs:annotation>
              <xs:documentation>Iowa</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ID">
            <xs:annotation>
              <xs:documentation>Idaho</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_IL">
            <xs:annotation>
              <xs:documentation>Illinois</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_IN">
            <xs:annotation>
              <xs:documentation>Indiana</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_JP">
            <xs:annotation>
              <xs:documentation>Japan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_KS">
            <xs:annotation>
              <xs:documentation>Kansas</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_KY">
            <xs:annotation>
              <xs:documentation>Kentucky</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LA">
            <xs:annotation>
              <xs:documentation>Louisiana</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MA">
            <xs:annotation>
              <xs:documentation>Massachusetts</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MB">
            <xs:annotation>
              <xs:documentation>Manitoba</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MD">
            <xs:annotation>
              <xs:documentation>Maryland</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ME">
            <xs:annotation>
              <xs:documentation>Maine</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MH">
            <xs:annotation>
              <xs:documentation>Marshall Islands</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MI">
            <xs:annotation>
              <xs:documentation>Michigan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MN">
            <xs:annotation>
              <xs:documentation>Minnesota</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MO">
            <xs:annotation>
              <xs:documentation>Missouri</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MP">
            <xs:annotation>
              <xs:documentation>Northern Mariana Islands</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MS">
            <xs:annotation>
              <xs:documentation>Mississippi</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MT">
            <xs:annotation>
              <xs:documentation>Montana</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NB">
            <xs:annotation>
              <xs:documentation>New Brunswick</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NC">
            <xs:annotation>
              <xs:documentation>North Carolina</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ND">
            <xs:annotation>
              <xs:documentation>North Dakota</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NE">
            <xs:annotation>
              <xs:documentation>Nebraska</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NH">
            <xs:annotation>
              <xs:documentation>New Hampshire</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NJ">
            <xs:annotation>
              <xs:documentation>New Jersey</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NL">
            <xs:annotation>
              <xs:documentation>Newfoundland and Labrador</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NM">
            <xs:annotation>
              <xs:documentation>New Mexico</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NS">
            <xs:annotation>
              <xs:documentation>Nova Scotia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NT">
            <xs:annotation>
              <xs:documentation>Northwest Territories</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NU">
            <xs:annotation>
              <xs:documentation>Nunavut</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NV">
            <xs:annotation>
              <xs:documentation>Nevada</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NY">
            <xs:annotation>
              <xs:documentation>New York</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_OH">
            <xs:annotation>
              <xs:documentation>Ohio</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_OK">
            <xs:annotation>
              <xs:documentation>Oklahoma</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ON">
            <xs:annotation>
              <xs:documentation>Ontario</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_OR">
            <xs:annotation>
              <xs:documentation>Oregon</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PA">
            <xs:annotation>
              <xs:documentation>Pennsylvania</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PE">
            <xs:annotation>
              <xs:documentation>Prince Edward Island</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PR">
            <xs:annotation>
              <xs:documentation>Puerto Rico</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_QC">
            <xs:annotation>
              <xs:documentation>Quebec</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_RI">
            <xs:annotation>
              <xs:documentation>Rhode Island</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SC">
            <xs:annotation>
              <xs:documentation>South Carolina</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SD">
            <xs:annotation>
              <xs:documentation>South Dakota</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SK">
            <xs:annotation>
              <xs:documentation>Saskatchewan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TN">
            <xs:annotation>
              <xs:documentation>Tennessee</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TX">
            <xs:annotation>
              <xs:documentation>Texas</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_UT">
            <xs:annotation>
              <xs:documentation>Utah</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_VA">
            <xs:annotation>
              <xs:documentation>Virginia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_VI">
            <xs:annotation>
              <xs:documentation>Virgin Islands</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_VT">
            <xs:annotation>
              <xs:documentation>Vermont</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WA">
            <xs:annotation>
              <xs:documentation>Washington</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WI">
            <xs:annotation>
              <xs:documentation>Wisconsin</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WV">
            <xs:annotation>
              <xs:documentation>West Virginia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WY">
            <xs:annotation>
              <xs:documentation>Wyoming</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_YT">
            <xs:annotation>
              <xs:documentation>Yukon</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="MaritalStatus" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Types of marital status</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_C">
            <xs:annotation>
              <xs:documentation>Domestic partner</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_D">
            <xs:annotation>
              <xs:documentation>Divorced</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_M">
            <xs:annotation>
              <xs:documentation>Married</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_P">
            <xs:annotation>
              <xs:documentation>Separated</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_S">
            <xs:annotation>
              <xs:documentation>Single</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_U">
            <xs:annotation>
              <xs:documentation>Unknown</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_W">
            <xs:annotation>
              <xs:documentation>Widowed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="NamePrefix" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Name prefixes</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_dr">
            <xs:annotation>
              <xs:documentation>Dr.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_mr">
            <xs:annotation>
              <xs:documentation>Mr.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_mrs">
            <xs:annotation>
              <xs:documentation>Mrs.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ms">
            <xs:annotation>
              <xs:documentation>Ms.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="NameSuffix" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Name suffixes</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_c_II">
            <xs:annotation>
              <xs:documentation>II</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_c_III">
            <xs:annotation>
              <xs:documentation>III</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_c_IV">
            <xs:annotation>
              <xs:documentation>IV</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_c_Ir">
            <xs:annotation>
              <xs:documentation>I</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_c_do">
            <xs:annotation>
              <xs:documentation>D.O.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_c_md">
            <xs:annotation>
              <xs:documentation>M.D.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_c_phd">
            <xs:annotation>
              <xs:documentation>PhD.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_jr">
            <xs:annotation>
              <xs:documentation>Jr.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_sr">
            <xs:annotation>
              <xs:documentation>Sr.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TaxFilingStatusType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>State-specific field</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_EMPTY_TYPELIST">
            <xs:annotation>
              <xs:documentation>This typelist has no defined elements</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AutoSync" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>The status code for auto-sync</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_Allow">
            <xs:annotation>
              <xs:documentation>Allow</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Disallow">
            <xs:annotation>
              <xs:documentation>Disallow</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Suspended">
            <xs:annotation>
              <xs:documentation>Suspended</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ReviewCategory" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Category for Service Provider Management Review questions and categories; generally, this will be extended by customers</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_general">
            <xs:annotation>
              <xs:documentation>A default category for general questions.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Address" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype typelist for entity Address</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_Address">
            <xs:annotation>
              <xs:documentation>Address</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AddressType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Types of mailing addresses</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_billing">
            <xs:annotation>
              <xs:documentation>Billing</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_business">
            <xs:annotation>
              <xs:documentation>Business</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_home">
            <xs:annotation>
              <xs:documentation>Home</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_other">
            <xs:annotation>
              <xs:documentation>Other</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Country" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>List of regions, or countries</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_AD">
            <xs:annotation>
              <xs:documentation>Andorra</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AE">
            <xs:annotation>
              <xs:documentation>United Arab Emirates</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AF">
            <xs:annotation>
              <xs:documentation>Afghanistan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AG">
            <xs:annotation>
              <xs:documentation>Antigua and Barbuda</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AI">
            <xs:annotation>
              <xs:documentation>Anguilla</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AL">
            <xs:annotation>
              <xs:documentation>Albania</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AM">
            <xs:annotation>
              <xs:documentation>Armenia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AN">
            <xs:annotation>
              <xs:documentation>Netherlands Antilles</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AO">
            <xs:annotation>
              <xs:documentation>Angola</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AQ">
            <xs:annotation>
              <xs:documentation>Antarctica</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AR">
            <xs:annotation>
              <xs:documentation>Argentina</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AS">
            <xs:annotation>
              <xs:documentation>American Samoa</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AT">
            <xs:annotation>
              <xs:documentation>Austria</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AU">
            <xs:annotation>
              <xs:documentation>Australia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AW">
            <xs:annotation>
              <xs:documentation>Aruba</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AZ">
            <xs:annotation>
              <xs:documentation>Azerbaijan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BA">
            <xs:annotation>
              <xs:documentation>Bosnia and Herzegovina</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BB">
            <xs:annotation>
              <xs:documentation>Barbados</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BD">
            <xs:annotation>
              <xs:documentation>Bangladesh</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BE">
            <xs:annotation>
              <xs:documentation>Belgium</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BF">
            <xs:annotation>
              <xs:documentation>Burkina Faso</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BG">
            <xs:annotation>
              <xs:documentation>Bulgaria</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BH">
            <xs:annotation>
              <xs:documentation>Bahrain</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BI">
            <xs:annotation>
              <xs:documentation>Burundi</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BJ">
            <xs:annotation>
              <xs:documentation>Benin</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BL">
            <xs:annotation>
              <xs:documentation>Saint Barthelemy</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BM">
            <xs:annotation>
              <xs:documentation>Bermuda</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BN">
            <xs:annotation>
              <xs:documentation>Brunei</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BO">
            <xs:annotation>
              <xs:documentation>Bolivia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BR">
            <xs:annotation>
              <xs:documentation>Brazil</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BS">
            <xs:annotation>
              <xs:documentation>Bahamas</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BT">
            <xs:annotation>
              <xs:documentation>Bhutan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BV">
            <xs:annotation>
              <xs:documentation>Bouvet Island (Bouvetoya)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BW">
            <xs:annotation>
              <xs:documentation>Botswana</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BY">
            <xs:annotation>
              <xs:documentation>Belarus</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BZ">
            <xs:annotation>
              <xs:documentation>Belize</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CA">
            <xs:annotation>
              <xs:documentation>Canada</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CC">
            <xs:annotation>
              <xs:documentation>Cocos (Keeling) Islands</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CD">
            <xs:annotation>
              <xs:documentation>Congo - Kinshasa</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CF">
            <xs:annotation>
              <xs:documentation>Central African Republic</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CG">
            <xs:annotation>
              <xs:documentation>Congo - Brazzaville</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CH">
            <xs:annotation>
              <xs:documentation>Switzerland</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CI">
            <xs:annotation>
              <xs:documentation>Ivory Coast</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CK">
            <xs:annotation>
              <xs:documentation>Cook Islands</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CL">
            <xs:annotation>
              <xs:documentation>Chile</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CM">
            <xs:annotation>
              <xs:documentation>Cameroon</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CN">
            <xs:annotation>
              <xs:documentation>China</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CO">
            <xs:annotation>
              <xs:documentation>Colombia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CR">
            <xs:annotation>
              <xs:documentation>Costa Rica</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CU">
            <xs:annotation>
              <xs:documentation>Cuba</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CV">
            <xs:annotation>
              <xs:documentation>Cape Verde</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CX">
            <xs:annotation>
              <xs:documentation>Christmas Island</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CY">
            <xs:annotation>
              <xs:documentation>Cyprus</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CZ">
            <xs:annotation>
              <xs:documentation>Czech Republic</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE">
            <xs:annotation>
              <xs:documentation>Germany</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DJ">
            <xs:annotation>
              <xs:documentation>Djibouti</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DK">
            <xs:annotation>
              <xs:documentation>Denmark</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DM">
            <xs:annotation>
              <xs:documentation>Dominica</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DO">
            <xs:annotation>
              <xs:documentation>Dominican Republic</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DZ">
            <xs:annotation>
              <xs:documentation>Algeria</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_EC">
            <xs:annotation>
              <xs:documentation>Ecuador</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_EE">
            <xs:annotation>
              <xs:documentation>Estonia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_EG">
            <xs:annotation>
              <xs:documentation>Egypt</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_EH">
            <xs:annotation>
              <xs:documentation>Western Sahara</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ER">
            <xs:annotation>
              <xs:documentation>Eritrea</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ES">
            <xs:annotation>
              <xs:documentation>Spain</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ET">
            <xs:annotation>
              <xs:documentation>Ethiopia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_FI">
            <xs:annotation>
              <xs:documentation>Finland</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_FJ">
            <xs:annotation>
              <xs:documentation>Fiji, Republic of the Fiji Islands</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_FK">
            <xs:annotation>
              <xs:documentation>Falkland Islands (Malvinas)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_FM">
            <xs:annotation>
              <xs:documentation>Micronesia, Federated States of</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_FO">
            <xs:annotation>
              <xs:documentation>Faroe Islands</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_FR">
            <xs:annotation>
              <xs:documentation>France</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GA">
            <xs:annotation>
              <xs:documentation>Gabon</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GB">
            <xs:annotation>
              <xs:documentation>United Kingdom</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GD">
            <xs:annotation>
              <xs:documentation>Grenada</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GE">
            <xs:annotation>
              <xs:documentation>Georgia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GF">
            <xs:annotation>
              <xs:documentation>French Guiana</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GH">
            <xs:annotation>
              <xs:documentation>Ghana</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GI">
            <xs:annotation>
              <xs:documentation>Gibraltar</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GL">
            <xs:annotation>
              <xs:documentation>Greenland</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GM">
            <xs:annotation>
              <xs:documentation>Gambia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GN">
            <xs:annotation>
              <xs:documentation>Guinea</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GP">
            <xs:annotation>
              <xs:documentation>Guadeloupe</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GQ">
            <xs:annotation>
              <xs:documentation>Equatorial Guinea</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GR">
            <xs:annotation>
              <xs:documentation>Greece</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GS">
            <xs:annotation>
              <xs:documentation>South Georgia and the South Sandwich Islands</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GT">
            <xs:annotation>
              <xs:documentation>Guatemala</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GU">
            <xs:annotation>
              <xs:documentation>Guam</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GW">
            <xs:annotation>
              <xs:documentation>Guinea-Bissau</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GY">
            <xs:annotation>
              <xs:documentation>Guyana</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HK">
            <xs:annotation>
              <xs:documentation>Hong Kong SAR China</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HM">
            <xs:annotation>
              <xs:documentation>Heard and McDonald Islands</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HN">
            <xs:annotation>
              <xs:documentation>Honduras</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HR">
            <xs:annotation>
              <xs:documentation>Croatia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HT">
            <xs:annotation>
              <xs:documentation>Haiti</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HU">
            <xs:annotation>
              <xs:documentation>Hungary</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ID">
            <xs:annotation>
              <xs:documentation>Indonesia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_IE">
            <xs:annotation>
              <xs:documentation>Ireland</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_IL">
            <xs:annotation>
              <xs:documentation>Israel</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_IN">
            <xs:annotation>
              <xs:documentation>India</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_IO">
            <xs:annotation>
              <xs:documentation>British Indian Ocean Territory (Chagos Archipelago)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_IQ">
            <xs:annotation>
              <xs:documentation>Iraq</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_IR">
            <xs:annotation>
              <xs:documentation>Iran</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_IS">
            <xs:annotation>
              <xs:documentation>Iceland</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_IT">
            <xs:annotation>
              <xs:documentation>Italy</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_JM">
            <xs:annotation>
              <xs:documentation>Jamaica</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_JO">
            <xs:annotation>
              <xs:documentation>Jordan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_JP">
            <xs:annotation>
              <xs:documentation>Japan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_KE">
            <xs:annotation>
              <xs:documentation>Kenya</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_KG">
            <xs:annotation>
              <xs:documentation>Kyrgyz Republic</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_KH">
            <xs:annotation>
              <xs:documentation>Cambodia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_KI">
            <xs:annotation>
              <xs:documentation>Kiribati</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_KM">
            <xs:annotation>
              <xs:documentation>Comoros</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_KN">
            <xs:annotation>
              <xs:documentation>St. Kitts and Nevis</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_KP">
            <xs:annotation>
              <xs:documentation>Korea, North</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_KR">
            <xs:annotation>
              <xs:documentation>Korea, South</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_KW">
            <xs:annotation>
              <xs:documentation>Kuwait</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_KY">
            <xs:annotation>
              <xs:documentation>Cayman Islands</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_KZ">
            <xs:annotation>
              <xs:documentation>Kazakhstan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LA">
            <xs:annotation>
              <xs:documentation>Laos</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LB">
            <xs:annotation>
              <xs:documentation>Lebanon</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LC">
            <xs:annotation>
              <xs:documentation>St. Lucia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LI">
            <xs:annotation>
              <xs:documentation>Liechtenstein</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LK">
            <xs:annotation>
              <xs:documentation>Sri Lanka</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LR">
            <xs:annotation>
              <xs:documentation>Liberia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LS">
            <xs:annotation>
              <xs:documentation>Lesotho</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LT">
            <xs:annotation>
              <xs:documentation>Lithuania</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LU">
            <xs:annotation>
              <xs:documentation>Luxembourg</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LV">
            <xs:annotation>
              <xs:documentation>Latvia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LY">
            <xs:annotation>
              <xs:documentation>Libya</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MA">
            <xs:annotation>
              <xs:documentation>Morocco</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MC">
            <xs:annotation>
              <xs:documentation>Monaco</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MD">
            <xs:annotation>
              <xs:documentation>Moldova</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ME">
            <xs:annotation>
              <xs:documentation>Montenegro</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MF">
            <xs:annotation>
              <xs:documentation>Saint Martin</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MG">
            <xs:annotation>
              <xs:documentation>Madagascar</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MH">
            <xs:annotation>
              <xs:documentation>Marshall Islands</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MK">
            <xs:annotation>
              <xs:documentation>Macedonia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ML">
            <xs:annotation>
              <xs:documentation>Mali</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MM">
            <xs:annotation>
              <xs:documentation>Myanmar [Burma]</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MN">
            <xs:annotation>
              <xs:documentation>Mongolia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MO">
            <xs:annotation>
              <xs:documentation>Macau SAR China</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MP">
            <xs:annotation>
              <xs:documentation>Northern Mariana Islands</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MQ">
            <xs:annotation>
              <xs:documentation>Martinique</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MR">
            <xs:annotation>
              <xs:documentation>Mauritania</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MS">
            <xs:annotation>
              <xs:documentation>Montserrat</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MT">
            <xs:annotation>
              <xs:documentation>Malta</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MU">
            <xs:annotation>
              <xs:documentation>Mauritius</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MV">
            <xs:annotation>
              <xs:documentation>Maldives</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MW">
            <xs:annotation>
              <xs:documentation>Malawi</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MX">
            <xs:annotation>
              <xs:documentation>Mexico</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MY">
            <xs:annotation>
              <xs:documentation>Malaysia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MZ">
            <xs:annotation>
              <xs:documentation>Mozambique</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NA">
            <xs:annotation>
              <xs:documentation>Namibia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NC">
            <xs:annotation>
              <xs:documentation>New Caledonia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NE">
            <xs:annotation>
              <xs:documentation>Niger</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NF">
            <xs:annotation>
              <xs:documentation>Norfolk Island</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NG">
            <xs:annotation>
              <xs:documentation>Nigeria</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NI">
            <xs:annotation>
              <xs:documentation>Nicaragua</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NL">
            <xs:annotation>
              <xs:documentation>Netherlands</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NO">
            <xs:annotation>
              <xs:documentation>Norway</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NP">
            <xs:annotation>
              <xs:documentation>Nepal</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NR">
            <xs:annotation>
              <xs:documentation>Nauru</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NU">
            <xs:annotation>
              <xs:documentation>Niue</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NZ">
            <xs:annotation>
              <xs:documentation>New Zealand</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_OM">
            <xs:annotation>
              <xs:documentation>Oman</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PA">
            <xs:annotation>
              <xs:documentation>Panama</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PE">
            <xs:annotation>
              <xs:documentation>Peru</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PF">
            <xs:annotation>
              <xs:documentation>French Polynesia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PG">
            <xs:annotation>
              <xs:documentation>Papua New Guinea</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PH">
            <xs:annotation>
              <xs:documentation>Philippines</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PK">
            <xs:annotation>
              <xs:documentation>Pakistan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PL">
            <xs:annotation>
              <xs:documentation>Poland</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PM">
            <xs:annotation>
              <xs:documentation>St. Pierre and Miquelon</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PN">
            <xs:annotation>
              <xs:documentation>Pitcairn Island</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PR">
            <xs:annotation>
              <xs:documentation>Puerto Rico</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PS">
            <xs:annotation>
              <xs:documentation>Palestinian Interim Self-Government Authority</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PT">
            <xs:annotation>
              <xs:documentation>Portugal</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PW">
            <xs:annotation>
              <xs:documentation>Palau</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PY">
            <xs:annotation>
              <xs:documentation>Paraguay</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_QA">
            <xs:annotation>
              <xs:documentation>Qatar</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_RE">
            <xs:annotation>
              <xs:documentation>Reunion</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_RO">
            <xs:annotation>
              <xs:documentation>Romania</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_RS">
            <xs:annotation>
              <xs:documentation>Serbia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_RU">
            <xs:annotation>
              <xs:documentation>Russia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_RW">
            <xs:annotation>
              <xs:documentation>Rwanda</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SA">
            <xs:annotation>
              <xs:documentation>Saudi Arabia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SB">
            <xs:annotation>
              <xs:documentation>Solomon Islands</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SC">
            <xs:annotation>
              <xs:documentation>Seychelles</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SD">
            <xs:annotation>
              <xs:documentation>Sudan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SE">
            <xs:annotation>
              <xs:documentation>Sweden</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SG">
            <xs:annotation>
              <xs:documentation>Singapore</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SH">
            <xs:annotation>
              <xs:documentation>St. Helena</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SI">
            <xs:annotation>
              <xs:documentation>Slovenia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SJ">
            <xs:annotation>
              <xs:documentation>Svalbard and Jan Mayen Islands</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SK">
            <xs:annotation>
              <xs:documentation>Slovakia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SL">
            <xs:annotation>
              <xs:documentation>Sierra Leone</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SM">
            <xs:annotation>
              <xs:documentation>San Marino</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SN">
            <xs:annotation>
              <xs:documentation>Senegal</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SO">
            <xs:annotation>
              <xs:documentation>Somalia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SR">
            <xs:annotation>
              <xs:documentation>Suriname</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ST">
            <xs:annotation>
              <xs:documentation>Sao Tome and Principe</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SV">
            <xs:annotation>
              <xs:documentation>El Salvador</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SY">
            <xs:annotation>
              <xs:documentation>Syria</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SZ">
            <xs:annotation>
              <xs:documentation>Swaziland</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TC">
            <xs:annotation>
              <xs:documentation>Turks and Caicos Islands</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TD">
            <xs:annotation>
              <xs:documentation>Chad</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TF">
            <xs:annotation>
              <xs:documentation>French Southern Territories</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TG">
            <xs:annotation>
              <xs:documentation>Togo</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TH">
            <xs:annotation>
              <xs:documentation>Thailand</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TJ">
            <xs:annotation>
              <xs:documentation>Tajikistan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TK">
            <xs:annotation>
              <xs:documentation>Tokelau (Tokelau Islands)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TL">
            <xs:annotation>
              <xs:documentation>Timor-Leste</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TM">
            <xs:annotation>
              <xs:documentation>Turkmenistan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TN">
            <xs:annotation>
              <xs:documentation>Tunisia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TO">
            <xs:annotation>
              <xs:documentation>Tonga</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TR">
            <xs:annotation>
              <xs:documentation>Turkey</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TT">
            <xs:annotation>
              <xs:documentation>Trinidad and Tobago</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TV">
            <xs:annotation>
              <xs:documentation>Tuvalu</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TW">
            <xs:annotation>
              <xs:documentation>Taiwan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TZ">
            <xs:annotation>
              <xs:documentation>Tanzania</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_UA">
            <xs:annotation>
              <xs:documentation>Ukraine</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_UG">
            <xs:annotation>
              <xs:documentation>Uganda</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_UM">
            <xs:annotation>
              <xs:documentation>U.S. Minor Outlying Islands</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_US">
            <xs:annotation>
              <xs:documentation>United States</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_UY">
            <xs:annotation>
              <xs:documentation>Uruguay</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_UZ">
            <xs:annotation>
              <xs:documentation>Uzbekistan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_VA">
            <xs:annotation>
              <xs:documentation>Vatican City</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_VC">
            <xs:annotation>
              <xs:documentation>St. Vincent and the Grenadines</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_VE">
            <xs:annotation>
              <xs:documentation>Venezuela</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_VG">
            <xs:annotation>
              <xs:documentation>British Virgin Islands</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_VI">
            <xs:annotation>
              <xs:documentation>U.S. Virgin Islands</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_VN">
            <xs:annotation>
              <xs:documentation>Vietnam</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_VU">
            <xs:annotation>
              <xs:documentation>Vanuatu</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WF">
            <xs:annotation>
              <xs:documentation>Wallis and Futuna Islands</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WS">
            <xs:annotation>
              <xs:documentation>Samoa</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_YE">
            <xs:annotation>
              <xs:documentation>Yemen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_YT">
            <xs:annotation>
              <xs:documentation>Mayotte</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ZA">
            <xs:annotation>
              <xs:documentation>South Africa</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ZM">
            <xs:annotation>
              <xs:documentation>Zambia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ZW">
            <xs:annotation>
              <xs:documentation>Zimbabwe</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_unknown">
            <xs:annotation>
              <xs:documentation>Placeholder typecode for fields that should be populated with another Country</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="GeocodeStatus" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Describes the status of a geocode on an Address: customers may modify it for different geocoding providers.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_city">
            <xs:annotation>
              <xs:documentation>The Geocoding service was only able to locate the city from the supplied address.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_exact">
            <xs:annotation>
              <xs:documentation>The Geocoding service was able to find an exact match for the supplied address.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_failure">
            <xs:annotation>
              <xs:documentation>The Geocoding service was unable to geocode the address.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_none">
            <xs:annotation>
              <xs:documentation>An Address has never been submitted for geocoding.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_postalcode">
            <xs:annotation>
              <xs:documentation>The Geocoding service was only able to locate the postal code from the supplied address.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_street">
            <xs:annotation>
              <xs:documentation>The Geocoding service was only able to locate the street from the supplied address.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="State" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_AB">
            <xs:annotation>
              <xs:documentation>Alberta</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AK">
            <xs:annotation>
              <xs:documentation>Alaska</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AL">
            <xs:annotation>
              <xs:documentation>Alabama</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AR">
            <xs:annotation>
              <xs:documentation>Arkansas</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AU_ACT">
            <xs:annotation>
              <xs:documentation>Australian Capital Territory</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AU_JBT">
            <xs:annotation>
              <xs:documentation>Jervis Bay Territory</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AU_NSW">
            <xs:annotation>
              <xs:documentation>New South Wales</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AU_NT">
            <xs:annotation>
              <xs:documentation>Northern Territory</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AU_QLD">
            <xs:annotation>
              <xs:documentation>Queensland</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AU_SA">
            <xs:annotation>
              <xs:documentation>South Australia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AU_TAS">
            <xs:annotation>
              <xs:documentation>Tasmania</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AU_VIC">
            <xs:annotation>
              <xs:documentation>Victoria</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AU_WA">
            <xs:annotation>
              <xs:documentation>Western Australia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AZ">
            <xs:annotation>
              <xs:documentation>Arizona</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Aichi">
            <xs:annotation>
              <xs:documentation>Aichi</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Akita">
            <xs:annotation>
              <xs:documentation>Akita</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Aomori">
            <xs:annotation>
              <xs:documentation>Aomori</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BC">
            <xs:annotation>
              <xs:documentation>British Columbia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CA">
            <xs:annotation>
              <xs:documentation>California</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CO">
            <xs:annotation>
              <xs:documentation>Colorado</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CT">
            <xs:annotation>
              <xs:documentation>Connecticut</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Chiba">
            <xs:annotation>
              <xs:documentation>Chiba</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DC">
            <xs:annotation>
              <xs:documentation>District of Columbia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE">
            <xs:annotation>
              <xs:documentation>Delaware</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE_BB">
            <xs:annotation>
              <xs:documentation>Brandenburg</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE_BE">
            <xs:annotation>
              <xs:documentation>Berlin</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE_BW">
            <xs:annotation>
              <xs:documentation>Baden-Wuerttemberg</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE_BY">
            <xs:annotation>
              <xs:documentation>Bavaria</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE_HB">
            <xs:annotation>
              <xs:documentation>Bremen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE_HE">
            <xs:annotation>
              <xs:documentation>Hesse</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE_HH">
            <xs:annotation>
              <xs:documentation>Hamburg</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE_MV">
            <xs:annotation>
              <xs:documentation>Mecklenburg-Vorpommern</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE_NI">
            <xs:annotation>
              <xs:documentation>Lower Saxony</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE_NW">
            <xs:annotation>
              <xs:documentation>North Rhine-Westphalia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE_RP">
            <xs:annotation>
              <xs:documentation>Rhineland-Palatinate</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE_SH">
            <xs:annotation>
              <xs:documentation>Schleswig-Holstein</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE_SL">
            <xs:annotation>
              <xs:documentation>Saarland</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE_SN">
            <xs:annotation>
              <xs:documentation>Saxony</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE_ST">
            <xs:annotation>
              <xs:documentation>Saxony-Anhalt</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE_TH">
            <xs:annotation>
              <xs:documentation>Thuringia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Ehime">
            <xs:annotation>
              <xs:documentation>Ehime</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_FL">
            <xs:annotation>
              <xs:documentation>Florida</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_FM">
            <xs:annotation>
              <xs:documentation>Federated States of Micronesia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Fukui">
            <xs:annotation>
              <xs:documentation>Fukui</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Fukuoka">
            <xs:annotation>
              <xs:documentation>Fukuoka</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Fukushima">
            <xs:annotation>
              <xs:documentation>Fukushima</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GA">
            <xs:annotation>
              <xs:documentation>Georgia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GU">
            <xs:annotation>
              <xs:documentation>Guam</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Gifu">
            <xs:annotation>
              <xs:documentation>Gifu</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Gumma">
            <xs:annotation>
              <xs:documentation>Gumma</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HI">
            <xs:annotation>
              <xs:documentation>Hawaii</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Hiroshima">
            <xs:annotation>
              <xs:documentation>Hiroshima</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Hokkaido">
            <xs:annotation>
              <xs:documentation>Hokkaido</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Hyogo">
            <xs:annotation>
              <xs:documentation>Hyogo</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_IA">
            <xs:annotation>
              <xs:documentation>Iowa</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ID">
            <xs:annotation>
              <xs:documentation>Idaho</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_IL">
            <xs:annotation>
              <xs:documentation>Illinois</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_IN">
            <xs:annotation>
              <xs:documentation>Indiana</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Ibaraki">
            <xs:annotation>
              <xs:documentation>Ibaraki</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Ishikawa">
            <xs:annotation>
              <xs:documentation>Ishikawa</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Iwate">
            <xs:annotation>
              <xs:documentation>Iwate</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_KS">
            <xs:annotation>
              <xs:documentation>Kansas</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_KY">
            <xs:annotation>
              <xs:documentation>Kentucky</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Kagawa">
            <xs:annotation>
              <xs:documentation>Kagawa</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Kagoshima">
            <xs:annotation>
              <xs:documentation>Kagoshima</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Kanagawa">
            <xs:annotation>
              <xs:documentation>Kanagawa</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Kochi">
            <xs:annotation>
              <xs:documentation>Kochi</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Kumamoto">
            <xs:annotation>
              <xs:documentation>Kumamoto</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Kyoto">
            <xs:annotation>
              <xs:documentation>Kyoto</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LA">
            <xs:annotation>
              <xs:documentation>Louisiana</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MA">
            <xs:annotation>
              <xs:documentation>Massachusetts</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MB">
            <xs:annotation>
              <xs:documentation>Manitoba</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MD">
            <xs:annotation>
              <xs:documentation>Maryland</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ME">
            <xs:annotation>
              <xs:documentation>Maine</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MH">
            <xs:annotation>
              <xs:documentation>Marshall Islands</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MI">
            <xs:annotation>
              <xs:documentation>Michigan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MN">
            <xs:annotation>
              <xs:documentation>Minnesota</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MO">
            <xs:annotation>
              <xs:documentation>Missouri</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MP">
            <xs:annotation>
              <xs:documentation>Northern Mariana Islands</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MS">
            <xs:annotation>
              <xs:documentation>Mississippi</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MT">
            <xs:annotation>
              <xs:documentation>Montana</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Mie">
            <xs:annotation>
              <xs:documentation>Mie</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Miyagi">
            <xs:annotation>
              <xs:documentation>Miyagi</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Miyazaki">
            <xs:annotation>
              <xs:documentation>Miyazaki</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NB">
            <xs:annotation>
              <xs:documentation>New Brunswick</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NC">
            <xs:annotation>
              <xs:documentation>North Carolina</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ND">
            <xs:annotation>
              <xs:documentation>North Dakota</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NE">
            <xs:annotation>
              <xs:documentation>Nebraska</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NH">
            <xs:annotation>
              <xs:documentation>New Hampshire</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NJ">
            <xs:annotation>
              <xs:documentation>New Jersey</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NL">
            <xs:annotation>
              <xs:documentation>Newfoundland and Labrador</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NM">
            <xs:annotation>
              <xs:documentation>New Mexico</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NS">
            <xs:annotation>
              <xs:documentation>Nova Scotia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NT">
            <xs:annotation>
              <xs:documentation>Northwest Territories</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NU">
            <xs:annotation>
              <xs:documentation>Nunavut</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NV">
            <xs:annotation>
              <xs:documentation>Nevada</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NY">
            <xs:annotation>
              <xs:documentation>New York</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Nagano">
            <xs:annotation>
              <xs:documentation>Nagano</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Nagasaki">
            <xs:annotation>
              <xs:documentation>Nagasaki</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Nara">
            <xs:annotation>
              <xs:documentation>Nara</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Niigata">
            <xs:annotation>
              <xs:documentation>Niigata</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_OH">
            <xs:annotation>
              <xs:documentation>Ohio</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_OK">
            <xs:annotation>
              <xs:documentation>Oklahoma</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ON">
            <xs:annotation>
              <xs:documentation>Ontario</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_OR">
            <xs:annotation>
              <xs:documentation>Oregon</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Oita">
            <xs:annotation>
              <xs:documentation>Oita</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Okayama">
            <xs:annotation>
              <xs:documentation>Okayama</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Okinawa">
            <xs:annotation>
              <xs:documentation>Okinawa</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Osaka">
            <xs:annotation>
              <xs:documentation>Osaka</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PA">
            <xs:annotation>
              <xs:documentation>Pennsylvania</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PE">
            <xs:annotation>
              <xs:documentation>Prince Edward Island</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PR">
            <xs:annotation>
              <xs:documentation>Puerto Rico</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_QC">
            <xs:annotation>
              <xs:documentation>Quebec</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_RI">
            <xs:annotation>
              <xs:documentation>Rhode Island</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SC">
            <xs:annotation>
              <xs:documentation>South Carolina</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SD">
            <xs:annotation>
              <xs:documentation>South Dakota</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SK">
            <xs:annotation>
              <xs:documentation>Saskatchewan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Saga">
            <xs:annotation>
              <xs:documentation>Saga</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Saitama">
            <xs:annotation>
              <xs:documentation>Saitama</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Shiga">
            <xs:annotation>
              <xs:documentation>Shiga</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Shimane">
            <xs:annotation>
              <xs:documentation>Shimane</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Shizuoka">
            <xs:annotation>
              <xs:documentation>Shizuoka</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TN">
            <xs:annotation>
              <xs:documentation>Tennessee</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TX">
            <xs:annotation>
              <xs:documentation>Texas</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Tochigi">
            <xs:annotation>
              <xs:documentation>Tochigi</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Tokushima">
            <xs:annotation>
              <xs:documentation>Tokushima</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Tokyo">
            <xs:annotation>
              <xs:documentation>Tokyo</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Tottori">
            <xs:annotation>
              <xs:documentation>Tottori</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Toyama">
            <xs:annotation>
              <xs:documentation>Toyama</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_UT">
            <xs:annotation>
              <xs:documentation>Utah</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_VA">
            <xs:annotation>
              <xs:documentation>Virginia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_VI">
            <xs:annotation>
              <xs:documentation>Virgin Islands</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_VT">
            <xs:annotation>
              <xs:documentation>Vermont</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WA">
            <xs:annotation>
              <xs:documentation>Washington</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WI">
            <xs:annotation>
              <xs:documentation>Wisconsin</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WV">
            <xs:annotation>
              <xs:documentation>West Virginia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WY">
            <xs:annotation>
              <xs:documentation>Wyoming</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Wakayama">
            <xs:annotation>
              <xs:documentation>Wakayama</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_YT">
            <xs:annotation>
              <xs:documentation>Yukon</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Yamagata">
            <xs:annotation>
              <xs:documentation>Yamagata</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Yamaguchi">
            <xs:annotation>
              <xs:documentation>Yamaguchi</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Yamanashi">
            <xs:annotation>
              <xs:documentation>Yamanashi</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="OfficialID" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype typelist for entity OfficialID</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_OfficialID">
            <xs:annotation>
              <xs:documentation>OfficialID</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="OfficialIDType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Type of official id (i.e. SSN, FEIN, State Tax, State Unemployment, etc)</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_BureauID">
            <xs:annotation>
              <xs:documentation>Bureau ID</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DOLID">
            <xs:annotation>
              <xs:documentation>Dept of Labor ID</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DUNS">
            <xs:annotation>
              <xs:documentation>Dun &amp; Bradstreet Number</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_FEIN">
            <xs:annotation>
              <xs:documentation>Federal Employer Identification Number</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NCCIID">
            <xs:annotation>
              <xs:documentation>Bureau ID</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SSN">
            <xs:annotation>
              <xs:documentation>Social Security Number</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_STAX">
            <xs:annotation>
              <xs:documentation>State Tax Identification Number</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_STUN">
            <xs:annotation>
              <xs:documentation>State Unemployment Identification Number</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TUNS">
            <xs:annotation>
              <xs:documentation>Temporary Dun &amp; Bradstreet Number</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Currency" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Types of Currencies.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_aud">
            <xs:annotation>
              <xs:documentation>Australian Dollar</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_cad">
            <xs:annotation>
              <xs:documentation>Canadian Dollar</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_eur">
            <xs:annotation>
              <xs:documentation>Euro</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_gbp">
            <xs:annotation>
              <xs:documentation>United Kingdom Pound</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_jpy">
            <xs:annotation>
              <xs:documentation>Japanese Yen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_rub">
            <xs:annotation>
              <xs:documentation>Russian Ruble</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_usd">
            <xs:annotation>
              <xs:documentation>US Dollar</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="LanguageType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Users' preferred languages</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_en_US">
            <xs:annotation>
              <xs:documentation>English (US)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="LocaleType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Users' preferred languages</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_de_DE">
            <xs:annotation>
              <xs:documentation>Germany (German)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_en_AU">
            <xs:annotation>
              <xs:documentation>Australia (English)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_en_CA">
            <xs:annotation>
              <xs:documentation>Canada (English)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_en_GB">
            <xs:annotation>
              <xs:documentation>Great Britain (English)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_en_US">
            <xs:annotation>
              <xs:documentation>United States (English)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_fr_CA">
            <xs:annotation>
              <xs:documentation>Canada (French)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_fr_FR">
            <xs:annotation>
              <xs:documentation>France (French)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ja_JP">
            <xs:annotation>
              <xs:documentation>Japan (Japanese)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PrimaryPhoneType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Types of phone numbers</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_home">
            <xs:annotation>
              <xs:documentation>Home</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_mobile">
            <xs:annotation>
              <xs:documentation>Mobile</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_work">
            <xs:annotation>
              <xs:documentation>Work</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ContactRel" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Types of relationships a contact can have with another contact</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_collectionagency">
            <xs:annotation>
              <xs:documentation>Collection Agency</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_employer">
            <xs:annotation>
              <xs:documentation>Employer</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_guardian">
            <xs:annotation>
              <xs:documentation>Parent of a child or Guardian of a ward.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_primarycontact">
            <xs:annotation>
              <xs:documentation>Primary contact</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_thirdpartyinsurer">
            <xs:annotation>
              <xs:documentation>Third-Party Insurer</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ContactTagType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Types of contact tags</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_claimparty">
            <xs:annotation>
              <xs:documentation>Claim Party</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_client">
            <xs:annotation>
              <xs:documentation>Client</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_vendor">
            <xs:annotation>
              <xs:documentation>Vendor</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TaxStatus" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>The status of a vendor's tax ID</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_confirmed">
            <xs:annotation>
              <xs:documentation>Known and verified</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_unconfirmed">
            <xs:annotation>
              <xs:documentation>Known, but not yet verified</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_unknown">
            <xs:annotation>
              <xs:documentation>Unknown</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="VendorType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Types of vendors</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_EMPTY_TYPELIST">
            <xs:annotation>
              <xs:documentation>This typelist has no defined elements</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PolicyPeriodRole" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Defines the different roles a contact can have on a policy period</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_additionalinterest">
            <xs:annotation>
              <xs:documentation>Additional Interest</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_additionalnamedins">
            <xs:annotation>
              <xs:documentation>Additional Named Insured</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_primaryinsured">
            <xs:annotation>
              <xs:documentation>The primary insured on the policy period. A policy period may have at most one primary insured.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PolicyRole" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Defines the roles a producer code can have on a policy</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_primary">
            <xs:annotation>
              <xs:documentation>The primary producer code for the policy.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_referrer">
            <xs:annotation>
              <xs:documentation>Referrer</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_secondary">
            <xs:annotation>
              <xs:documentation>Secondary</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="LOBCode" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Defines the lines of business to which a policy may belong</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_BusinessAuto">
            <xs:annotation>
              <xs:documentation>Business Auto</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BusinessOwners">
            <xs:annotation>
              <xs:documentation>Business Owners</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CommercialPackage">
            <xs:annotation>
              <xs:documentation>Commercial Package</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CommercialProperty">
            <xs:annotation>
              <xs:documentation>Commercial Property</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GeneralLiability">
            <xs:annotation>
              <xs:documentation>General Liability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Homeowners">
            <xs:annotation>
              <xs:documentation>Homeowners</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_InlandMarine">
            <xs:annotation>
              <xs:documentation>Inland Marine</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PersonalAuto">
            <xs:annotation>
              <xs:documentation>Personal Auto</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WorkersComp">
            <xs:annotation>
              <xs:documentation>Workers' Compensation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_cpp">
            <xs:annotation>
              <xs:documentation>CPP</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="UserAttributeType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Major categories of attributes</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_default">
            <xs:annotation>
              <xs:documentation>Default</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AuthorityLimitType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Types of authority limits</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_accountcreditcollections">
            <xs:annotation>
              <xs:documentation>Account level collections credit transaction</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_accountcreditcollectionsreversal">
            <xs:annotation>
              <xs:documentation>Account level collections credit transaction reversal</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_accountcreditgoodwill">
            <xs:annotation>
              <xs:documentation>Account level goodwill credit transaction</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_accountcreditgoodwillreversal">
            <xs:annotation>
              <xs:documentation>Account level goodwill credit transaction reversal</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_accountcreditinterest">
            <xs:annotation>
              <xs:documentation>Account level interest credit transaction</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_accountcreditinterestreversal">
            <xs:annotation>
              <xs:documentation>Account level interest credit transaction reversal</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_accountcreditother">
            <xs:annotation>
              <xs:documentation>Account level other credit transaction</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_accountcreditotherreversal">
            <xs:annotation>
              <xs:documentation>Account level other credit transaction reversal</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_advancecommission">
            <xs:annotation>
              <xs:documentation>Create an advance commission payment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_approvedisbursement">
            <xs:annotation>
              <xs:documentation>Approve a disbursement</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_bonuscommission">
            <xs:annotation>
              <xs:documentation>Create a bonus commission payment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_feereversal">
            <xs:annotation>
              <xs:documentation>Fee Reversal</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_negativewriteoff">
            <xs:annotation>
              <xs:documentation>Create a negative writeoff</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_negwtoffagbillchrg">
            <xs:annotation>
              <xs:documentation>Create an Agency Bill negative writeoff from a charge due t-account</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_negwtoffagbillcmsn">
            <xs:annotation>
              <xs:documentation>Create an Agency Bill negative writeoff from a commission t-account</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_negwtoffagbillprodunap">
            <xs:annotation>
              <xs:documentation>Create an Agency Bill negative writeoff from the Producer Unapplied t-account</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_negwtoffreversal">
            <xs:annotation>
              <xs:documentation>Nevative Writeoff Reversal</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_producercashtopayabletransfer">
            <xs:annotation>
              <xs:documentation>Producer CommissionsPayable to Producer Cash Transfer transaction</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_producerpayabletransfer">
            <xs:annotation>
              <xs:documentation>Producer CommissionsPayable Transfer transaction</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_reversecharge">
            <xs:annotation>
              <xs:documentation>Reverse a charge</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_transfer">
            <xs:annotation>
              <xs:documentation>Transfer funds</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_writeoff">
            <xs:annotation>
              <xs:documentation>Create a writeoff</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_writeoffagbillchrg">
            <xs:annotation>
              <xs:documentation>Create an Agency Bill writeoff from a charge due t-account</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_writeoffagbillcmsn">
            <xs:annotation>
              <xs:documentation>Create an Agency Bill writeoff from a commission t-account</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_writeoffagbillprodunap">
            <xs:annotation>
              <xs:documentation>Create an Agency Bill writeoff from the Producer Unapplied t-account</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_writeoffchargecommission">
            <xs:annotation>
              <xs:documentation>Create a Commission Writeoff for a Charge</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_writeoffitemcommission">
            <xs:annotation>
              <xs:documentation>Writeoff an Item Commission's unsettled commission amount.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_writoeffitemgross">
            <xs:annotation>
              <xs:documentation>Writeoff an Invoice Item's unsettled gross amount.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_wtoffreversal">
            <xs:annotation>
              <xs:documentation>Writeoff Reversal</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_xferfundsreversal">
            <xs:annotation>
              <xs:documentation>Transfer Funds Refersal</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="UserExperienceType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Experience levels for users</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_EMPTY_TYPELIST">
            <xs:annotation>
              <xs:documentation>This typelist has no defined elements</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="UserRole" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Roles users can have</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_Underwriter">
            <xs:annotation>
              <xs:documentation>Underwriter</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_UnderwriterAssist">
            <xs:annotation>
              <xs:documentation>Underwriter assistant</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SystemPermissionType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Defines all permissions that can be granted to users via privileges and roles.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_abcreate">
            <xs:annotation>
              <xs:documentation>Permission to create a new contact in the address book</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_abcreatepref">
            <xs:annotation>
              <xs:documentation>Permission to add a preferred vendor to the address book</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_abdelete">
            <xs:annotation>
              <xs:documentation>Permission to delete an existing contact in the address book</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_abdeletepref">
            <xs:annotation>
              <xs:documentation>Permission to delete an existing preferred vendor address book entry</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_abedit">
            <xs:annotation>
              <xs:documentation>Permission to edit an existing contact in the address book</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_abeditpref">
            <xs:annotation>
              <xs:documentation>Permission to modify an existing preferred vendor address book entry</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_abview">
            <xs:annotation>
              <xs:documentation>Permission to view and search contact entries in the address book</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_abviewsearch">
            <xs:annotation>
              <xs:documentation>Permission to search contact entries in the address book</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_acctbillall">
            <xs:annotation>
              <xs:documentation>Permission to bill all contracted amounts for a customer account</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_acctbillplanedit">
            <xs:annotation>
              <xs:documentation>Permission to change a customer's existing billing plan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_acctchargesview">
            <xs:annotation>
              <xs:documentation>Permission to view Accounts | Charges screen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_acctclose">
            <xs:annotation>
              <xs:documentation>Permission to close an account</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_acctcntcreate">
            <xs:annotation>
              <xs:documentation>Permission to add a new contact to an account</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_acctcntdelete">
            <xs:annotation>
              <xs:documentation>Permission to remove a contact from an account</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_acctcntedit">
            <xs:annotation>
              <xs:documentation>Permission to edit information on an account contact</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_acctcollview">
            <xs:annotation>
              <xs:documentation>Permission to view Accounts | Collateral screen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_acctcontview">
            <xs:annotation>
              <xs:documentation>Permission to view Accounts | Contacts screen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_acctcreate">
            <xs:annotation>
              <xs:documentation>Permission to create an account</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_acctdelview">
            <xs:annotation>
              <xs:documentation>Permission to view Accounts | Delinquencies screen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_acctdetedit">
            <xs:annotation>
              <xs:documentation>Permission to edit an existing account's details</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_acctdisbview">
            <xs:annotation>
              <xs:documentation>Permission to view Accounts | Disbursements screen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_acctdocview">
            <xs:annotation>
              <xs:documentation>Permission to view Accounts | Documents screen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_acctevalview">
            <xs:annotation>
              <xs:documentation>Permission to view Accounts | Evaluation screen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_accthistview">
            <xs:annotation>
              <xs:documentation>Permission to view Accounts | History screen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_acctignoresecurityzone">
            <xs:annotation>
              <xs:documentation>Permission to view an account regardless of the security zone it is in</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_acctinvcview">
            <xs:annotation>
              <xs:documentation>Permission to view Accounts | Invoices screen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_acctjournalview">
            <xs:annotation>
              <xs:documentation>Permission to view Accounts | Journal screen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_acctledgerview">
            <xs:annotation>
              <xs:documentation>Permission to view Accounts | Ledger screen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_acctnoteview">
            <xs:annotation>
              <xs:documentation>Permission to view Accounts | Notes screen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_acctplcytx">
            <xs:annotation>
              <xs:documentation>Permission to transfer a policy to a different account</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_acctplcyview">
            <xs:annotation>
              <xs:documentation>Permission to view Accounts | Policies screen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_acctpmntview">
            <xs:annotation>
              <xs:documentation>Permission to view Accounts | Payments screen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_acctsearch">
            <xs:annotation>
              <xs:documentation>Permission to search for accounts</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_acctsummview">
            <xs:annotation>
              <xs:documentation>Permission to view Accounts | Summary screen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_accttabview">
            <xs:annotation>
              <xs:documentation>Permission to view the Accounts tab</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_acctttktview">
            <xs:annotation>
              <xs:documentation>Permission to view Accounts | Trouble Tickets screen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_accttxnview">
            <xs:annotation>
              <xs:documentation>Permission to view Accounts | Transactions screen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_acctwo">
            <xs:annotation>
              <xs:documentation>Permission to write off an amount for an account</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_actapproveany">
            <xs:annotation>
              <xs:documentation>Permission to approve any approval activity even if the activity is assigned to someone else; the approver is still subject to authority limit restrictions</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_actcreate">
            <xs:annotation>
              <xs:documentation>Permission to create new activities</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_acteditunowned">
            <xs:annotation>
              <xs:documentation>Permission to modify (edit/skip/close) activities owned by other users</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_actmakemand">
            <xs:annotation>
              <xs:documentation>Permission to set whether an activity is mandatory</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_actown">
            <xs:annotation>
              <xs:documentation>Permission to own an activity and to see the Desktop Activities page</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_actpatcreate">
            <xs:annotation>
              <xs:documentation>Permission to create new activity patterns</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_actpatdelete">
            <xs:annotation>
              <xs:documentation>Permission to delete activity patterns</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_actpatedit">
            <xs:annotation>
              <xs:documentation>Permission to edit activity patterns</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_actpatview">
            <xs:annotation>
              <xs:documentation>Permission to view the list of activity patterns or activity pattern details</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_actqueueassign">
            <xs:annotation>
              <xs:documentation>Permission to assign an activity from a queue</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_actqueuenext">
            <xs:annotation>
              <xs:documentation>Permission to get the next activity off of a queue</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_actqueuepick">
            <xs:annotation>
              <xs:documentation>Permission to pick an activity from a queue</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_actraown">
            <xs:annotation>
              <xs:documentation>Permission to reassign your own activities</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_actraunown">
            <xs:annotation>
              <xs:documentation>Permission to reassign activities owned by other users</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_actreviewassign">
            <xs:annotation>
              <xs:documentation>Permission to review and approve manually-approved assignables</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_actsearch">
            <xs:annotation>
              <xs:documentation>Permission to search for activities</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_actview">
            <xs:annotation>
              <xs:documentation>Permission to view activities</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_actviewallqueues">
            <xs:annotation>
              <xs:documentation>Permission to view all activity queues, even those in other security zones</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_adhoccredit">
            <xs:annotation>
              <xs:documentation>Permission to create or reverse adhoc credit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_admincmdline">
            <xs:annotation>
              <xs:documentation>Governs use of command-line tools as well as user attribute administration</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_admindatachangeexec">
            <xs:annotation>
              <xs:documentation>Permission to execute the data change.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_admindatachangeview">
            <xs:annotation>
              <xs:documentation>Permission to view the data change page.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_admintabview">
            <xs:annotation>
              <xs:documentation>Permission to view the Admin tab</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_agencybillplancreate">
            <xs:annotation>
              <xs:documentation>Permission to create a new agency bill plan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_agencybillplanedit">
            <xs:annotation>
              <xs:documentation>Permission to change an existing agency bill plan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_agencybillplanview">
            <xs:annotation>
              <xs:documentation>Permission to view agency bill plans</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_agencymoneyrecdsearch">
            <xs:annotation>
              <xs:documentation>Permission to search for agency money receipts</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_agencywo">
            <xs:annotation>
              <xs:documentation>Permission to write off an amount for an agency bill producer</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_alpmanage">
            <xs:annotation>
              <xs:documentation>Permission create, edit, or delete authority limit profiles</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_alpview">
            <xs:annotation>
              <xs:documentation>Permission to view authority limit profiles</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_anytagcreate">
            <xs:annotation>
              <xs:documentation>Permission to create a new contact regardless of which tag(s) it has</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_anytagdelete">
            <xs:annotation>
              <xs:documentation>Permission to delete a contact regardless of which tag(s) it has</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_anytagedit">
            <xs:annotation>
              <xs:documentation>Permission to edit the details of a contact regardless of which tag(s) it has</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_anytagview">
            <xs:annotation>
              <xs:documentation>Permission to view the details of a contact regardless of which tag(s) it has</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_archive">
            <xs:annotation>
              <xs:documentation>Permission to archive objects</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_attrmanage">
            <xs:annotation>
              <xs:documentation>Permission to create, edit, or delete user attributes</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_attrview">
            <xs:annotation>
              <xs:documentation>Permission to view the list of user attributes or attribute details</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_billplancreate">
            <xs:annotation>
              <xs:documentation>Permission to create a new billing plan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_billplanedit">
            <xs:annotation>
              <xs:documentation>Permission to change an existing billing plan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_billplanview">
            <xs:annotation>
              <xs:documentation>Permission to view billing plans</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_buswkmanage">
            <xs:annotation>
              <xs:documentation>Permission to create, edit, or delete business week</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_buswkview">
            <xs:annotation>
              <xs:documentation>Permission to view the list of business week</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_cashfromprodtx">
            <xs:annotation>
              <xs:documentation>Permission to transfer cash from a producer</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_cashtoprodtx">
            <xs:annotation>
              <xs:documentation>Permission to transfer cash to a producer</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_cashtx">
            <xs:annotation>
              <xs:documentation>Permission to transfer cash</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_cashunreltx">
            <xs:annotation>
              <xs:documentation>Permission to transfer cash to an account or policyperiod that is not related to the source account or policyperiod</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_changecontactsubtype">
            <xs:annotation>
              <xs:documentation>Permission to change contact subtype</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_chargeholdcreate">
            <xs:annotation>
              <xs:documentation>Permission to place a hold on a charge</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_chargeholdrelease">
            <xs:annotation>
              <xs:documentation>Permission to release a hold on a charge</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_chargepatterncreate">
            <xs:annotation>
              <xs:documentation>Permission to create a new charge pattern</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_chargepatternedit">
            <xs:annotation>
              <xs:documentation>Permission to edit an existing charge pattern</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_chargepatternview">
            <xs:annotation>
              <xs:documentation>Permission to view charge patterns</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_chrgcmsnrateoverride">
            <xs:annotation>
              <xs:documentation>Permission to override commission rates at the charge level</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_colagencycreate">
            <xs:annotation>
              <xs:documentation>Permission to create a new collection agency</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_colagencydelete">
            <xs:annotation>
              <xs:documentation>Permission to remove an existing collection agency</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_colagencyedit">
            <xs:annotation>
              <xs:documentation>Permission to change an existing collection agency</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_colagencyview">
            <xs:annotation>
              <xs:documentation>Permission to view collection agencies</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_collateraldisburse">
            <xs:annotation>
              <xs:documentation>Permission to disburse collateral requirement</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_collateraldrawdown">
            <xs:annotation>
              <xs:documentation>Permission to drawdown collateral requirement</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_collateralreqedit">
            <xs:annotation>
              <xs:documentation>Permission to edit a collateral requirement</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_commpercoride">
            <xs:annotation>
              <xs:documentation>Permission to override the commission rate (an arbitrary percentage) for a producer on a single policyperiod for a given role</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_commplanassnedit">
            <xs:annotation>
              <xs:documentation>Permission to change the commission plan assigned to a producer's producer codes</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_commplancreate">
            <xs:annotation>
              <xs:documentation>Permission to create a new commission plan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_commplanedit">
            <xs:annotation>
              <xs:documentation>Permission to change an existing commission plan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_commplanoride">
            <xs:annotation>
              <xs:documentation>Permission to override the commission plan for a producer on a single policyperiod for a given role</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_commplanview">
            <xs:annotation>
              <xs:documentation>Permission to view commission plans</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_confdoccreate">
            <xs:annotation>
              <xs:documentation>Permission to create confidential documents</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_confdocdelete">
            <xs:annotation>
              <xs:documentation>Permission to delete confidential documents</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_confdocedit">
            <xs:annotation>
              <xs:documentation>Permission to edit confidential documents</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_confdocview">
            <xs:annotation>
              <xs:documentation>Permission to view confidential documents</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_confnotecreate">
            <xs:annotation>
              <xs:documentation>Permission to create confidential notes</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_confnotedelete">
            <xs:annotation>
              <xs:documentation>Permission to delete confidential notes</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_confnoteedit">
            <xs:annotation>
              <xs:documentation>Permission to edit confidential notes</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_confnoteview">
            <xs:annotation>
              <xs:documentation>Permission to view confidential notes</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ctccreate">
            <xs:annotation>
              <xs:documentation>Permission to create a new local contact</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ctcedit">
            <xs:annotation>
              <xs:documentation>Permission to edit an existing local contact</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ctcview">
            <xs:annotation>
              <xs:documentation>Permission to view and search local contact entries</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_debugtools">
            <xs:annotation>
              <xs:documentation>Permission to access debug tools, even when they are disabled by a configuration parameter</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_delplancreate">
            <xs:annotation>
              <xs:documentation>Permission to create a new delinquency plan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_delplancustedit">
            <xs:annotation>
              <xs:documentation>Permission to change a customers's existing delinquency plan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_delplanedit">
            <xs:annotation>
              <xs:documentation>Permission to change an existing delinquency plan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_delplanview">
            <xs:annotation>
              <xs:documentation>Permission to view delinquency plans</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_delsearch">
            <xs:annotation>
              <xs:documentation>Permission to search for delinquencies</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_disbauccreate">
            <xs:annotation>
              <xs:documentation>Permission to create a disbursement of an amount over the amount under contract</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_disbcreate">
            <xs:annotation>
              <xs:documentation>Permission to create a disbursement</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_disbpayeeedit">
            <xs:annotation>
              <xs:documentation>Permission to change disbursement payee</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_disbsearch">
            <xs:annotation>
              <xs:documentation>Permission to search for disbursements</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_doccreate">
            <xs:annotation>
              <xs:documentation>Permission to add documents</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_docdelete">
            <xs:annotation>
              <xs:documentation>Permission to remove documents</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_docedit">
            <xs:annotation>
              <xs:documentation>Permission to edit documents</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_docmodifyall">
            <xs:annotation>
              <xs:documentation>Permission to edit or delete all documents, regardless of the permissions set on the individual documents</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_docview">
            <xs:annotation>
              <xs:documentation>Permission to view documents</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_docviewall">
            <xs:annotation>
              <xs:documentation>Permission to view all documents, regardless of the permissions set on the individual documents</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_eventmessageview">
            <xs:annotation>
              <xs:documentation>Permission to view the event messages page</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_gentxn">
            <xs:annotation>
              <xs:documentation>Permission to execute a general transaction</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_globalopview">
            <xs:annotation>
              <xs:documentation>Permission to view the list of global options</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_glocalopedit">
            <xs:annotation>
              <xs:documentation>Permission to edit the list of global options</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_groupcreate">
            <xs:annotation>
              <xs:documentation>Permission to create groups</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_groupdelete">
            <xs:annotation>
              <xs:documentation>Permission to delete groups</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_groupedit">
            <xs:annotation>
              <xs:documentation>Permission to edit groups</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_grouptreeview">
            <xs:annotation>
              <xs:documentation>Permission to see the user/group tree on the Administration tab</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_groupview">
            <xs:annotation>
              <xs:documentation>Permission to view details of a group</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_grpacctsearch">
            <xs:annotation>
              <xs:documentation>Permission to search for accounts that were created by the user's groups; this permission is unecessary for users with the acctsearch permission</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_holidaymanage">
            <xs:annotation>
              <xs:documentation>Permission to create, edit, and delete holidays</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_holidayview">
            <xs:annotation>
              <xs:documentation>Permission to view a list of holidays or holiday details</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_intdoccreate">
            <xs:annotation>
              <xs:documentation>Permission to create internal documents</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_intdocdelete">
            <xs:annotation>
              <xs:documentation>Permission to delete internal documents</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_intdocedit">
            <xs:annotation>
              <xs:documentation>Permission to edit internal documents</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_intdocview">
            <xs:annotation>
              <xs:documentation>Permission to view internal documents</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_integadmin">
            <xs:annotation>
              <xs:documentation>Permission to administer integration events</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_internaltools">
            <xs:annotation>
              <xs:documentation>Permission to access all Internal Tools</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_intnotecreate">
            <xs:annotation>
              <xs:documentation>Permission to create internal notes</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_intnotedelete">
            <xs:annotation>
              <xs:documentation>Permission to delete internal notes</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_intnoteedit">
            <xs:annotation>
              <xs:documentation>Permission to edit internal notes</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_intnoteview">
            <xs:annotation>
              <xs:documentation>Permission to view internal notes</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_invccreate">
            <xs:annotation>
              <xs:documentation>Permission to create an invoice</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_invcdateedit">
            <xs:annotation>
              <xs:documentation>Permission to change invoice dates</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_invcmssgview">
            <xs:annotation>
              <xs:documentation>Permission to view messages stored for invoices</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_invcremove">
            <xs:annotation>
              <xs:documentation>Permission to remove an invoice</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_invcresend">
            <xs:annotation>
              <xs:documentation>Permission to resend an invoice to an insured / account contact</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_invcsearch">
            <xs:annotation>
              <xs:documentation>Permission to search for invoices</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_invcstrmedit">
            <xs:annotation>
              <xs:documentation>Permission to change invoice stream defaults</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_invmssgedit">
            <xs:annotation>
              <xs:documentation>Permission to change messages stored for invoices</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_lvprint">
            <xs:annotation>
              <xs:documentation>Permission to print listviews</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_manageldfctrs">
            <xs:annotation>
              <xs:documentation>Permission to modify the load factors on all users and groups</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_myagencyitemsview">
            <xs:annotation>
              <xs:documentation>Permission to view Desktop | My Agency Items screen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_mydelinquenciesview">
            <xs:annotation>
              <xs:documentation>Permission to view Desktop | My Delinquencies screen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_mydisbview">
            <xs:annotation>
              <xs:documentation>Permission to view Desktop | My Disbursements screen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_myttktview">
            <xs:annotation>
              <xs:documentation>Permission to view Desktop | My Trouble Tickets screen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_notecreate">
            <xs:annotation>
              <xs:documentation>Permission to add notes</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_notedelete">
            <xs:annotation>
              <xs:documentation>Permission to remove notes</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_noteedit">
            <xs:annotation>
              <xs:documentation>Permission to edit the notes</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_noteeditbody">
            <xs:annotation>
              <xs:documentation>Permission to edit the body of notes</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_noteview">
            <xs:annotation>
              <xs:documentation>Permission to view notes</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_orgcreate">
            <xs:annotation>
              <xs:documentation>Permission to create an organization.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_orgdelete">
            <xs:annotation>
              <xs:documentation>Permission to delete an organization.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_orgeditbasic">
            <xs:annotation>
              <xs:documentation>Permission to edit an organization's basic info.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_orgsearch">
            <xs:annotation>
              <xs:documentation>Permission to search for organizations.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_orgviewbasic">
            <xs:annotation>
              <xs:documentation>Permission to view an organization's basic info.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_outpmntsearch">
            <xs:annotation>
              <xs:documentation>Permission to search for outgoing payments</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_payallocplancreate">
            <xs:annotation>
              <xs:documentation>Permission to create a new payment allocation plan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_payallocplanedit">
            <xs:annotation>
              <xs:documentation>Permission to change an existing payment allocation plan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_payallocplanview">
            <xs:annotation>
              <xs:documentation>Permission to view payment allocation plans</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_plcychange">
            <xs:annotation>
              <xs:documentation>Permission to make changes to an existing policyperiod</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_plcychargesview">
            <xs:annotation>
              <xs:documentation>Permission to view Policies | Charges screen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_plcycntcreate">
            <xs:annotation>
              <xs:documentation>Permission to add a new contact to a policyperiod</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_plcycntdelete">
            <xs:annotation>
              <xs:documentation>Permission to remove a contact from a policyperiod</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_plcycntedit">
            <xs:annotation>
              <xs:documentation>Permission to edit information on an existing policyperiod contact</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_plcycommview">
            <xs:annotation>
              <xs:documentation>Permission to view Policies | Commissions screen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_plcycontview">
            <xs:annotation>
              <xs:documentation>Permission to view Policies | Contacts screen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_plcycreate">
            <xs:annotation>
              <xs:documentation>Permission to create a new policyperiod</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_plcydelview">
            <xs:annotation>
              <xs:documentation>Permission to view Policies | Delinquencies screen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_plcydocview">
            <xs:annotation>
              <xs:documentation>Permission to view Policies | Documents screen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_plcyhistview">
            <xs:annotation>
              <xs:documentation>Permission to view Policies | History screen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_plcyignoresecurityzone">
            <xs:annotation>
              <xs:documentation>Permission to view a PolicyPeriod regardless of the security zone it is in</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_plcyjournalview">
            <xs:annotation>
              <xs:documentation>Permission to view Policies | Journal screen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_plcyledgerview">
            <xs:annotation>
              <xs:documentation>Permission to view Policies | Ledger screen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_plcynoteview">
            <xs:annotation>
              <xs:documentation>Permission to view Policies | Notes screen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_plcypmntview">
            <xs:annotation>
              <xs:documentation>Permission to view Policies | Payments screen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_plcyprodtx">
            <xs:annotation>
              <xs:documentation>Permission to transfer a policyperiod to a different producer for a given role</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_plcyrenew">
            <xs:annotation>
              <xs:documentation>Permission to renew a policy</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_plcysearch">
            <xs:annotation>
              <xs:documentation>Permission to search for policies</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_plcysummview">
            <xs:annotation>
              <xs:documentation>Permission to view Policies | Summary screen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_plcytabview">
            <xs:annotation>
              <xs:documentation>Permission to view the Policies tab</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_plcyttktview">
            <xs:annotation>
              <xs:documentation>Permission to view Policies | Trouble Tickets screen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_plcytxnview">
            <xs:annotation>
              <xs:documentation>Permission to view Policies | Transactions screen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_plcywo">
            <xs:annotation>
              <xs:documentation>Permission to write off an amount for a policyperiod</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pmntdetpayedit">
            <xs:annotation>
              <xs:documentation>Permission to change the details for a payment (i.e. payer name, invoice #)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pmntdistedit">
            <xs:annotation>
              <xs:documentation>Permission to change the distribution of a payment to policies</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pmntmanmultproc">
            <xs:annotation>
              <xs:documentation>Permission to process a payment manually (multiple payment view)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pmntmanproc">
            <xs:annotation>
              <xs:documentation>Permission to process a payment manually (single payment)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pmntmethodedit">
            <xs:annotation>
              <xs:documentation>Permission to change an account's payment method</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pmntmultiagency">
            <xs:annotation>
              <xs:documentation>Permission to add multiple agency bill payments</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pmntplancreate">
            <xs:annotation>
              <xs:documentation>Permission to create a new payment plan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pmntplanedit">
            <xs:annotation>
              <xs:documentation>Permission to change an existing payment plan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pmntplanview">
            <xs:annotation>
              <xs:documentation>Permission to view payment plans</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pmntreqsearch">
            <xs:annotation>
              <xs:documentation>Permission to search for payment requests</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pmntreverse">
            <xs:annotation>
              <xs:documentation>Permission to reverse a payment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pmntscheedit">
            <xs:annotation>
              <xs:documentation>Permission to edit an account's payment schedule</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pmntscheplcyedit">
            <xs:annotation>
              <xs:documentation>Permission to edit the payment schedule for a policyperiod</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pmntsearch">
            <xs:annotation>
              <xs:documentation>Permission to search for payments</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_prodabcyclesview">
            <xs:annotation>
              <xs:documentation>Permission to view Producers | Agency Bill Cycles screen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_prodabexceptionsview">
            <xs:annotation>
              <xs:documentation>Permission to view Producers | Agency Bill Exceptions screen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_prodabopenitemsview">
            <xs:annotation>
              <xs:documentation>Permission to view Producers | Agency Bill Open Items screen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_prodabstmtresend">
            <xs:annotation>
              <xs:documentation>Permission to resend a statement to a producer (Agency Bill)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_prodabstmtview">
            <xs:annotation>
              <xs:documentation>Permission to view Producers | Statements (Agency Bill) screen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_prodabtxnview">
            <xs:annotation>
              <xs:documentation>Permission to a view Producers | Transactions (Agency Bill) screen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_prodcntcreate">
            <xs:annotation>
              <xs:documentation>Permission to add a new contact to a producer</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_prodcntdelete">
            <xs:annotation>
              <xs:documentation>Permission to remove a contact from a producer</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_prodcntedit">
            <xs:annotation>
              <xs:documentation>Permission to edit information on an existing producer contact</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_prodcontview">
            <xs:annotation>
              <xs:documentation>Permission to view Producers | Contacts screen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_prodcreate">
            <xs:annotation>
              <xs:documentation>Permission to create a new producer</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_proddbstmtresend">
            <xs:annotation>
              <xs:documentation>Permission to resend a statement to a producer (Direct Bill)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_proddbstmtview">
            <xs:annotation>
              <xs:documentation>Permission to view Producers | Statements (Direct Bill) screen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_proddbtxnview">
            <xs:annotation>
              <xs:documentation>Permission to a view Producers | Transactions (Direct Bill) screen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_proddetedit">
            <xs:annotation>
              <xs:documentation>Permission to change details for a producer</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_proddocview">
            <xs:annotation>
              <xs:documentation>Permission to view Producers | Documents screen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_prodhistview">
            <xs:annotation>
              <xs:documentation>Permission to view Producers | History screen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_prodignoresecurityzone">
            <xs:annotation>
              <xs:documentation>Permission to view a Producer regardless of the security zone it is in</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_prodjournalview">
            <xs:annotation>
              <xs:documentation>Permission to view Producers | Journal screen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_prodledgerview">
            <xs:annotation>
              <xs:documentation>Permission to view Producers | Ledger screen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_prodnoteview">
            <xs:annotation>
              <xs:documentation>Permission to view Producers | Notes screen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_prodplcyview">
            <xs:annotation>
              <xs:documentation>Permission to view Producers | Policies screen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_prodpmntadvman">
            <xs:annotation>
              <xs:documentation>Permission to give a producer an advance</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_prodpmntbonusman">
            <xs:annotation>
              <xs:documentation>Permission to give a producer a bonus</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_prodpmntedit">
            <xs:annotation>
              <xs:documentation>Permission to edit Producers | Payments screen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_prodpmntprocman">
            <xs:annotation>
              <xs:documentation>Permission to process a payment from a producer manually</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_prodpmntstndexman">
            <xs:annotation>
              <xs:documentation>Permission to make a payment to a producer (of standard type) that exceeds the amount currently payable</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_prodpmntstndman">
            <xs:annotation>
              <xs:documentation>Permission to make a payment to a producer (standard type)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_prodpmntview">
            <xs:annotation>
              <xs:documentation>Permission to view Producers | Payments screen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_prodpromedit">
            <xs:annotation>
              <xs:documentation>Permission to edit Producers | Promises screen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_prodpromview">
            <xs:annotation>
              <xs:documentation>Permission to view Producers | Promises screen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_prodrevcashtopayablexfer">
            <xs:annotation>
              <xs:documentation>Permission to reverse a producer cash to payable transfer</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_prodrevpayablexfer">
            <xs:annotation>
              <xs:documentation>Permission to reverse a producer commissions payable transfer</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_prodsearch">
            <xs:annotation>
              <xs:documentation>Permission to search for producers</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_prodsummview">
            <xs:annotation>
              <xs:documentation>Permission to view Producers | Summary screen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_prodsuspitemsedit">
            <xs:annotation>
              <xs:documentation>Permission to make edits on the Producers | Suspense Items screen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_prodsuspitemsview">
            <xs:annotation>
              <xs:documentation>Permission to view Producers | Suspense Items screen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_prodtabview">
            <xs:annotation>
              <xs:documentation>Permission to view the Producers Tab</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_prodtieredit">
            <xs:annotation>
              <xs:documentation>Permission to change the tier to which a producer is assigned</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_prodttktview">
            <xs:annotation>
              <xs:documentation>Permission to view Producers | Trouble Tickets screen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_prodwo">
            <xs:annotation>
              <xs:documentation>Permission to write off an amount for a producer</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_prodwriteoffsedit">
            <xs:annotation>
              <xs:documentation>Permission to make edits on the Producers | Write-Offs screen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_prodwriteoffsview">
            <xs:annotation>
              <xs:documentation>Permission to view Producers | Write-Offs screen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_purge">
            <xs:annotation>
              <xs:documentation>Permission to purge objects from the database</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_regionmanage">
            <xs:annotation>
              <xs:documentation>Permission to create, edit, and delete regions</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_regionview">
            <xs:annotation>
              <xs:documentation>Permission to view the list of regions and region details</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_reporting_view">
            <xs:annotation>
              <xs:documentation>Permission to view the Report tab, if the add-on reporting module is installed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_resyncmessage">
            <xs:annotation>
              <xs:documentation>Permission to resync message</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_retpremplancreate">
            <xs:annotation>
              <xs:documentation>Permission to create a new return premium plan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_retpremplanedit">
            <xs:annotation>
              <xs:documentation>Permission to change an existing return premium plan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_retpremplanview">
            <xs:annotation>
              <xs:documentation>Permission to view return premium plans</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_retrymessage">
            <xs:annotation>
              <xs:documentation>Permission to try to resend the failed message</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_revtxn">
            <xs:annotation>
              <xs:documentation>Permission to reverse a transaction</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_rolemanage">
            <xs:annotation>
              <xs:documentation>Permission to create, edit, or delete roles</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_roleview">
            <xs:annotation>
              <xs:documentation>Permission to view the list of roles and role details</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ruleadmin">
            <xs:annotation>
              <xs:documentation>Permission to run Guidewire Studio or import rules</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_scrprmmanage">
            <xs:annotation>
              <xs:documentation>Permission to create, edit, or delete script parameters</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_scrprmview">
            <xs:annotation>
              <xs:documentation>Permission to view the list of script parameters or details of an individual script parameter</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_seczonemanage">
            <xs:annotation>
              <xs:documentation>Permission to create, edit, and delete security zones</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_sharedactcreate">
            <xs:annotation>
              <xs:documentation>Permission to create a new shared activity</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_sharedactedit">
            <xs:annotation>
              <xs:documentation>Permission to edit an existing shared activity</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_sharedactview">
            <xs:annotation>
              <xs:documentation>Permission to view a shared activity</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_skipmessage">
            <xs:annotation>
              <xs:documentation>Permission to skip the failed message</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_soapadmin">
            <xs:annotation>
              <xs:documentation>Permission to use the SOAP APIs</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_subrtxn">
            <xs:annotation>
              <xs:documentation>Permission to execute a subrogation transaction</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_susppmntedit">
            <xs:annotation>
              <xs:documentation>Permission to edit an existing suspense payment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_susppmntproc">
            <xs:annotation>
              <xs:documentation>Permission to process a suspense payment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_susppmntview">
            <xs:annotation>
              <xs:documentation>Permission to view a suspense payment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_toolsBatchProcessedit">
            <xs:annotation>
              <xs:documentation>Permission to edit the BatchProcess Internal Tools page</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_toolsBatchProcessview">
            <xs:annotation>
              <xs:documentation>Permission to access the BatchProcess Internal Tools page</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_toolsCacheinfoview">
            <xs:annotation>
              <xs:documentation>Permission to view the CacheInfo Internal Tools page</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_toolsClusteredit">
            <xs:annotation>
              <xs:documentation>Permission to edit the Cluster Internal Tools page</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_toolsClusterview">
            <xs:annotation>
              <xs:documentation>Permission to access the Cluster Internal Tools page</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_toolsInfoview">
            <xs:annotation>
              <xs:documentation>Permission to access the Info Internal Tools page</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_toolsJMXBeansEdit">
            <xs:annotation>
              <xs:documentation>Permission to edit the ManagementBeans presented on Internal Tools page</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_toolsJMXBeansview">
            <xs:annotation>
              <xs:documentation>Permission to access the ManagementBeans Internal Tools page</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_toolsJProfileredit">
            <xs:annotation>
              <xs:documentation>Permission to edit the JProfiler Internal Tools page</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_toolsLogedit">
            <xs:annotation>
              <xs:documentation>Permission to edit the Log Internal Tools page</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_toolsLogview">
            <xs:annotation>
              <xs:documentation>Permission to access the Log Internal Tools page</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_toolsPluginedit">
            <xs:annotation>
              <xs:documentation>Permission to edit the StartablePlugin Internal Tools page</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_toolsPluginview">
            <xs:annotation>
              <xs:documentation>Permission to access the StartablePlugin Internal Tools page</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_toolsProfileredit">
            <xs:annotation>
              <xs:documentation>Permission to edit the Profiler Internal Tools page</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_toolsProfilerview">
            <xs:annotation>
              <xs:documentation>Permission to access the Profiler Internal Tools page</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_toolsWorkQueueedit">
            <xs:annotation>
              <xs:documentation>Permission to edit the WorkQueue Internal Tools page</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_toolsWorkQueueview">
            <xs:annotation>
              <xs:documentation>Permission to access the WorkQueue Internal Tools page</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_transferreversal">
            <xs:annotation>
              <xs:documentation>Permission to Execute a transfer reversal</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ttktassignany">
            <xs:annotation>
              <xs:documentation>Permission to re-assign others' trouble tickets</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ttktassignown">
            <xs:annotation>
              <xs:documentation>Permission to re-assign one's own trouble tickets</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ttktcreate">
            <xs:annotation>
              <xs:documentation>Permission to create a new trouble ticket</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ttktown">
            <xs:annotation>
              <xs:documentation>Permission to own a trouble ticket</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ttktsearch">
            <xs:annotation>
              <xs:documentation>Permission to search for trouble tickets</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_txnsearch">
            <xs:annotation>
              <xs:documentation>Permission to search for transactions</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_useractivate">
            <xs:annotation>
              <xs:documentation>Restore ability for a user to log in</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_useradmin">
            <xs:annotation>
              <xs:documentation>Permission to see the user/group administration screens. Also governs use of command-line tools and user attribute admin.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_usercreate">
            <xs:annotation>
              <xs:documentation>Permission to create a new user</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_userdeactivate">
            <xs:annotation>
              <xs:documentation>Remove ability for a user to log in</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_userdelete">
            <xs:annotation>
              <xs:documentation>Permission to delete a user (Note: if a user has had any activity it's recommended to make them non-active rather than delete)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_useredit">
            <xs:annotation>
              <xs:documentation>Permission to edit an existing user, except for roles, authority limits, or attributes</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_usereditattrs">
            <xs:annotation>
              <xs:documentation>Permission to edit attributes for a user</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_usereditlang">
            <xs:annotation>
              <xs:documentation>Permission to edit language</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_usergrantauth">
            <xs:annotation>
              <xs:documentation>Permission to grant or change an authority limit for a user</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_usergrantroles">
            <xs:annotation>
              <xs:documentation>Permission to grant or revoke roles</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_usersearch">
            <xs:annotation>
              <xs:documentation>Permission to search for users</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_userview">
            <xs:annotation>
              <xs:documentation>Permission to view details of a user</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_userviewall">
            <xs:annotation>
              <xs:documentation>Permission to see users in all visible groups</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_viewactcal">
            <xs:annotation>
              <xs:documentation>Permission to view activity calendar of other users</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_viewdesktop">
            <xs:annotation>
              <xs:documentation>Permission to view the desktop</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_viewsearch">
            <xs:annotation>
              <xs:documentation>Permission to view the Search tab</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_viewteam">
            <xs:annotation>
              <xs:documentation>Permission to view the Team tab</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_viewworkload">
            <xs:annotation>
              <xs:documentation>Permission to view global workload statistics of other users</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_workflowmanage">
            <xs:annotation>
              <xs:documentation>Permission to view the ManageWorkflow page</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_workflowview">
            <xs:annotation>
              <xs:documentation>Permission to view the Workflow page</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_wsdatachangeedit">
            <xs:annotation>
              <xs:documentation>Permission to add a data change gosu program.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_zonemanage">
            <xs:annotation>
              <xs:documentation>Permission to create, edit, or delete admin zones</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_zoneview">
            <xs:annotation>
              <xs:documentation>Permission to view the list of admin zones</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="RoleType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Defines the role types</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_user">
            <xs:annotation>
              <xs:documentation>Roles associated with Users</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TimeZoneType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Users' time zones</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_EMPTY_TYPELIST">
            <xs:annotation>
              <xs:documentation>This typelist has no defined elements</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AgencyBillCycle" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype typelist for entity AgencyBillCycle</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_AgencyBillCycle">
            <xs:annotation>
              <xs:documentation>AgencyBillCycle</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AgencyCycleProcess" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype typelist for entity AgencyCycleProcess</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_AgencyCycleProcess">
            <xs:annotation>
              <xs:documentation>AgencyCycleProcess</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Workflow" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype typelist for entity Workflow</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_AgencyBillWorkflow">
            <xs:annotation>
              <xs:documentation>AgencyBillWorkflow</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BCWorkflow">
            <xs:annotation>
              <xs:documentation>BCWorkflow</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CancelImmediately">
            <xs:annotation>
              <xs:documentation>Cancel Immediately</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DelProcessWorkflow">
            <xs:annotation>
              <xs:documentation>DelProcessWorkflow</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LegacyAgencyBill">
            <xs:annotation>
              <xs:documentation>Legacy Agency Bill</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LegacyDelinquency">
            <xs:annotation>
              <xs:documentation>Past Due Delinquency from Legacy System</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LegacyDelinquencyOther">
            <xs:annotation>
              <xs:documentation>Other Delinquency from Legacy System</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SimpleDelinquency">
            <xs:annotation>
              <xs:documentation>Simple Delinquency</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SimpleFailureToReport">
            <xs:annotation>
              <xs:documentation>Simple Failure to Report</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SimpleProducerRefer">
            <xs:annotation>
              <xs:documentation>Simple Producer Referral</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_StdAgencyBill">
            <xs:annotation>
              <xs:documentation>Standard Agency Bill</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_StdDelinquency">
            <xs:annotation>
              <xs:documentation>Standard Delinquency</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Workflow">
            <xs:annotation>
              <xs:documentation>Workflow</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="WorkflowActiveState" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>The possible states of an active workflow object</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_running">
            <xs:annotation>
              <xs:documentation>The workflow is currently running.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_waitactivity">
            <xs:annotation>
              <xs:documentation>The workflow is waiting for some activities to complete.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_waitmanual">
            <xs:annotation>
              <xs:documentation>The workflow is waiting for a trigger or timeout.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_waitmessage">
            <xs:annotation>
              <xs:documentation>The workflow is waiting for a message to be acked.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="WorkflowActionType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>What action is the Workflow currently trying to take?</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_activity">
            <xs:annotation>
              <xs:documentation>Creating Activities</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_assert">
            <xs:annotation>
              <xs:documentation>Executing Assertions</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_branch">
            <xs:annotation>
              <xs:documentation>Executing a Branch (or Timeout, Trigger, etc.)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_enter">
            <xs:annotation>
              <xs:documentation>Executing an Enter block</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_exit">
            <xs:annotation>
              <xs:documentation>Executing an Exit block</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_finish">
            <xs:annotation>
              <xs:documentation>Executing a Finish block</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_selectBranch">
            <xs:annotation>
              <xs:documentation>Looking for one of the branches to be ready to execute</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_start">
            <xs:annotation>
              <xs:documentation>Executing a Start block</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="WorkflowHandler" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>What infrastructure handles this Workflow?</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_internal">
            <xs:annotation>
              <xs:documentation>Handled by Guidewire's internal Workflow engine</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_test">
            <xs:annotation>
              <xs:documentation>Handled by testing infrastructure (not for production!)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ErrorCategory" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>The type of error for messages that are in error</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_EMPTY_TYPELIST">
            <xs:annotation>
              <xs:documentation>This typelist has no defined elements</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="WorkflowState" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>The states a workflow object can be in</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_active">
            <xs:annotation>
              <xs:documentation>Active -- the workflow is running.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_completed">
            <xs:annotation>
              <xs:documentation>Completed -- the workflow reached one of its Outcomes.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_error">
            <xs:annotation>
              <xs:documentation>The workflow encountered an exception while running, so the it has been paused until the error is fixed.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_suspended">
            <xs:annotation>
              <xs:documentation>Suspended -- execution of the workflow was manually suspended.  It can be resumed later.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="WorkflowTriggerKey" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>What workflow Triggers are allowed</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_Cancel">
            <xs:annotation>
              <xs:documentation>Cancel the policy</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CanceledInPAS">
            <xs:annotation>
              <xs:documentation>The policy has been canceled in the PAS</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ExitDelinquency">
            <xs:annotation>
              <xs:documentation>Trigger to exit delinquency</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Invoice" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype typelist for entity Invoice</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_AccountInvoice">
            <xs:annotation>
              <xs:documentation>AccountInvoice</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Invoice">
            <xs:annotation>
              <xs:documentation>Invoice</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_StatementInvoice">
            <xs:annotation>
              <xs:documentation>StatementInvoice</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="InvoiceStream" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype typelist for entity InvoiceStream</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_InvoiceStream">
            <xs:annotation>
              <xs:documentation>InvoiceStream</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="BillDateOrDueDateBilling" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Whether invoice dates are computed from a fixed bill date or from a fixed due date.  With BillDateBilling         the bill date is specified and the due date is computed from the specified bill date. With DueDateBilling         the due date is specified and the bill date is computed from the specified due date.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_BillDateBilling">
            <xs:annotation>
              <xs:documentation>Bill date billing</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DueDateBilling">
            <xs:annotation>
              <xs:documentation>Due date billing</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Periodicity" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A Periodicity is how often something happens.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_everyfourmonths">
            <xs:annotation>
              <xs:documentation>Every Four Months</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_everyothermonth">
            <xs:annotation>
              <xs:documentation>Every Other Month</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_everyotherweek">
            <xs:annotation>
              <xs:documentation>Every Other Week</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_everyotheryear">
            <xs:annotation>
              <xs:documentation>Every Other Year</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_everysixmonths">
            <xs:annotation>
              <xs:documentation>Every Six Months</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_everyweek">
            <xs:annotation>
              <xs:documentation>Every Week</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_everyyear">
            <xs:annotation>
              <xs:documentation>Every Year</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_monthly">
            <xs:annotation>
              <xs:documentation>Monthly</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_quarterly">
            <xs:annotation>
              <xs:documentation>Quarterly</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_twicepermonth">
            <xs:annotation>
              <xs:documentation>Twice Per Month</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="InvoiceStatus" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>The status of an invoice</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_billed">
            <xs:annotation>
              <xs:documentation>Billed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_carriedforward">
            <xs:annotation>
              <xs:documentation>Carried Forward</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_due">
            <xs:annotation>
              <xs:documentation>Due</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_planned">
            <xs:annotation>
              <xs:documentation>Planned</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_writtenoff">
            <xs:annotation>
              <xs:documentation>Written Off</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="BaseDistItem" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype typelist for entity BaseDistItem</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_AgencyPaymentItem">
            <xs:annotation>
              <xs:documentation>AgencyPaymentItem</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AgencyPromiseItem">
            <xs:annotation>
              <xs:documentation>AgencyPromiseItem</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BaseDistItem">
            <xs:annotation>
              <xs:documentation>BaseDistItem</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BasePaymentItem">
            <xs:annotation>
              <xs:documentation>BasePaymentItem</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DirectBillPaymentItem">
            <xs:annotation>
              <xs:documentation>DirectBillPaymentItem</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ChargeInstanceCtx" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype typelist for entity ChargeInstanceCtx</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_ChargeInstanceCtx">
            <xs:annotation>
              <xs:documentation>ChargeInstanceCtx</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ChargeInvoicingCtx">
            <xs:annotation>
              <xs:documentation>ChargeInvoicingCtx</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ChargeWrittenOffCtx">
            <xs:annotation>
              <xs:documentation>ChargeWrittenOffCtx</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ChrgePaidFromAcctCtx">
            <xs:annotation>
              <xs:documentation>ChrgePaidFromAcctCtx</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ChrgePaidFromProdCtx">
            <xs:annotation>
              <xs:documentation>ChrgePaidFromProdCtx</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Writeoff" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype typelist for entity Writeoff</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_ChargeCommissionWriteoff">
            <xs:annotation>
              <xs:documentation>ChargeCommissionWriteoff</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ChargeGrossWriteoff">
            <xs:annotation>
              <xs:documentation>ChargeGrossWriteoff</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CommissionWriteoff">
            <xs:annotation>
              <xs:documentation>CommissionWriteoff</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GrossWriteoff">
            <xs:annotation>
              <xs:documentation>GrossWriteoff</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ItemCommissionWriteoff">
            <xs:annotation>
              <xs:documentation>ItemCommissionWriteoff</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ItemGrossWriteoff">
            <xs:annotation>
              <xs:documentation>ItemGrossWriteoff</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ProdWriteoffContainer">
            <xs:annotation>
              <xs:documentation>ProdWriteoffContainer</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Writeoff">
            <xs:annotation>
              <xs:documentation>Writeoff</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PayableCriteria" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Defines how commission becomes payable.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_billing">
            <xs:annotation>
              <xs:documentation>Commission becomes payable in proportion to amount billed.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_binding">
            <xs:annotation>
              <xs:documentation>Commission becomes fully payable when policy is bound.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_custom">
            <xs:annotation>
              <xs:documentation>Commission becomes payable based on a call to a plugin deciding how much to earn.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_effectivedate">
            <xs:annotation>
              <xs:documentation>Commission becomes fully payable on the policy effective date.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_expirationdate">
            <xs:annotation>
              <xs:documentation>Commission becomes fully payable on the policy expiration date.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_firstpaymentreceived">
            <xs:annotation>
              <xs:documentation>Commission becomes fully payable when the first payment is received.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_invoicepaid">
            <xs:annotation>
              <xs:documentation>Commission becomes payable in proportion to amount billed on fully paid invoices.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_paymentreceived">
            <xs:annotation>
              <xs:documentation>Commission becomes payable in proportion to payment received.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CommissionRateOverride" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype typelist for entity CommissionRateOverride</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_ChargeCommissionRateOverride">
            <xs:annotation>
              <xs:documentation>ChargeCommissionRateOverride</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CommissionRateOverride">
            <xs:annotation>
              <xs:documentation>CommissionRateOverride</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_InvoiceItemCommissionRateOverride">
            <xs:annotation>
              <xs:documentation>InvoiceItemCommissionRateOverride</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ChargeHoldStatus" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Defines the kinds of charge hold status</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_finalaudit">
            <xs:annotation>
              <xs:documentation>Hold For Final Audit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_finalauditunbilled">
            <xs:annotation>
              <xs:documentation>Hold For Final Audit (Unbilled items only)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_manual">
            <xs:annotation>
              <xs:documentation>Manual Hold</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_none">
            <xs:annotation>
              <xs:documentation>No Hold</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Transaction" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype typelist for entity Transaction</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_AbstractTransaction">
            <xs:annotation>
              <xs:documentation>Abstract Transaction</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AccountAdjustment">
            <xs:annotation>
              <xs:documentation>Account Adjustment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AccountCollectionTxn">
            <xs:annotation>
              <xs:documentation>Account Collection Credit Transaction</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AccountGoodwillTxn">
            <xs:annotation>
              <xs:documentation>Account Goodwill Transaction</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AccountInterestTxn">
            <xs:annotation>
              <xs:documentation>Account Interest Credit Transaction</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AccountNegativeWriteoffTxn">
            <xs:annotation>
              <xs:documentation>Account Negative Write-Off</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AccountOtherTxn">
            <xs:annotation>
              <xs:documentation>Account Other Credit Transaction</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AccountTransaction">
            <xs:annotation>
              <xs:documentation>Account Transaction</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AcctSuspenseReleaseTxn">
            <xs:annotation>
              <xs:documentation>Account Suspense To Unapplied</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AcctUnappliedSuspTxn">
            <xs:annotation>
              <xs:documentation>Default unapplied To Suspense</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AgencyBillMoneyReceivedTxn">
            <xs:annotation>
              <xs:documentation>Agency Money Received</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AgencyDisbursementPaid">
            <xs:annotation>
              <xs:documentation>Agency Disbursement Paid</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BaseAcctSuspenseTxn">
            <xs:annotation>
              <xs:documentation>Base Account Suspense Transaction</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BaseNonReceivableTxn">
            <xs:annotation>
              <xs:documentation>Base Non Receivable Transaction</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BaseProdSuspenseTxn">
            <xs:annotation>
              <xs:documentation>Base Producer Suspense Transaction</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BaseSuspenseTxn">
            <xs:annotation>
              <xs:documentation>Base Suspense Transaction</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ChargeBilled">
            <xs:annotation>
              <xs:documentation>Charge Billed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ChargeDue">
            <xs:annotation>
              <xs:documentation>Charge Due</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ChargeExpenseRollup">
            <xs:annotation>
              <xs:documentation>Charge Expense Rollup</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ChargeInstanceTxn">
            <xs:annotation>
              <xs:documentation>Charge Instance</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ChargeInvoicingTxn">
            <xs:annotation>
              <xs:documentation>Charge Invoicing</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ChargeNegWrtoffRollup">
            <xs:annotation>
              <xs:documentation>Charge Negative Writeoff Rollup</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ChargePaidFromAccount">
            <xs:annotation>
              <xs:documentation>Charge Paid from Account</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ChargePaidFromProducer">
            <xs:annotation>
              <xs:documentation>Charge Paid from Producer</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ChargePaidFromUnapplied">
            <xs:annotation>
              <xs:documentation>Charge Paid from Unapplied</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ChargePatternTxn">
            <xs:annotation>
              <xs:documentation>Charge Pattern Transaction</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ChargeReserveRollup">
            <xs:annotation>
              <xs:documentation>Charge Reserve Rollup</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ChargeRevenueRollup">
            <xs:annotation>
              <xs:documentation>Charge Revenue Rollup</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ChargeTransaction">
            <xs:annotation>
              <xs:documentation>Charge Transaction</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ChargeWriteoffRollup">
            <xs:annotation>
              <xs:documentation>Charge Writeoff Closure</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ChargeWrittenOff">
            <xs:annotation>
              <xs:documentation>Charge Written Off</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CmsnTransferredFrom">
            <xs:annotation>
              <xs:documentation>Commission Transferred From</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CmsnTransferredTo">
            <xs:annotation>
              <xs:documentation>Commission Transferred To</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CmsnsExpenseRollup">
            <xs:annotation>
              <xs:documentation>Commission Expense Rollup</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CollReqSegregate">
            <xs:annotation>
              <xs:documentation>Collateral Requirement Segregate</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CollReqTransaction">
            <xs:annotation>
              <xs:documentation>Collateral Requirement Transaction</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CollReqTransfer">
            <xs:annotation>
              <xs:documentation>Collateral Requirement Transfer</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CollReqUnSegregate">
            <xs:annotation>
              <xs:documentation>Collateral Requirement UnSegregate</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CollateralDisbPaid">
            <xs:annotation>
              <xs:documentation>Disburse Collateral</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CollateralDrawdown">
            <xs:annotation>
              <xs:documentation>Drawdown Collateral</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CollateralPaidFromAccount">
            <xs:annotation>
              <xs:documentation>Non Receivable Collateral Paid</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CollateralTransaction">
            <xs:annotation>
              <xs:documentation>Collateral Transaction</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CommissionAdjusted">
            <xs:annotation>
              <xs:documentation>Commission Adjusted</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CommissionEarned">
            <xs:annotation>
              <xs:documentation>Commission Earned</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CommissionPayable">
            <xs:annotation>
              <xs:documentation>Commission Payable</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CommissionsReserveNegativeWriteoffTxn">
            <xs:annotation>
              <xs:documentation>Commissions Reserve Negative Writeoff</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CommissionsReservePositiveWriteoffTxn">
            <xs:annotation>
              <xs:documentation>Commissions Reserve Writeoff</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CommissionsReserveTxn">
            <xs:annotation>
              <xs:documentation>Commissions Reserve transaction</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CommissionsReserveWriteoffTxn">
            <xs:annotation>
              <xs:documentation>Commissions Reserve Writeoff</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CreditTransaction">
            <xs:annotation>
              <xs:documentation>Credit Transaction</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DirectBillMoneyReceivedTxn">
            <xs:annotation>
              <xs:documentation>Direct Bill Money Received</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DisbursementPaid">
            <xs:annotation>
              <xs:documentation>Disbursement Paid</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_FundsXferAcctToColl">
            <xs:annotation>
              <xs:documentation>Funds Transferred from Account to the Account's Collateral</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_InitialChargeTxn">
            <xs:annotation>
              <xs:documentation>Initial Charge</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ManualCmsnEarned">
            <xs:annotation>
              <xs:documentation>Manual Commission Earned</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MoneyReceivedTransaction">
            <xs:annotation>
              <xs:documentation>Money Received</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PolicyChangeCmsnTxn">
            <xs:annotation>
              <xs:documentation>Policy Change Commission</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PolicyCmsnPayable">
            <xs:annotation>
              <xs:documentation>Policy Commission Payable</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PolicyIncentivesEarned">
            <xs:annotation>
              <xs:documentation>Policy Incentives Earned</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ProRataChargeEarned">
            <xs:annotation>
              <xs:documentation>Pro-Rata Charge Earned</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ProdCodeBonusEarned">
            <xs:annotation>
              <xs:documentation>Producer Code Bonus Earned</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ProdCodeCmsnPayable">
            <xs:annotation>
              <xs:documentation>Producer Code Commission Payable</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ProdSuspenseReleaseTxn">
            <xs:annotation>
              <xs:documentation>Producer Suspense To Unapplied</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ProdUnappliedSuspTxn">
            <xs:annotation>
              <xs:documentation>Producer Unapplied To Suspense</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ProducerAdvanceExpired">
            <xs:annotation>
              <xs:documentation>Producer Advance Expired</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ProducerAdvancePayable">
            <xs:annotation>
              <xs:documentation>Producer Advance Payable</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ProducerAdvanceRepaid">
            <xs:annotation>
              <xs:documentation>Producer Advance Repaid</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ProducerNegWriteoffTxn">
            <xs:annotation>
              <xs:documentation>Producer Negative Write-Off</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ProducerPayableTransferTxn">
            <xs:annotation>
              <xs:documentation>Producer CommissionsPayable Transfer Transaction</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ProducerPaymentRecd">
            <xs:annotation>
              <xs:documentation>Producer Payment Received</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ProducerPaymentSent">
            <xs:annotation>
              <xs:documentation>Producer Payment Sent</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ProducerPaymentTxn">
            <xs:annotation>
              <xs:documentation>Producer Payment Transaction</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ProducerTransaction">
            <xs:annotation>
              <xs:documentation>Producer Transaction</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ProducerWriteoff">
            <xs:annotation>
              <xs:documentation>Producer Writeoff</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ReserveCmsnEarned">
            <xs:annotation>
              <xs:documentation>Reserve Commission Earned</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SubmissionCmsnTxn">
            <xs:annotation>
              <xs:documentation>Submission Commission</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SuspPymtDisbPaid">
            <xs:annotation>
              <xs:documentation>Suspense Payment Disbursement Paid</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SuspPymtTransaction">
            <xs:annotation>
              <xs:documentation>Suspense Payment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Transaction">
            <xs:annotation>
              <xs:documentation>Transaction</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TransferTransaction">
            <xs:annotation>
              <xs:documentation>Funds Transferred between Producer or Account unapplied funds</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ChargePattern" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype typelist for entity ChargePattern</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_ChargePattern">
            <xs:annotation>
              <xs:documentation>ChargePattern</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CollateralCharge">
            <xs:annotation>
              <xs:documentation>Collateral Charge</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ImmediateCharge">
            <xs:annotation>
              <xs:documentation>Immediate Charge</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PassThroughCharge">
            <xs:annotation>
              <xs:documentation>Pass-Through Charge</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ProRataCharge">
            <xs:annotation>
              <xs:documentation>Pro-Rata Charge</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_RecaptureCharge">
            <xs:annotation>
              <xs:documentation>Recapture Charge</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ChargeCategory" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Defines categories of charges available</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_fee">
            <xs:annotation>
              <xs:documentation>Fee</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_general">
            <xs:annotation>
              <xs:documentation>General</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_premium">
            <xs:annotation>
              <xs:documentation>Premium</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_recapture">
            <xs:annotation>
              <xs:documentation>Recapture</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_tax">
            <xs:annotation>
              <xs:documentation>Tax</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="InvoiceTreatment" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Defines the ways in which an charge can be invoiced</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_depositandinstallments">
            <xs:annotation>
              <xs:documentation>Use payment plan settings to break charge up into down payment and installments</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_onetime">
            <xs:annotation>
              <xs:documentation>Add single invoice item using the date of the charge as the date of the invoice item</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_singledeposit">
            <xs:annotation>
              <xs:documentation>Use payment plan deposit treatment to schedule a single invoice item for the charge</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_singleinstallment">
            <xs:annotation>
              <xs:documentation>Use payment plan installment treatment to schedule a single invoice item for the charge</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ChargePriority" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Defines priorities for charges</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_high">
            <xs:annotation>
              <xs:documentation>High</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_low">
            <xs:annotation>
              <xs:documentation>Low</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_medium">
            <xs:annotation>
              <xs:documentation>Medium</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TAccountPattern" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype typelist for entity TAccountPattern</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_ChargeTAccountPattern">
            <xs:annotation>
              <xs:documentation>Charge TAccountPattern</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MultiTAccountPattern">
            <xs:annotation>
              <xs:documentation>MultiTAccountPattern</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SingleTAccountPattern">
            <xs:annotation>
              <xs:documentation>SingleTAccountPattern</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TAccountPattern">
            <xs:annotation>
              <xs:documentation>TAccountPattern</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TAccountPatternSuffix" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Defines suffixes used for t-account patterns generated by charge patterns</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_billed">
            <xs:annotation>
              <xs:documentation>Billed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_due">
            <xs:annotation>
              <xs:documentation>Due</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_expense">
            <xs:annotation>
              <xs:documentation>Expense</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_negativewriteoff">
            <xs:annotation>
              <xs:documentation>Negative Writeoff (Revenue)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_reserve">
            <xs:annotation>
              <xs:documentation>Reserve</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_revenue">
            <xs:annotation>
              <xs:documentation>Revenue</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_unbilled">
            <xs:annotation>
              <xs:documentation>Unbilled</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_unearned">
            <xs:annotation>
              <xs:documentation>Unearned</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_writeoffexpense">
            <xs:annotation>
              <xs:documentation>Writeoff Expense</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TAccountType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Defines the legal t-account types</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_asset">
            <xs:annotation>
              <xs:documentation>Asset</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_equity">
            <xs:annotation>
              <xs:documentation>Equity</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_expense">
            <xs:annotation>
              <xs:documentation>Expense</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_liability">
            <xs:annotation>
              <xs:documentation>Liability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_revenue">
            <xs:annotation>
              <xs:documentation>Revenue</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TAccountContainer" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype typelist for entity TAccountContainer</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_AcctTAcctContainer">
            <xs:annotation>
              <xs:documentation>AcctTAcctContainer</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ChargeCmsnTAcctContainer">
            <xs:annotation>
              <xs:documentation>ChargeCmsnTAcctContainer</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ChargeTAcctContainer">
            <xs:annotation>
              <xs:documentation>ChargeTAcctContainer</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CollReqTAcctContainer">
            <xs:annotation>
              <xs:documentation>CollReqTAcctContainer</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CollTAcctContainer">
            <xs:annotation>
              <xs:documentation>CollTAcctContainer</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PolTAcctContainer">
            <xs:annotation>
              <xs:documentation>PolTAcctContainer</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PolicyCmsnTAcctContainer">
            <xs:annotation>
              <xs:documentation>PolicyCmsnTAcctContainer</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ProdCodeTAcctContainer">
            <xs:annotation>
              <xs:documentation>ProdCodeTAcctContainer</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ProducerTAcctContainer">
            <xs:annotation>
              <xs:documentation>ProducerTAcctContainer</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SuspPymtTAcctContainer">
            <xs:annotation>
              <xs:documentation>SuspPymtTAcctContainer</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TAccountContainer">
            <xs:annotation>
              <xs:documentation>TAccountContainer</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PaymentMethod" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Defines available payment methods</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_accountunapplied">
            <xs:annotation>
              <xs:documentation>Unapplied fund (Account)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ach">
            <xs:annotation>
              <xs:documentation>ACH/EFT</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_cash">
            <xs:annotation>
              <xs:documentation>Cash</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_check">
            <xs:annotation>
              <xs:documentation>Check</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_creditcard">
            <xs:annotation>
              <xs:documentation>Credit Card</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_misc">
            <xs:annotation>
              <xs:documentation>Miscellaneous</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_producerunapplied">
            <xs:annotation>
              <xs:documentation>Unapplied fund (Producer Unapplied)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_responsive">
            <xs:annotation>
              <xs:documentation>Responsive</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_wire">
            <xs:annotation>
              <xs:documentation>Wire</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ComplianceStatus" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Defines status available</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_closed">
            <xs:annotation>
              <xs:documentation>Closed Requirement</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_compliant">
            <xs:annotation>
              <xs:documentation>Compliant</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_notcompliant">
            <xs:annotation>
              <xs:documentation>Not Compliant</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pending">
            <xs:annotation>
              <xs:documentation>Pending Compliance</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CollateralRequirementType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Defines types of Requirements</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_cash">
            <xs:annotation>
              <xs:documentation>Cash requirement</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_loc">
            <xs:annotation>
              <xs:documentation>LOC requirement</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_mixed">
            <xs:annotation>
              <xs:documentation>Mixed Requirement</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="LetterOfCreditStatus" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Defines the status of the LOC</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_current">
            <xs:annotation>
              <xs:documentation>Current LOC</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_expired">
            <xs:annotation>
              <xs:documentation>Expired LOC</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_removed">
            <xs:annotation>
              <xs:documentation>Removed LOC</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CollateralContext" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype typelist for entity CollateralContext</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_CollDisbPaidContext">
            <xs:annotation>
              <xs:documentation>CollDisbPaidContext</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CollReqContext">
            <xs:annotation>
              <xs:documentation>CollReqContext</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CollReqTransferContext">
            <xs:annotation>
              <xs:documentation>CollReqTransferContext</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CollateralContext">
            <xs:annotation>
              <xs:documentation>CollateralContext</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Disbursement" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype typelist for entity Disbursement</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_AccountDisbursement">
            <xs:annotation>
              <xs:documentation>Account Disbursement</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AgencyDisbursement">
            <xs:annotation>
              <xs:documentation>Agency Disbursement</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CollateralDisbursement">
            <xs:annotation>
              <xs:documentation>Collateral Disbursement</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Disbursement">
            <xs:annotation>
              <xs:documentation>Disbursement</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SuspenseDisbursement">
            <xs:annotation>
              <xs:documentation>Suspense Disbursement</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="BaseDist" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype typelist for entity BaseDist</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_AgencyCycleDist">
            <xs:annotation>
              <xs:documentation>AgencyCycleDist</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AgencyCyclePayment">
            <xs:annotation>
              <xs:documentation>AgencyCyclePayment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AgencyCyclePromise">
            <xs:annotation>
              <xs:documentation>AgencyCyclePromise</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BaseDist">
            <xs:annotation>
              <xs:documentation>BaseDist</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DirectBillPayment">
            <xs:annotation>
              <xs:documentation>DirectBillPayment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="BaseMoneyReceived" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype typelist for entity BaseMoneyReceived</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_AgencyBillMoneyRcvd">
            <xs:annotation>
              <xs:documentation>AgencyBillMoneyRcvd</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BaseMoneyReceived">
            <xs:annotation>
              <xs:documentation>BaseMoneyReceived</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DirectBillMoneyRcvd">
            <xs:annotation>
              <xs:documentation>DirectBillMoneyRcvd</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PaymentMoneyReceived">
            <xs:annotation>
              <xs:documentation>PaymentMoneyReceived</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PromisedMoney">
            <xs:annotation>
              <xs:documentation>PromisedMoney</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ZeroDollarAMR">
            <xs:annotation>
              <xs:documentation>ZeroDollarAMR</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ZeroDollarDMR">
            <xs:annotation>
              <xs:documentation>ZeroDollarDMR</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ZeroDollarReversal">
            <xs:annotation>
              <xs:documentation>ZeroDollarReversal</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="BaseNonReceivableDistItem" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype typelist for entity BaseNonReceivableDistItem</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_AgencySuspPmntItem">
            <xs:annotation>
              <xs:documentation>AgencySuspPmntItem</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AgencySuspPromiseItem">
            <xs:annotation>
              <xs:documentation>AgencySuspPromiseItem</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BaseNonReceivableDistItem">
            <xs:annotation>
              <xs:documentation>BaseNonReceivableDistItem</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BaseSuspDistItem">
            <xs:annotation>
              <xs:documentation>BaseSuspDistItem</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BaseSuspPmntItem">
            <xs:annotation>
              <xs:documentation>BaseSuspPmntItem</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CollateralPaymentItem">
            <xs:annotation>
              <xs:documentation>CollateralPaymentItem</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DirectSuspPmntItem">
            <xs:annotation>
              <xs:documentation>DirectSuspPmntItem</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ProducerContext" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype typelist for entity ProducerContext</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_CommissionWriteoffDistItemContext">
            <xs:annotation>
              <xs:documentation>CommissionWriteoffDistItemContext</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NegWriteoffProdContext">
            <xs:annotation>
              <xs:documentation>NegWriteoffProdContext</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ProdPymtRecdContext">
            <xs:annotation>
              <xs:documentation>ProdPymtRecdContext</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ProdPymtSentContext">
            <xs:annotation>
              <xs:documentation>ProdPymtSentContext</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ProdWriteoffContext">
            <xs:annotation>
              <xs:documentation>ProdWriteoffContext</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ProducerContext">
            <xs:annotation>
              <xs:documentation>ProducerContext</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ProducerPayableTransferContext">
            <xs:annotation>
              <xs:documentation>ProducerPayableTransferContext</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="NegativeWriteoff" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype typelist for entity NegativeWriteoff</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_AcctNegativeWriteoff">
            <xs:annotation>
              <xs:documentation>AcctNegativeWriteoff</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NegativeWriteoff">
            <xs:annotation>
              <xs:documentation>NegativeWriteoff</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ProdNegativeWriteoff">
            <xs:annotation>
              <xs:documentation>ProdNegativeWriteoff</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Activity" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype typelist for entity Activity</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_AcctInactiveActivity">
            <xs:annotation>
              <xs:documentation>AcctInactiveActivity</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Activity">
            <xs:annotation>
              <xs:documentation>Activity</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ActivityCreatedByAppr">
            <xs:annotation>
              <xs:documentation>ActivityCreatedByAppr</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AdvcCmsnApprActivity">
            <xs:annotation>
              <xs:documentation>AdvcCmsnApprActivity</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BonusCmsnApprActivity">
            <xs:annotation>
              <xs:documentation>BonusCmsnApprActivity</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ChrgRvslApprActivity">
            <xs:annotation>
              <xs:documentation>ChrgRvslApprActivity</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CreditApprActivity">
            <xs:annotation>
              <xs:documentation>CreditApprActivity</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CreditReversalApprActivity">
            <xs:annotation>
              <xs:documentation>CreditReversalApprActivity</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DisbApprActivity">
            <xs:annotation>
              <xs:documentation>DisbApprActivity</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_FundsTransferReversalApprovalActivity">
            <xs:annotation>
              <xs:documentation>FundsTransferReversalApprovalActivity</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_FundsXferApprActivity">
            <xs:annotation>
              <xs:documentation>FundsXferApprActivity</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NegWoffRevApprActivity">
            <xs:annotation>
              <xs:documentation>NegWoffRevApprActivity</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NegWrofApprActivity">
            <xs:annotation>
              <xs:documentation>NegWrofApprActivity</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ProducerPayableTransferApprovalActivity">
            <xs:annotation>
              <xs:documentation>ProducerPayableTransferApprovalActivity</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SharedActivity">
            <xs:annotation>
              <xs:documentation>SharedActivity</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WriteoffApprActivity">
            <xs:annotation>
              <xs:documentation>WriteoffApprActivity</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WtoffRevApprActivity">
            <xs:annotation>
              <xs:documentation>WtoffRevApprActivity</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ApprovalStatus" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>The approval status of an approvable entity</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_approved">
            <xs:annotation>
              <xs:documentation>The entity has been approved</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_rejected">
            <xs:annotation>
              <xs:documentation>The entity has been rejected</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_unapproved">
            <xs:annotation>
              <xs:documentation>Pending approval</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TransferReason" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Defines the reasons for a transfer</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_applyToRenewal">
            <xs:annotation>
              <xs:documentation>Apply To Renewal</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_inappropriate">
            <xs:annotation>
              <xs:documentation>inappropriate distribution</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_returnedPayment">
            <xs:annotation>
              <xs:documentation>returned payment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ReversalReason" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Defines the reasons why a transaction can be reversed</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_customerrequest">
            <xs:annotation>
              <xs:documentation>Customer Request</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_paymentdeclined">
            <xs:annotation>
              <xs:documentation>Payment Declined</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_processingerror">
            <xs:annotation>
              <xs:documentation>Processing Error</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_void">
            <xs:annotation>
              <xs:documentation>Void</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TAccount" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype typelist for entity TAccount</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_MultiTAccount">
            <xs:annotation>
              <xs:documentation>MultiTAccount</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TAccount">
            <xs:annotation>
              <xs:documentation>TAccount</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="WriteoffReversalReason" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Defines reasons why a writeoff was reversed</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_ErrorCorrection">
            <xs:annotation>
              <xs:documentation>Error Correction</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PaymentReceived">
            <xs:annotation>
              <xs:documentation>Payment Received</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CreditType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Types of ad-hoc account level credits</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_collections">
            <xs:annotation>
              <xs:documentation>Collections</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_goodwill">
            <xs:annotation>
              <xs:documentation>Goodwill</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_interest">
            <xs:annotation>
              <xs:documentation>Interest</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_other">
            <xs:annotation>
              <xs:documentation>Other</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CommissionPayment" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype typelist for entity CommissionPayment</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_AdvanceCmsnPayment">
            <xs:annotation>
              <xs:documentation>AdvanceCmsnPayment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BonusCmsnPayment">
            <xs:annotation>
              <xs:documentation>BonusCmsnPayment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CommissionPayment">
            <xs:annotation>
              <xs:documentation>CommissionPayment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DelayedCmsnPayment">
            <xs:annotation>
              <xs:documentation>DelayedCmsnPayment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ManualCmsnPayment">
            <xs:annotation>
              <xs:documentation>ManualCmsnPayment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_StandardCmsnPayment">
            <xs:annotation>
              <xs:documentation>StandardCmsnPayment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CommissionPaymentType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Commission Payment Type used by New Comm Paymt Screen</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_allcurrent">
            <xs:annotation>
              <xs:documentation>Pay all commission due</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_other">
            <xs:annotation>
              <xs:documentation>Pay other amount</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ProducerPayment" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype typelist for entity ProducerPayment</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_AutoPayment">
            <xs:annotation>
              <xs:documentation>Automatic Payment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ManualPayment">
            <xs:annotation>
              <xs:documentation>Manual Payment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ProducerPayment">
            <xs:annotation>
              <xs:documentation>ProducerPayment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="OutgoingPayment" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype typelist for entity OutgoingPayment</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_OutgoingDisbPmnt">
            <xs:annotation>
              <xs:documentation>OutgoingDisbPmnt</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_OutgoingPayment">
            <xs:annotation>
              <xs:documentation>OutgoingPayment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_OutgoingProducerPmnt">
            <xs:annotation>
              <xs:documentation>OutgoingProducerPmnt</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="OutgoingPaymentStatus" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>The status of an outgoing payment</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_cleared">
            <xs:annotation>
              <xs:documentation>Payment has cleared</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_draft">
            <xs:annotation>
              <xs:documentation>Draft; not yet submitted to a back-end accounting system</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_issued">
            <xs:annotation>
              <xs:documentation>Payment has been issued</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pendingstop">
            <xs:annotation>
              <xs:documentation>A stop payment request is pending</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pendingvoid">
            <xs:annotation>
              <xs:documentation>A void request is pending</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_requested">
            <xs:annotation>
              <xs:documentation>Requested of the accounting system</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_requesting">
            <xs:annotation>
              <xs:documentation>In the process of being requested from the accounting system</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_stopped">
            <xs:annotation>
              <xs:documentation>A stop payment has been issued for this payment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_voided">
            <xs:annotation>
              <xs:documentation>The payment is voided</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ProducerPaymentStatus" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Status of the ProducerPayment</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_sent">
            <xs:annotation>
              <xs:documentation>Sent</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_voided">
            <xs:annotation>
              <xs:documentation>Voided</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CommissionPaymentTime" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Commission Payment Time used by New Comm Paymt Screen</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_immediately">
            <xs:annotation>
              <xs:documentation>Pay commission now</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_nextpayment">
            <xs:annotation>
              <xs:documentation>Pay with next payment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_payondate">
            <xs:annotation>
              <xs:documentation>Pay on Date</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ActivityClass" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>The class of the activity</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_event">
            <xs:annotation>
              <xs:documentation>Event</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_task">
            <xs:annotation>
              <xs:documentation>Task</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Priority" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Basic priority typelist</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_high">
            <xs:annotation>
              <xs:documentation>High priority - should be addressed before normal activities</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_low">
            <xs:annotation>
              <xs:documentation>Low - needs to be addressed eventually but there is no urgency</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_normal">
            <xs:annotation>
              <xs:documentation>Normal</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_urgent">
            <xs:annotation>
              <xs:documentation>Highest priority - must be addressed immediately</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TroubleTicketType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Defines the various types of trouble tickets</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_automatic">
            <xs:annotation>
              <xs:documentation>Automatically Generated</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_customercomplaint">
            <xs:annotation>
              <xs:documentation>Customer Complaint</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_customerquestion">
            <xs:annotation>
              <xs:documentation>Customer Question</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_disasterhold">
            <xs:annotation>
              <xs:documentation>Disaster Hold</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_dispute">
            <xs:annotation>
              <xs:documentation>Dispute</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_processingerror">
            <xs:annotation>
              <xs:documentation>Processing Error</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_reporterror">
            <xs:annotation>
              <xs:documentation>Report Error</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ActivityType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>The type of activity</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_approval">
            <xs:annotation>
              <xs:documentation>Approval</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_approvaldenied">
            <xs:annotation>
              <xs:documentation>Approval Denied</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_assignmentreview">
            <xs:annotation>
              <xs:documentation>Assignment Review</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_general">
            <xs:annotation>
              <xs:documentation>General</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="WriteoffChannel" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Defines the ways in which writeoffs are added to BillingCenter</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_api">
            <xs:annotation>
              <xs:documentation>API</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ui">
            <xs:annotation>
              <xs:documentation>UI</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ProducerStatementType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>The type of a Producer Statement</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_preupgrade">
            <xs:annotation>
              <xs:documentation>Pre-Upgrade</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_production">
            <xs:annotation>
              <xs:documentation>Production</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_upgrade">
            <xs:annotation>
              <xs:documentation>Upgrade</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AuthorityEvent" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype typelist for entity AuthorityEvent</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_AdvcCmsnAuthEvent">
            <xs:annotation>
              <xs:documentation>AdvcCmsnAuthEvent</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AuthorityEvent">
            <xs:annotation>
              <xs:documentation>AuthorityEvent</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BonusCmsnAuthEvent">
            <xs:annotation>
              <xs:documentation>BonusCmsnAuthEvent</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ChargeCommissionWriteoffAuthorityEvent">
            <xs:annotation>
              <xs:documentation>ChargeCommissionWriteoffAuthorityEvent</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ChrgRvslAuthEvent">
            <xs:annotation>
              <xs:documentation>ChrgRvslAuthEvent</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CreditAuthEvent">
            <xs:annotation>
              <xs:documentation>CreditAuthEvent</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CreditReversalAuthEvent">
            <xs:annotation>
              <xs:documentation>CreditReversalAuthEvent</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DisbAuthEvent">
            <xs:annotation>
              <xs:documentation>DisbAuthEvent</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_FundsTransferReversalAuthorityEvent">
            <xs:annotation>
              <xs:documentation>FundsTransferReversalAuthorityEvent</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_FundsXferAuthEvent">
            <xs:annotation>
              <xs:documentation>FundsXferAuthEvent</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NegWrofAuthEvent">
            <xs:annotation>
              <xs:documentation>NegWrofAuthEvent</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NegWtoffRevAuthEvent">
            <xs:annotation>
              <xs:documentation>NegWtoffRevAuthEvent</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ProducerPayableTransferAuthorityEvent">
            <xs:annotation>
              <xs:documentation>ProducerPayableTransferAuthorityEvent</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WriteoffAuthEvent">
            <xs:annotation>
              <xs:documentation>WriteoffAuthEvent</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WtoffRevAuthEvent">
            <xs:annotation>
              <xs:documentation>WtoffRevAuthEvent</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Reason" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Reason for disbursement</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_Automatic">
            <xs:annotation>
              <xs:documentation>Automatic</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Cancellation">
            <xs:annotation>
              <xs:documentation>Cancellation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Other">
            <xs:annotation>
              <xs:documentation>Other</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Overpay">
            <xs:annotation>
              <xs:documentation>Overpayment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PolicyChange">
            <xs:annotation>
              <xs:documentation>Return Premium Policy Change</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ReturnPremiumAudit">
            <xs:annotation>
              <xs:documentation>Return Premium Audit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WrongPayer">
            <xs:annotation>
              <xs:documentation>Wrong Payer</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="DisbursementStatus" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>The Status of the disbursement</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_Approved">
            <xs:annotation>
              <xs:documentation>Approved</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AwaitingApproval">
            <xs:annotation>
              <xs:documentation>Awaiting Approval</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Reapplied">
            <xs:annotation>
              <xs:documentation>Reapplied</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Rejected">
            <xs:annotation>
              <xs:documentation>Rejected</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Sent">
            <xs:annotation>
              <xs:documentation>Sent</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Voided">
            <xs:annotation>
              <xs:documentation>Voided</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="VoidReason" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>The reason for voiding the disbursement</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_AddresseeError">
            <xs:annotation>
              <xs:documentation>Addressee Error</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CheckReissue">
            <xs:annotation>
              <xs:documentation>Check Reissue</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="NonReceivableItemContext" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype typelist for entity NonReceivableItemContext</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_AcctSuspenseContext">
            <xs:annotation>
              <xs:documentation>AcctSuspenseContext</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CollateralPaidContext">
            <xs:annotation>
              <xs:documentation>CollateralPaidContext</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NonReceivableItemContext">
            <xs:annotation>
              <xs:documentation>NonReceivableItemContext</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ProdSuspenseContext">
            <xs:annotation>
              <xs:documentation>ProdSuspenseContext</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CreditContext" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype typelist for entity CreditContext</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_CreditContext">
            <xs:annotation>
              <xs:documentation>CreditContext</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AccountContext" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype typelist for entity AccountContext</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_AccountContext">
            <xs:annotation>
              <xs:documentation>AccountContext</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AccountNegativeWriteoffContext">
            <xs:annotation>
              <xs:documentation>AccountNegativeWriteoffContext</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DisbPaidContext">
            <xs:annotation>
              <xs:documentation>DisbPaidContext</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SuspPymtContext" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype typelist for entity SuspPymtContext</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_SuspPymntDisbPdContext">
            <xs:annotation>
              <xs:documentation>SuspPymntDisbPdContext</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SuspPymtContext">
            <xs:annotation>
              <xs:documentation>SuspPymtContext</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CommissionWriteoffDistItemType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Defines the types of commission reduction transactions supported by BillingCenter.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_negative">
            <xs:annotation>
              <xs:documentation>Creates a CommissionsReserveNegativeWriteoffTxn</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_positive">
            <xs:annotation>
              <xs:documentation>Creates a CommissionsReservePositiveWriteoffTxn</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="WriteoffReason" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Reason for the writeoff</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_AgencyPmntDisposition">
            <xs:annotation>
              <xs:documentation>Writeoff on Cash Application</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CommissionRemainder">
            <xs:annotation>
              <xs:documentation>Commission Remainder</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LowBalanceInvoice">
            <xs:annotation>
              <xs:documentation>Low Balance Invoice</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MinorAdjustment">
            <xs:annotation>
              <xs:documentation>Minor Adjustment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_miscellaneous">
            <xs:annotation>
              <xs:documentation>Miscellaneous</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_negotiation">
            <xs:annotation>
              <xs:documentation>Negotiation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_recoveryshortfall">
            <xs:annotation>
              <xs:documentation>Recovery Shortfall</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_uncollectable">
            <xs:annotation>
              <xs:documentation>Uncollectable</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="DistItemDisposition" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Options for disposition of an Agency Distribution Item during exception processing when an AgencyCycleDist is executed</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_autoexception">
            <xs:annotation>
              <xs:documentation>Perform automatic exception processing on the agency distribution item - The InvoiceItem plugin will determine if the Dist Item will result in the Invoice Item becoming an exception.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_carryforward">
            <xs:annotation>
              <xs:documentation>Sets the carried forward date on the invoice item targeted by the distribution item.  This will keep this invoice item from showing up as an exception, until the carried forward date is cleared.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_exception">
            <xs:annotation>
              <xs:documentation>Explicitly mark the invoice item targeted by the distribution item as an exception, regardless of whether or not it is unsettled.  This will keep the invoice item as an exception, until LockAsException is cleared.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_writeoff">
            <xs:annotation>
              <xs:documentation>Write off the unsettled values on the invoice item targeted by the distribution item.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ItemEventType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Defines the types of events that can occur on an InvoiceItem</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_amountChanged">
            <xs:annotation>
              <xs:documentation>Item Gross Amount Changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_assigned">
            <xs:annotation>
              <xs:documentation>Item Assigned to Payer</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_billed">
            <xs:annotation>
              <xs:documentation>Item Billed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_charged">
            <xs:annotation>
              <xs:documentation>Item Charged</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_cmsnPayment">
            <xs:annotation>
              <xs:documentation>DB Commission Payment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_cmsnRedistributed">
            <xs:annotation>
              <xs:documentation>Commission Redistributed Across Items</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_cmsnReserved">
            <xs:annotation>
              <xs:documentation>Commission Reserved</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_cmsnReversed">
            <xs:annotation>
              <xs:documentation>Commission Reversed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_cmsnWriteoff">
            <xs:annotation>
              <xs:documentation>Commission Written Off</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_cmsnWriteoffMovedFrom">
            <xs:annotation>
              <xs:documentation>Commission Writeoff Moved From Invoice Item</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_cmsnWriteoffMovedTo">
            <xs:annotation>
              <xs:documentation>Commission Writeoff Moved To Invoice Item</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_cmsnWriteoffRev">
            <xs:annotation>
              <xs:documentation>Commission Written Off Reversed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_commissionMovedFrom">
            <xs:annotation>
              <xs:documentation>Commission Payable Moved</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_commissionMovedTo">
            <xs:annotation>
              <xs:documentation>Commission Payable Moved</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_due">
            <xs:annotation>
              <xs:documentation>Item Made Due</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_earned">
            <xs:annotation>
              <xs:documentation>Commission Earned</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_itemAdded">
            <xs:annotation>
              <xs:documentation>Item Added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_moved">
            <xs:annotation>
              <xs:documentation>Item Moved to a new invoice</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_onset">
            <xs:annotation>
              <xs:documentation>Item Created as Onset</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_payment">
            <xs:annotation>
              <xs:documentation>Payment Received</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_paymentMovedFrom">
            <xs:annotation>
              <xs:documentation>This type is used to describe an event where a payment from another invoice item was moved onto the event's invoice item.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_paymentMovedTo">
            <xs:annotation>
              <xs:documentation>This type is used to describe an event where a payment on the event's invoice item was moved to another invoice item.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_paymentPlanRefactor">
            <xs:annotation>
              <xs:documentation>Item Created by Payment Plan Refactor</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_paymentReversed">
            <xs:annotation>
              <xs:documentation>Payment Reversed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pointInTime">
            <xs:annotation>
              <xs:documentation>Point-in-Time Transfer to ProducerCode</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_rateChange">
            <xs:annotation>
              <xs:documentation>Commission Rate Change</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_retroactive">
            <xs:annotation>
              <xs:documentation>Retroactive Transfer to ProducerCode</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_reversal">
            <xs:annotation>
              <xs:documentation>Item Created as Reversal</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_reversed">
            <xs:annotation>
              <xs:documentation>Item Reversed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_writeoff">
            <xs:annotation>
              <xs:documentation>Charge Written Off</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_writeoffRev">
            <xs:annotation>
              <xs:documentation>Charge Written Off Reversed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ExceptionLock" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Describes how and if the exception status on an invoice item should be locked.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_exception">
            <xs:annotation>
              <xs:documentation>The invoice item should be marked as an exception and stay marked as an exception, until this lock is cleared.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_none">
            <xs:annotation>
              <xs:documentation>This is the 'cleared' state.  There is no lock on the exception status of the invoice item.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_notexception">
            <xs:annotation>
              <xs:documentation>The invoice item should not be marked as an exception, and should stay not marked as an exception, until this lock is cleared.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="InvoiceItemType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Defines the types of invoice items</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_commissionadjustment">
            <xs:annotation>
              <xs:documentation>Commission Adjustment from change in Commission</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_commissionremainder">
            <xs:annotation>
              <xs:documentation>Commission Remainder from distribution across invoice items (writeoff)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_commissionupgrade">
            <xs:annotation>
              <xs:documentation>Item for Commission Upgrade</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_deposit">
            <xs:annotation>
              <xs:documentation>Down Payment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_depositadjustment">
            <xs:annotation>
              <xs:documentation>Down Payment Adjustment from change in Payment Plan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_installment">
            <xs:annotation>
              <xs:documentation>Installment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_onetime">
            <xs:annotation>
              <xs:documentation>One-Time Payment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Plan" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype typelist for entity Plan</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_AgencyBillPlan">
            <xs:annotation>
              <xs:documentation>AgencyBillPlan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BillingPlan">
            <xs:annotation>
              <xs:documentation>BillingPlan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CommissionPlan">
            <xs:annotation>
              <xs:documentation>CommissionPlan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DelinquencyPlan">
            <xs:annotation>
              <xs:documentation>DelinquencyPlan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PaymentAllocationPlan">
            <xs:annotation>
              <xs:documentation>Moneys Allocation Plan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PaymentPlan">
            <xs:annotation>
              <xs:documentation>PaymentPlan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Plan">
            <xs:annotation>
              <xs:documentation>Plan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ReturnPremiumPlan">
            <xs:annotation>
              <xs:documentation>Return Premium Plan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AggregationType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Defines the types of granularity of transactions on invoices</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_categories">
            <xs:annotation>
              <xs:documentation>line items are categories</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_chargegroups">
            <xs:annotation>
              <xs:documentation>line items are charge groups</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_charges">
            <xs:annotation>
              <xs:documentation>line items are charges</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_contexts">
            <xs:annotation>
              <xs:documentation>line items are contexts</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_policies">
            <xs:annotation>
              <xs:documentation>line items are policies</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AvailableDisbAmtType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Defines how to calculate the amount available for automatic disbursement</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_unappliedminusauc">
            <xs:annotation>
              <xs:documentation>Account's unapplied minus the amount under contract</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_unappliedminusbilled">
            <xs:annotation>
              <xs:documentation>Account's unapplied minus the amount currently billed and due</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="DayOfMonthLogic" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Defines the rules for picking the day of month.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_exact">
            <xs:annotation>
              <xs:documentation>Pick the exact given day of month.  (Max out to the last day of month where necessary)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_firstbusinessday">
            <xs:annotation>
              <xs:documentation>Pick the first business day of the month.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_lastbusinessday">
            <xs:annotation>
              <xs:documentation>Pick the last business day of the month.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_nextbusinessday">
            <xs:annotation>
              <xs:documentation>Pick the first business day on or after the given day of month.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_prevbusinessday">
            <xs:annotation>
              <xs:documentation>Pick the first business day on or before the given day of month.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="LowBalanceMethod" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Methods available for handling low-balance invoices</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_carryforward">
            <xs:annotation>
              <xs:documentation>Carry Forward</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_writeoff">
            <xs:annotation>
              <xs:documentation>Write Off</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="StatementType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Defines the types of statements sent </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_directbill">
            <xs:annotation>
              <xs:documentation>A direct Bill</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PaymentPlanModifier" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype typelist for entity PaymentPlanModifier</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_ChargeSlicingModifier">
            <xs:annotation>
              <xs:documentation>ChargeSlicingModifier</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DownPaymentOverride">
            <xs:annotation>
              <xs:documentation>DownPaymentOverride</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MatchPlannedInstallments">
            <xs:annotation>
              <xs:documentation>MatchPlannedInstallments</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MaximumNumberOfInstallmentsOverride">
            <xs:annotation>
              <xs:documentation>MaximumNumberOfInstallmentsOverride</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PaymentPlanModifier">
            <xs:annotation>
              <xs:documentation>PaymentPlanModifier</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SuppressDownPayment">
            <xs:annotation>
              <xs:documentation>SuppressDownPayment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="BillingInstruction" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype typelist for entity BillingInstruction</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_AccountGeneral">
            <xs:annotation>
              <xs:documentation>Account General Billing Instruction</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AcctBillingInstruction">
            <xs:annotation>
              <xs:documentation>AcctBillingInstruction</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Audit">
            <xs:annotation>
              <xs:documentation>Audit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BaseGeneral">
            <xs:annotation>
              <xs:documentation>BaseGeneral</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BillingInstruction">
            <xs:annotation>
              <xs:documentation>BillingInstruction</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Cancellation">
            <xs:annotation>
              <xs:documentation>Cancellation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CltlBillingInstruction">
            <xs:annotation>
              <xs:documentation>CltlBillingInstruction</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CollateralBI">
            <xs:annotation>
              <xs:documentation>Collateral General Billing Instruction</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ExistingPlcyPeriodBI">
            <xs:annotation>
              <xs:documentation>ExistingPlcyPeriodBI</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_General">
            <xs:annotation>
              <xs:documentation>General</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Issuance">
            <xs:annotation>
              <xs:documentation>Policy Issuance</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NewPlcyPeriodBI">
            <xs:annotation>
              <xs:documentation>NewPlcyPeriodBI</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NewRenewal">
            <xs:annotation>
              <xs:documentation>New Renewal</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_OffsetChargeBI">
            <xs:annotation>
              <xs:documentation>OffsetChargeBI</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_OnsetChargeBI">
            <xs:annotation>
              <xs:documentation>OnsetChargeBI</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PlcyBillingInstruction">
            <xs:annotation>
              <xs:documentation>PlcyBillingInstruction</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PolicyChange">
            <xs:annotation>
              <xs:documentation>Policy Change</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PremiumReportBI">
            <xs:annotation>
              <xs:documentation>Premium Report BI</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PremiumReportDueDate">
            <xs:annotation>
              <xs:documentation>Premium Report Due Date</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Reinstatement">
            <xs:annotation>
              <xs:documentation>Reinstatement</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Renewal">
            <xs:annotation>
              <xs:documentation>Renewal</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ReversalBillingInstruction">
            <xs:annotation>
              <xs:documentation>ReversalBillingInstruction</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Rewrite">
            <xs:annotation>
              <xs:documentation>Rewrite</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SegregatedCollReqBI">
            <xs:annotation>
              <xs:documentation>Collateral Requirement Billing Instruction</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SpecialHandling" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Special handling for a Policy Change.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_billimmediately">
            <xs:annotation>
              <xs:documentation>Bill Immediately</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_billonnext">
            <xs:annotation>
              <xs:documentation>Bill on Next Invoice</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_holdforaudit">
            <xs:annotation>
              <xs:documentation>Holds all charges on this billing instruction for Final Audit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_holdforauditall">
            <xs:annotation>
              <xs:documentation>Holds all unbilled items on the policy period for Final Audit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PaymentScheduledAfter" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>The event that occurs before a payment is scheduled</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_chargedate">
            <xs:annotation>
              <xs:documentation>Charge Date</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_chargeeffectivedate">
            <xs:annotation>
              <xs:documentation>Charge Effective Date</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_chargeeffectivedateplusoneperiod">
            <xs:annotation>
              <xs:documentation>One Interval After Charge Effective Date</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_policyeffectivedate">
            <xs:annotation>
              <xs:documentation>Policy Effective Date</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_policyeffectivedateplusoneperiod">
            <xs:annotation>
              <xs:documentation>One Interval After Policy Effective Date</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="InvoiceItemPlacementCutoffType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Invoice items can be placed on invoices whose cutoff date is after the date of the invoice item.         InvoiceItemPlacementCutoffType determines the cutoff date -- it can be either the invoice event (bill) date or the         invoice due date.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_invoicebilldate">
            <xs:annotation>
              <xs:documentation>Invoice bill (event) date</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_invoiceduedate">
            <xs:annotation>
              <xs:documentation>Invoice due date</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="InvoicingBlackoutType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>The criteria used to determine the last invoice on which items can be placed because of         the blackout period. In other words, whether the invoice bill date or due date should be used.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_billed">
            <xs:annotation>
              <xs:documentation>Invoice bill (event) date</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_due">
            <xs:annotation>
              <xs:documentation>Invoice due date</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ReturnPremiumChargeQualification" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Return Premium Plan Charge Target Qualification. Defines the typelist whose code values specify charge target qualification restrictions for return premium distribution. Each type-code identifies distribution target restrictions that will be applied when finding positive invoice items to which to distribute return premium.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_Account">
            <xs:annotation>
              <xs:documentation>Return Premium charge should target same payer Account positive items.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ChargeCategory">
            <xs:annotation>
              <xs:documentation>Return Premium charge should target same charge category in Policy Period positive items.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ChargeGroup">
            <xs:annotation>
              <xs:documentation>Return Premium charge should target same charge group in Policy Period positive items.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ChargePattern">
            <xs:annotation>
              <xs:documentation>Return Premium charge should target same charge pattern in Policy Period positive items.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Policy">
            <xs:annotation>
              <xs:documentation>Return Premium charge should target same Policy positive items.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PolicyPeriod">
            <xs:annotation>
              <xs:documentation>Return Premium charge should target same Policy Period positive items.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ListBillAccountExcess" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Specifies the target for List Bill Account excess from returned premium</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_PolicyOwnerUnapplied">
            <xs:annotation>
              <xs:documentation>Specifies the policy owner default or policy designated unapplied as the target for any returned premium</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PolicyPayerUnapplied">
            <xs:annotation>
              <xs:documentation>Specifies the policy payer unapplied as the target for any returned premium</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ReturnPremiumAllocateMethod" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Strategy of how return premium is to be distributed across invoices</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_FirstToLast">
            <xs:annotation>
              <xs:documentation>Pay the oldest invoice items in full first before paying the next invoice items</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LastToFirst">
            <xs:annotation>
              <xs:documentation>Pay the newest invoice items in full first before paying the previous invoice items</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Proportional">
            <xs:annotation>
              <xs:documentation>Pay items proportionally with carry forward from first to last</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ReturnPremiumAllocateTiming" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Specifies when the system should allocate return premium.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_bill">
            <xs:annotation>
              <xs:documentation>Apply return premium when billed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_due">
            <xs:annotation>
              <xs:documentation>Apply return premium when due</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_receipt">
            <xs:annotation>
              <xs:documentation>Immediately apply return premium</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ReturnPremiumExcessTreatment" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Specifies how excess return premium is handled</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_Unapplied">
            <xs:annotation>
              <xs:documentation>Unapplied</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ReturnPremiumHandlingCondition" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Return Premium Handling Condition</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_Audit">
            <xs:annotation>
              <xs:documentation>The return premium handling condition that applies for Audit billing instructions.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Cancellation">
            <xs:annotation>
              <xs:documentation>The return premium handling condition that applies for Cancellation billing instructions.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Issuance">
            <xs:annotation>
              <xs:documentation>The return premium handling condition that applies for Policy Issuance billing instructions.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NewRenewal">
            <xs:annotation>
              <xs:documentation>The return premium handling condition that applies for New Renewal billing instructions.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Other">
            <xs:annotation>
              <xs:documentation>The default return premium handling condition, which will apply if no other condition is satisfied.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PolicyChange">
            <xs:annotation>
              <xs:documentation>The return premium handling condition that applies for Policy Change billing instructions.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PremiumReportBI">
            <xs:annotation>
              <xs:documentation>The return premium handling condition that applies for Premium Report billing instructions.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Reinstatement">
            <xs:annotation>
              <xs:documentation>The return premium handling condition that applies for Reinstatement billing instructions.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Renewal">
            <xs:annotation>
              <xs:documentation>The return premium handling condition that applies for Renewal billing instructions.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Rewrite">
            <xs:annotation>
              <xs:documentation>The return premium handling condition that applies for Rewrite billing instructions.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ReturnPremiumStartDateOption" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Return premium handling scheme start date option. Defines the typelist whose code values specify start date restrictions for return premium distribution. Each type-code identifies return premium start date restrictions that will be applied when finding positive invoice items to which to distribute return premiums.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_ChargeEffectiveDate">
            <xs:annotation>
              <xs:documentation>Return premium start date will be on or after the charge effective date.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NotRestricted">
            <xs:annotation>
              <xs:documentation>All invoice items will be available for distribution.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="DistributionFilterType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Type of restriction to be applied to invoice items to determine eligibility for payment allocation.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_BilledOrDue">
            <xs:annotation>
              <xs:documentation>Restricts invoice items to those that are billed or due.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Invoice">
            <xs:annotation>
              <xs:documentation>Restricts invoice items to those on the incoming payment's associated invoice.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NextPlannedInvoice">
            <xs:annotation>
              <xs:documentation>Restricts invoice items to those that are billed, due or next planned.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PastDue">
            <xs:annotation>
              <xs:documentation>Restricts invoice items to those that are past due.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PolicyPeriod">
            <xs:annotation>
              <xs:documentation>Restricts invoice items to those on the incoming payment's associated policy period.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Positive">
            <xs:annotation>
              <xs:documentation>Restricts invoice items to those with amounts greater than zero.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="InvoiceItemOrderingType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Ordering for the purpose of prioritizing invoice items for allocation.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_BilledDate">
            <xs:annotation>
              <xs:documentation>Pay invoice items in order of their bill dates.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BilledStatus">
            <xs:annotation>
              <xs:documentation>Pay invoice items in order of their billed status (Billed, Due, Planned).</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ChargePattern">
            <xs:annotation>
              <xs:documentation>Pay invoice items according to charge pattern priority.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_EventDate">
            <xs:annotation>
              <xs:documentation>Pay invoice items in order of their event dates.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Invoice">
            <xs:annotation>
              <xs:documentation>Pay invoice items on the targeted invoice first.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PolicyPeriod">
            <xs:annotation>
              <xs:documentation>Pay invoice items on the targeted policy period first.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_RecaptureFirst">
            <xs:annotation>
              <xs:documentation>Pay invoice items with recapture charges first.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ReverseBilledDate">
            <xs:annotation>
              <xs:documentation>Pay invoice items in the reverse order of their bill date.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ReverseEventDate">
            <xs:annotation>
              <xs:documentation>Pay invoice items in the reverse order of their event date.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SpreadExcessEven">
            <xs:annotation>
              <xs:documentation>Pay billed and due invoice items. Then pay planned items proportionally based on unpaid amounts.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ApplicableSegments" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>The market segments for which a delinquency plan is applicable</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_all">
            <xs:annotation>
              <xs:documentation>All</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_largebusiness">
            <xs:annotation>
              <xs:documentation>Large Business</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_mediumbusiness">
            <xs:annotation>
              <xs:documentation>Medium Business</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_personal">
            <xs:annotation>
              <xs:documentation>Personal</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_smallbusiness">
            <xs:annotation>
              <xs:documentation>Small Business</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_subprime">
            <xs:annotation>
              <xs:documentation>Subprime</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CancellationTarget" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>The entities to cancel when an account or a sub-policy becomes delinquent</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_AllPoliciesInAccount">
            <xs:annotation>
              <xs:documentation>All Policies in Account</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DelinquentPolicyOnly">
            <xs:annotation>
              <xs:documentation>Delinquent Policy Only</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="DelinquencyReason" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Reason for why delinquency was started</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_CollatShortfall">
            <xs:annotation>
              <xs:documentation>Collateral shortfall</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_FailureToReport">
            <xs:annotation>
              <xs:documentation>Failure to report</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NotTaken">
            <xs:annotation>
              <xs:documentation>Not taken</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Other">
            <xs:annotation>
              <xs:documentation>Other</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PastDue">
            <xs:annotation>
              <xs:documentation>Past due</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ProducerRefer">
            <xs:annotation>
              <xs:documentation>Producer referred</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="DelinquencyEventName" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Delinquency Event Name</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_CancelInPAS">
            <xs:annotation>
              <xs:documentation>Send Cancellation Request to PAS</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Canceled">
            <xs:annotation>
              <xs:documentation>Cancellation Billing Instruction Received</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Cancellation">
            <xs:annotation>
              <xs:documentation>Send Notice of Intent To Cancel</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Collections">
            <xs:annotation>
              <xs:documentation>Collections</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DunningLetter1">
            <xs:annotation>
              <xs:documentation>Dunning Letter 1</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DunningLetter2">
            <xs:annotation>
              <xs:documentation>Dunning Letter 2</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LateFee">
            <xs:annotation>
              <xs:documentation>Late Fee</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_RescindReinstate">
            <xs:annotation>
              <xs:documentation>Rescind/Reinstate</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Writeoff">
            <xs:annotation>
              <xs:documentation>Writeoff</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="DelinquencyTriggerBasis" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Time-point reference for calculating Delinquency Event dates</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_Canceled">
            <xs:annotation>
              <xs:documentation>Policy has been canceled.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_External">
            <xs:annotation>
              <xs:documentation>Externally-triggered event</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GoodStanding">
            <xs:annotation>
              <xs:documentation>Account returns to good standing.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Inception">
            <xs:annotation>
              <xs:documentation>Delinquency inception</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PaidThroughDate">
            <xs:annotation>
              <xs:documentation>Date which account is paid through</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="History" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype typelist for entity History</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_AccountHistory">
            <xs:annotation>
              <xs:documentation>AccountHistory</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_History">
            <xs:annotation>
              <xs:documentation>History</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PlanHistory">
            <xs:annotation>
              <xs:documentation>PlanHistory</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PolicyHistory">
            <xs:annotation>
              <xs:documentation>PolicyHistory</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ProducerHistory">
            <xs:annotation>
              <xs:documentation>ProducerHistory</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ProducerPolicyHistory">
            <xs:annotation>
              <xs:documentation>ProducerPolicyHistory</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_UserHistory">
            <xs:annotation>
              <xs:documentation>UserHistory</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PolicyTransfer" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype typelist for entity PolicyTransfer</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_PolTransferByProdCode">
            <xs:annotation>
              <xs:documentation>PolTransferByProdCode</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PolTransferByRole">
            <xs:annotation>
              <xs:documentation>PolTransferByRole</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PolicyTransfer">
            <xs:annotation>
              <xs:documentation>PolicyTransfer</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CommissionTransferOption" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Options for transferring commission during a policy period transfer between producer codes</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_afterrenewal">
            <xs:annotation>
              <xs:documentation>Future commissions on or after renewal to new producer</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_allfuture">
            <xs:annotation>
              <xs:documentation>All future commissions to new producer</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pointintime">
            <xs:annotation>
              <xs:documentation>Point-in-time transfer to new producer</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_retroactive">
            <xs:annotation>
              <xs:documentation>Commissions retroactive to effective date transfer to new producer</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CustomHistoryType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Not used in BC</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_EMPTY_TYPELIST">
            <xs:annotation>
              <xs:documentation>This typelist has no defined elements</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="HistoryEventType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Defines the available types of history events</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_accountadjusted">
            <xs:annotation>
              <xs:documentation>Account Adjusted</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_accountcreated">
            <xs:annotation>
              <xs:documentation>Account Created</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_accountdelinquent">
            <xs:annotation>
              <xs:documentation>Account Delinquent</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_accountfundtransfer">
            <xs:annotation>
              <xs:documentation>Funds Transfered on Acccount</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_accountgoodstanding">
            <xs:annotation>
              <xs:documentation>Account Good Standing</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_accountlatefee">
            <xs:annotation>
              <xs:documentation>Account Late Fee</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_accountwriteoff">
            <xs:annotation>
              <xs:documentation>Write Off at Account Level</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_billinginstruction">
            <xs:annotation>
              <xs:documentation>Billing Instruction</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_chargeholdapplied">
            <xs:annotation>
              <xs:documentation>Charge Hold Applied</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_chargeholdreleased">
            <xs:annotation>
              <xs:documentation>Charge Hold Released</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_customchargecreated">
            <xs:annotation>
              <xs:documentation>Custom Charge Created</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_disbursement">
            <xs:annotation>
              <xs:documentation>Disbursement Made</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_documentsupdated">
            <xs:annotation>
              <xs:documentation>Document Updated</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_dunninglettersent">
            <xs:annotation>
              <xs:documentation>Dunning Letter Sent</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_invoicecreatedforhold">
            <xs:annotation>
              <xs:documentation>Invoice Created for Held Invoice Items</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_notesupdated">
            <xs:annotation>
              <xs:documentation>Notes Updated</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_paymentmade">
            <xs:annotation>
              <xs:documentation>Payment Made</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_paymentmodified">
            <xs:annotation>
              <xs:documentation>Payment Modified</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_paymentmoved">
            <xs:annotation>
              <xs:documentation>Payment Moved</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_paymentreversed">
            <xs:annotation>
              <xs:documentation>Payment Reversed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_plancreated">
            <xs:annotation>
              <xs:documentation>Plan Created</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_policyadded">
            <xs:annotation>
              <xs:documentation>Policy Added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_policycanceled">
            <xs:annotation>
              <xs:documentation>Policy Canceled</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_policychanged">
            <xs:annotation>
              <xs:documentation>Policy Changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_policyclosed">
            <xs:annotation>
              <xs:documentation>Policy Closed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_policydelinquent">
            <xs:annotation>
              <xs:documentation>Policy Delinquent</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_policyexpired">
            <xs:annotation>
              <xs:documentation>Policy Expired</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_policyfundtransfer">
            <xs:annotation>
              <xs:documentation>Funds Transfered on Policy</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_policygoodstanding">
            <xs:annotation>
              <xs:documentation>Policy Good Standing</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_policyreinstated">
            <xs:annotation>
              <xs:documentation>Policy Reinstated</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_policyrenewed">
            <xs:annotation>
              <xs:documentation>Policy Renewed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_policyreopened">
            <xs:annotation>
              <xs:documentation>Policy Reopened</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_policytransferred">
            <xs:annotation>
              <xs:documentation>Policy Transferred</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_policywriteoff">
            <xs:annotation>
              <xs:documentation>Write Off at Policy Level</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_producertransferred">
            <xs:annotation>
              <xs:documentation>Producer Transferred</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_subrogation">
            <xs:annotation>
              <xs:documentation>Subrogation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_suspensePayment">
            <xs:annotation>
              <xs:documentation>Suspense Payment Applied</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_troubleticketclosed">
            <xs:annotation>
              <xs:documentation>Trouble Ticket Closed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_troubleticketopened">
            <xs:annotation>
              <xs:documentation>Trouble Ticket Opened</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_usercreated">
            <xs:annotation>
              <xs:documentation>User Created</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="HistoryType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Not used in BC</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_approval">
            <xs:annotation>
              <xs:documentation>A referral was approved/rejected</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_custom">
            <xs:annotation>
              <xs:documentation>A custom history event happened; see CustomType for details</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_policyedited">
            <xs:annotation>
              <xs:documentation>The policy was edited, and thus marked unverified</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ClearingLogicTarget" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Valid targets for application of clearing logic.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_both">
            <xs:annotation>
              <xs:documentation>Both</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_payments">
            <xs:annotation>
              <xs:documentation>Payments</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_promises">
            <xs:annotation>
              <xs:documentation>Promises</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ProducerRole" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Defines the different roles a contact can have on a producer</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_primary">
            <xs:annotation>
              <xs:documentation>Primary</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_secondary">
            <xs:annotation>
              <xs:documentation>Secondary</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ProducerTier" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Defines the tiers to which a producer can belong</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_bronze">
            <xs:annotation>
              <xs:documentation>Bronze</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_gold">
            <xs:annotation>
              <xs:documentation>Gold</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_silver">
            <xs:annotation>
              <xs:documentation>Silver</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="UWCompany" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Defines the UW company types</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_1111_11111">
            <xs:annotation>
              <xs:documentation>Acme Low Hazard Insurance</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_2111_11111">
            <xs:annotation>
              <xs:documentation>Acme Medium Hazard Insurance</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_3111_33333">
            <xs:annotation>
              <xs:documentation>Acme High Hazard Insurance</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_4111_44444">
            <xs:annotation>
              <xs:documentation>Four Corners Low Hazard Casualty</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_5666_55555">
            <xs:annotation>
              <xs:documentation>Four Corners Medium Hazard Casualty</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_6666_66666">
            <xs:annotation>
              <xs:documentation>Four Corners High Hazard Casualty</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_7777_12345">
            <xs:annotation>
              <xs:documentation>FifthWheel Low Hazard Insurance</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_7777_23211">
            <xs:annotation>
              <xs:documentation>FifthWheel Medium Hazard Insurance</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_9000_00001">
            <xs:annotation>
              <xs:documentation>FifthWheel High Hazard Insurance</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_highrisk">
            <xs:annotation>
              <xs:documentation>High Risk</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_mainline">
            <xs:annotation>
              <xs:documentation>Mainline</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_preferred">
            <xs:annotation>
              <xs:documentation>Preferred</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="DelinquencyProcessPhase" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>The phase of the delinquency process</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_Delinquency">
            <xs:annotation>
              <xs:documentation>Delinquency</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ExitDelinquency">
            <xs:annotation>
              <xs:documentation>Exit Delinquency</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="DelinquencyProcessStatus" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Status of the delinquency process</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_Closed">
            <xs:annotation>
              <xs:documentation>Closed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Error">
            <xs:annotation>
              <xs:documentation>Error</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_OnHold">
            <xs:annotation>
              <xs:documentation>On Hold</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Open">
            <xs:annotation>
              <xs:documentation>Open</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AccountType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Valid types of accounts.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_ListBill">
            <xs:annotation>
              <xs:documentation>List Bill; List-Bill policies are paid by this account, and none are owned.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_collectionagency">
            <xs:annotation>
              <xs:documentation>Collection Agency Account</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_insured">
            <xs:annotation>
              <xs:documentation>Insured.  Default.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_payer">
            <xs:annotation>
              <xs:documentation>Payer Account</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="BillingLevel" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Policy-level billing or account-level billing.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_Account">
            <xs:annotation>
              <xs:documentation>All charges can share invoice streams and default unapplied</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PolicyDefaultUnapplied">
            <xs:annotation>
              <xs:documentation>Policies cannot share invoice streams but do share default unapplied</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PolicyDesignatedUnapplied">
            <xs:annotation>
              <xs:documentation>Policies cannot share invoice streams and use their own designated unapplieds</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AccountRole" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Defines the different roles a contact can have on an account</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_accountingmgr">
            <xs:annotation>
              <xs:documentation>Accounting Manager</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_accountsclerk">
            <xs:annotation>
              <xs:documentation>Accounts Clerk</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_accountspayable">
            <xs:annotation>
              <xs:documentation>Accounts Payable</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_insured">
            <xs:annotation>
              <xs:documentation>Insured</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="DelinquencyStatus" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Delinquency Status</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_Delinquent">
            <xs:annotation>
              <xs:documentation>Delinquent</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_InGoodStanding">
            <xs:annotation>
              <xs:documentation>In Good Standing</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="DistributionLimitType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Defines the different types of limits that the system can impose on payment distribution</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_nextinvoice">
            <xs:annotation>
              <xs:documentation>Distribute payment up to amount outstanding plus amount of invoice items on next planned invoice</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_outstanding">
            <xs:annotation>
              <xs:documentation>Distribute payment up to amount outstanding but use amount billed for display name</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pastDue">
            <xs:annotation>
              <xs:documentation>Distribute the payment up to the amount past due</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_undercontract">
            <xs:annotation>
              <xs:documentation>Distribute the payment up to the amount under contract</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="DayOfWeek" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>All of the days of the week</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_Friday">
            <xs:annotation>
              <xs:documentation>Friday</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Monday">
            <xs:annotation>
              <xs:documentation>Monday</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Saturday">
            <xs:annotation>
              <xs:documentation>Saturday</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Sunday">
            <xs:annotation>
              <xs:documentation>Sunday</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Thursday">
            <xs:annotation>
              <xs:documentation>Thursday</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Tuesday">
            <xs:annotation>
              <xs:documentation>Tuesday</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Wednesday">
            <xs:annotation>
              <xs:documentation>Wednesday</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="InvoiceDeliveryMethod" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Defines how the invoice is sent</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_email">
            <xs:annotation>
              <xs:documentation>Invoice is delivered by email</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_mail">
            <xs:annotation>
              <xs:documentation>Invoice is delivered by mail</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PolicyLevelPaymentOption" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Defines the available options for handling payments directed at a single policy.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_distributeall">
            <xs:annotation>
              <xs:documentation>Do not apply policy level payment to the specific policy but instead use account distribution.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_distributeextra">
            <xs:annotation>
              <xs:documentation>Apply outstanding amount to policy, and release the rest to account distribution.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AccountSegment" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Defines the different segments to which accounts can belong</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_largebusiness">
            <xs:annotation>
              <xs:documentation>Large Business</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_mediumbusiness">
            <xs:annotation>
              <xs:documentation>Medium Business</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_personal">
            <xs:annotation>
              <xs:documentation>Personal</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_smallbusiness">
            <xs:annotation>
              <xs:documentation>Small Business</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_subprime">
            <xs:annotation>
              <xs:documentation>Subprime</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CustomerServiceTier" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Represents the customer service tier</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_gold">
            <xs:annotation>
              <xs:documentation>A middle-tier service tier for cost conscious customers</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_platinum">
            <xs:annotation>
              <xs:documentation>A top-tier service tier for customers requiring personal customer service</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_silver">
            <xs:annotation>
              <xs:documentation>An elevated service tier for good customers</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="DocumentSection" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Section for the document</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_EMPTY_TYPELIST">
            <xs:annotation>
              <xs:documentation>This typelist has no defined elements</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="DocumentSecurityType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Type of the document for access-restriction purposes</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_confidential">
            <xs:annotation>
              <xs:documentation>Document accessible only by users with confidential note permissions</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_internalonly">
            <xs:annotation>
              <xs:documentation>Document accessible only by users with internal note permissions</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_unrestricted">
            <xs:annotation>
              <xs:documentation>Document accessible by any user in the system</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="DocumentStatusType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Status of the document</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_approved">
            <xs:annotation>
              <xs:documentation>Approved</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_approving">
            <xs:annotation>
              <xs:documentation>Approving</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_draft">
            <xs:annotation>
              <xs:documentation>Draft</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_filed">
            <xs:annotation>
              <xs:documentation>Filed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_final">
            <xs:annotation>
              <xs:documentation>Final</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="DocumentType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_billingerror">
            <xs:annotation>
              <xs:documentation>Billing Error</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_delinquency">
            <xs:annotation>
              <xs:documentation>Delinquency</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_disbursement">
            <xs:annotation>
              <xs:documentation>Disbursement</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_dispute">
            <xs:annotation>
              <xs:documentation>Dispute</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_email">
            <xs:annotation>
              <xs:documentation>Email</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_email_sent">
            <xs:annotation>
              <xs:documentation>Email Created and Sent</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_general">
            <xs:annotation>
              <xs:documentation>General</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_other">
            <xs:annotation>
              <xs:documentation>Other</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_policy_transfer">
            <xs:annotation>
              <xs:documentation>Policy Transfer</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_renewal_carryover">
            <xs:annotation>
              <xs:documentation>Renewal Carryover</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_subrogation">
            <xs:annotation>
              <xs:documentation>Subrogation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="RelatedTo" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>note related to</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_account">
            <xs:annotation>
              <xs:documentation>account</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_delinquencies">
            <xs:annotation>
              <xs:documentation>delinquencies</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_disbursement">
            <xs:annotation>
              <xs:documentation>disbursements</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_invoices">
            <xs:annotation>
              <xs:documentation>invoices</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_payments">
            <xs:annotation>
              <xs:documentation>payments</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_policies">
            <xs:annotation>
              <xs:documentation>policies</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_producer">
            <xs:annotation>
              <xs:documentation>producer</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_transactions">
            <xs:annotation>
              <xs:documentation>transactions</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_troubleTickets">
            <xs:annotation>
              <xs:documentation>trouble tickets</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="NoteSecurityType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Type of the note for access-restriction purposes</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_confidential">
            <xs:annotation>
              <xs:documentation>Note accessible only by users with confidential note permissions</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_internalonly">
            <xs:annotation>
              <xs:documentation>Note accessible only by users with internal note permissions</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_unrestricted">
            <xs:annotation>
              <xs:documentation>Note accessible by any user in the system</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="NoteTopicType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_billingerror">
            <xs:annotation>
              <xs:documentation>billing error</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_delinquency">
            <xs:annotation>
              <xs:documentation>delinquency</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_disbursement">
            <xs:annotation>
              <xs:documentation>disbursement</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_dispute">
            <xs:annotation>
              <xs:documentation>dispute</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_general">
            <xs:annotation>
              <xs:documentation>general</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_policytransfer">
            <xs:annotation>
              <xs:documentation>Policy Transfer</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_renewalcarryover">
            <xs:annotation>
              <xs:documentation>renewal carryover</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_subrogation">
            <xs:annotation>
              <xs:documentation>Subrogation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ActivityCategory" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Defines the different categories an activity can have</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_approval">
            <xs:annotation>
              <xs:documentation>Approval</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_reminder">
            <xs:annotation>
              <xs:documentation>Reminder</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_request">
            <xs:annotation>
              <xs:documentation>Request</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="HolidayTagCode" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>The holiday tag code</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_general">
            <xs:annotation>
              <xs:documentation>General</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="IncludeDaysType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Which days to include in the day count</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_businessdays">
            <xs:annotation>
              <xs:documentation>The number of business days since the starting point; does not include weekends and holidays</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_elapsed">
            <xs:annotation>
              <xs:documentation>The number of calendar days elapsed since the starting point; includes all weekends and holidays</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="StartPointType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>The different fields on an activity or claim that could be used as the starting point for another date field</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_activitycreation">
            <xs:annotation>
              <xs:documentation>Creation date of the activity</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_startdate">
            <xs:annotation>
              <xs:documentation>Start date on activity</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CommissionSubPlan" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype typelist for entity CommissionSubPlan</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_CommissionSubPlan">
            <xs:annotation>
              <xs:documentation>CommissionSubPlan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CondCmsnSubPlan">
            <xs:annotation>
              <xs:documentation>CondCmsnSubPlan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DefaultCmsnSubPlan">
            <xs:annotation>
              <xs:documentation>DefaultCmsnSubPlan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AssignedRiskRestriction" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Defines the set of commission sub-plan restrictions on assigned risk.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_all">
            <xs:annotation>
              <xs:documentation>Assigned risk is not restricted.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_exclude">
            <xs:annotation>
              <xs:documentation>Assigned risk policies are excluded.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_only">
            <xs:annotation>
              <xs:documentation>Only assigned risk policies are allowed.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Incentive" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype typelist for entity Incentive</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_Incentive">
            <xs:annotation>
              <xs:documentation>Incentive</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PolicyBasedIncentive">
            <xs:annotation>
              <xs:documentation>PolicyBasedIncentive</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PremiumIncentive">
            <xs:annotation>
              <xs:documentation>Premium Incentive</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="HoldType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Defines the different types of automated processes that can be blocked by a Hold</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_CommissionPayments">
            <xs:annotation>
              <xs:documentation>Apply hold to Commission Payments</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CommissionPolicyEarn">
            <xs:annotation>
              <xs:documentation>Apply hold to Commission Policy Earnings</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Delinquency">
            <xs:annotation>
              <xs:documentation>Apply hold to Delinquency Processes</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Disbursements">
            <xs:annotation>
              <xs:documentation>Apply hold to Disbursements</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_InvoiceSending">
            <xs:annotation>
              <xs:documentation>Apply hold to Invoice or Statement Sending</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PaymentDistribution">
            <xs:annotation>
              <xs:documentation>Apply hold to Payment Distribution</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="GroupType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_general">
            <xs:annotation>
              <xs:documentation>General</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_root">
            <xs:annotation>
              <xs:documentation>This is the root group of an organization</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="BusinessType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Types of external organizations</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_insurer">
            <xs:annotation>
              <xs:documentation>Insurer</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ZoneType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_city">
            <xs:annotation>
              <xs:documentation>City</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_citykanji">
            <xs:annotation>
              <xs:documentation>CityKanji</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_country">
            <xs:annotation>
              <xs:documentation>Country</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_county">
            <xs:annotation>
              <xs:documentation>County</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_fsa">
            <xs:annotation>
              <xs:documentation>FSA</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_postalcode">
            <xs:annotation>
              <xs:documentation>PostalCode</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_postcodearea">
            <xs:annotation>
              <xs:documentation>Post Code Area</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_postcoderegion">
            <xs:annotation>
              <xs:documentation>Post Code Region</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_prefecture">
            <xs:annotation>
              <xs:documentation>Prefecture</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_province">
            <xs:annotation>
              <xs:documentation>Province</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_state">
            <xs:annotation>
              <xs:documentation>State</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_unknown">
            <xs:annotation>
              <xs:documentation>Placeholder typecode for fields that should be populated with another ZoneType</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_zip">
            <xs:annotation>
              <xs:documentation>Zip code</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ContactMatchResultType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Represents the result of definitive match search.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_CLOSE_MATCH">
            <xs:annotation>
              <xs:documentation>At least one contact in the Address Book closely matched a given contact.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_IMPLAUSIBLE_MATCH">
            <xs:annotation>
              <xs:documentation>A definitive match was found, but the contact does not match in terms of potential match fields.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_INCOMPATIBLE_TYPE">
            <xs:annotation>
              <xs:documentation>A definitive match was found, but its type is incompatible with the type of the candidate contact. That is, the matched contact could not be cast to the type of the candidate contact.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NO_MATCH">
            <xs:annotation>
              <xs:documentation>No match was found.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PLAUSIBLE_MATCH">
            <xs:annotation>
              <xs:documentation>A definitive match was found that matches a contact in the Address Book in terms of potential match fields.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_POSSIBLE_MATCH">
            <xs:annotation>
              <xs:documentation>One or more contacts in the Address Book possibly matched a given contact.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="UnitOfDistance" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Units of distance</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_Foot">
            <xs:annotation>
              <xs:documentation>Foot</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Kilometer">
            <xs:annotation>
              <xs:documentation>Kilometer</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Meter">
            <xs:annotation>
              <xs:documentation>Meter</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Mile">
            <xs:annotation>
              <xs:documentation>International statute mile</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ContactSearchType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>The type of contact search</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_internal">
            <xs:annotation>
              <xs:documentation>Address Book</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ContactSearchResultType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Represents the result of definitive match search.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_SUCCESS">
            <xs:annotation>
              <xs:documentation>Address book search succeeded</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TOO_LOOSE_SEARCH">
            <xs:annotation>
              <xs:documentation>Search criteria is too loose and executing may require too much of the DB resources. Search not executed.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ValidationIssue" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype typelist for entity ValidationIssue</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_FieldValidation">
            <xs:annotation>
              <xs:documentation>FieldValidation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GeneralValidation">
            <xs:annotation>
              <xs:documentation>GeneralValidation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ValidationIssue">
            <xs:annotation>
              <xs:documentation>ValidationIssue</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ValidationLevel" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Levels of validation errors and warnings</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_loadsave">
            <xs:annotation>
              <xs:documentation>Load and save</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ValidationIssueType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Validation issues can be errors or warning</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_error">
            <xs:annotation>
              <xs:documentation>A validation error</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_warning">
            <xs:annotation>
              <xs:documentation>A validation warning</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="UpdateOp" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype typelist for entity UpdateOp</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_CreateUpdateOp">
            <xs:annotation>
              <xs:documentation>CreateUpdateOp</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DeleteUpdateOp">
            <xs:annotation>
              <xs:documentation>DeleteUpdateOp</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_FieldChangeUpdateOp">
            <xs:annotation>
              <xs:documentation>FieldChangeUpdateOp</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_UpdateOp">
            <xs:annotation>
              <xs:documentation>UpdateOp</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="DataChangeStatus" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Status of a DataChange.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_Completed">
            <xs:annotation>
              <xs:documentation>The gosu was executed and did not throw an exception</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Discarded">
            <xs:annotation>
              <xs:documentation>The gosu was discarded without being run</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Executing">
            <xs:annotation>
              <xs:documentation>The gosu is being executed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Failed">
            <xs:annotation>
              <xs:documentation>The gosu was executed but threw an exception</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Open">
            <xs:annotation>
              <xs:documentation>The gosu was added but not yet run</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="DataGenActionType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Action type performed by data-gen</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_advanceDate">
            <xs:annotation>
              <xs:documentation>Advancing all dates field in DB.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_initialize">
            <xs:annotation>
              <xs:documentation>Initialize DB.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_restore">
            <xs:annotation>
              <xs:documentation>Restore DB from pcb.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="DataGenStatusType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Data-gen action status.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_failed">
            <xs:annotation>
              <xs:documentation>Action failed.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_inProgress">
            <xs:annotation>
              <xs:documentation>Action in progress.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_succeed">
            <xs:annotation>
              <xs:documentation>Action succeeded.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="DateFieldsToSearchType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>The search options for the date searches in search</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_EMPTY_TYPELIST">
            <xs:annotation>
              <xs:documentation>This typelist has no defined elements</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="DateRangeChoiceType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>The predetermined list of date ranges we can search for</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_n0">
            <xs:annotation>
              <xs:documentation>Today</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_n180">
            <xs:annotation>
              <xs:documentation>180 days before today</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_n30">
            <xs:annotation>
              <xs:documentation>30 days before today</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_n365">
            <xs:annotation>
              <xs:documentation>365 days before today</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_n7">
            <xs:annotation>
              <xs:documentation>7 days before today</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_n90">
            <xs:annotation>
              <xs:documentation>90 days before today</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="DateSearchType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>What kind of date search we are doing</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_enteredrange">
            <xs:annotation>
              <xs:documentation>An entered range</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_fromlist">
            <xs:annotation>
              <xs:documentation>Selected from a list</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SearchObjectType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>The type of search</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_document">
            <xs:annotation>
              <xs:documentation>Document Search</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_note">
            <xs:annotation>
              <xs:documentation>Note Search</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SearchResult" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype typelist for entity SearchResult</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_ExtContactSrchResult">
            <xs:annotation>
              <xs:documentation>ExtContactSrchResult</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SearchResult">
            <xs:annotation>
              <xs:documentation>SearchResult</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="LoaderCallbackTimeType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Types of LoaderCallback execution times</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_afterinsertselects">
            <xs:annotation>
              <xs:documentation>After insert/selects into source tables</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_beforeidgeneration">
            <xs:annotation>
              <xs:documentation>Before ID generation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_beforeinsertselects">
            <xs:annotation>
              <xs:documentation>Before insert/selects into source tables</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="LoadCommandType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Types of load commands</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_dbstatsupdated">
            <xs:annotation>
              <xs:documentation>Database statistics updated on staging tables</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_errorcleared">
            <xs:annotation>
              <xs:documentation>Error table cleared</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_excludeddeleted">
            <xs:annotation>
              <xs:documentation>Excluded rows deleted from staging tables</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_exclusioncleared">
            <xs:annotation>
              <xs:documentation>Exclusion table cleared</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_exclusionpop">
            <xs:annotation>
              <xs:documentation>Exclusion table populated with failed rows from error table</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_integritychecked">
            <xs:annotation>
              <xs:documentation>Integrity of staging tables checked</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_nonexcludeddeleted">
            <xs:annotation>
              <xs:documentation>Non-excluded rows deleted from staging tables</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_sourceloaded">
            <xs:annotation>
              <xs:documentation>Source tables loaded from staging tables</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_stagingcleared">
            <xs:annotation>
              <xs:documentation>Staging tables cleared</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_tablesencrypted">
            <xs:annotation>
              <xs:documentation>Encrypt data in staging tables</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_zonesourceloaded">
            <xs:annotation>
              <xs:documentation>Zone Source tables loaded from staging tables</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="LoadErrorType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Types of load error events</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_abstractdatatype">
            <xs:annotation>
              <xs:documentation>Rows found in staging table with values that violate rules of an abstract data type</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_badassignable">
            <xs:annotation>
              <xs:documentation>Rows found in staging table that violate rules for assignable objects</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_checkconstraint">
            <xs:annotation>
              <xs:documentation>Rows found in staging table that violate a check constraint</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_consistchildren1">
            <xs:annotation>
              <xs:documentation>Consistent children failure found within staging tables</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_consistchildren2">
            <xs:annotation>
              <xs:documentation>Consistent children failure found between staging and source tables</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_dtordering">
            <xs:annotation>
              <xs:documentation>Rows found in staging table that violate a date time ordering</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_edgeforeignkey">
            <xs:annotation>
              <xs:documentation>Not exactly one row found in table for non-nullable edge foreign key relationships</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_foreignkey">
            <xs:annotation>
              <xs:documentation>Rows found in table with invalid values for a foreign key column</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_foreignkeynonadmin">
            <xs:annotation>
              <xs:documentation>Rows found in table with foreign key references to existing row in a non-admin table when only existing rows in admin tables can be referenced</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_foreignkeysub">
            <xs:annotation>
              <xs:documentation>Rows found in table with foreign key references to incorrect subtype</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_monetaryamount">
            <xs:annotation>
              <xs:documentation>One or the other of the amount and currency column for a monetary amount contains null when the other does not.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_nomatchlvquery">
            <xs:annotation>
              <xs:documentation>Rows found in staging table by query that should return 0 rows</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_nonull">
            <xs:annotation>
              <xs:documentation>Rows found in table with null values for one or more non-nullable columns in the source table</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_nonullsubtype">
            <xs:annotation>
              <xs:documentation>Rows found in table with null values for one or more non-nullable columns for the subtype in the source table</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_onetoone">
            <xs:annotation>
              <xs:documentation>Not exactly one row found in table for non-nullable one-to-one relationships</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ppeerror">
            <xs:annotation>
              <xs:documentation>PostPopulateExecutors failures detected after populating source tables</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_reftoexistingreffedrow">
            <xs:annotation>
              <xs:documentation>Rows found in table with foreign key references to an existing row in a source table that is already referenced from other existing rows, when such references are not allowed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_reftoexistingrow">
            <xs:annotation>
              <xs:documentation>Rows found in table with foreign key references to an existing row in a source table when such references are not allowed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_requiredmatch">
            <xs:annotation>
              <xs:documentation>Rows found in staging table with required referencing rows in array table</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_subtype">
            <xs:annotation>
              <xs:documentation>Rows found in table with invalid values for a subtype column</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_subtypespec">
            <xs:annotation>
              <xs:documentation>Rows found in table with non-null values for one or more subtype-specific columns for a different subtype</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_typekey">
            <xs:annotation>
              <xs:documentation>Rows found in table with invalid values for a typekey column</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_typekeyinset">
            <xs:annotation>
              <xs:documentation>Rows found in table include typekey values that are invalid when loading via the staging tables</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_typekeynotinset">
            <xs:annotation>
              <xs:documentation>Rows found in table include typekey values that are invalid when loading via the staging tables</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_uniqconstraint1">
            <xs:annotation>
              <xs:documentation>Rows found in staging table that violate a unique constraint</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_uniqconstraint2">
            <xs:annotation>
              <xs:documentation>Rows found in staging table that match rows in source table on all columns of a unique index</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_zerolengthstring">
            <xs:annotation>
              <xs:documentation>Rows found in table with 0-length strings in varchar columns</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="LoadStepType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Types of load step events</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_consistencychecked">
            <xs:annotation>
              <xs:documentation>Custom consistency checks executed after populating staging tables</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_errorcleared">
            <xs:annotation>
              <xs:documentation>Error table cleared</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_estimatedbstatistics">
            <xs:annotation>
              <xs:documentation>DB statistics updated with estimates for source tables</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_excludeddeleted">
            <xs:annotation>
              <xs:documentation>Excluded rows deleted from staging tables</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_exclusioncleared">
            <xs:annotation>
              <xs:documentation>Exclusion table cleared</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_exclusionpop">
            <xs:annotation>
              <xs:documentation>Exclusion table populated with failed rows from error table</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_idsgenerated">
            <xs:annotation>
              <xs:documentation>IDs generated for staging tables</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_insertselects">
            <xs:annotation>
              <xs:documentation>INSERT SELECTs from staging to source tables executed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_integritychecked">
            <xs:annotation>
              <xs:documentation>Integrity of staging tables checked (Entire phase)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_integrityexecuted">
            <xs:annotation>
              <xs:documentation>Integrity check queries checks executed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_lcafterinsertselect">
            <xs:annotation>
              <xs:documentation>LoaderCallbacks executed after insert/selects into source tables</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_lcbeforeidgeneration">
            <xs:annotation>
              <xs:documentation>LoaderCallbacks executed before id generation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_lcbeforeinsertselect">
            <xs:annotation>
              <xs:documentation>LoaderCallbacks executed before insert/selects into source tables</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_nonexcludeddeleted">
            <xs:annotation>
              <xs:documentation>Non-excluded rows deleted from staging tables</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_overwrittencleared">
            <xs:annotation>
              <xs:documentation>Overwritten staging tables and columns cleared</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ppesexecuted">
            <xs:annotation>
              <xs:documentation>PostPopulatorExecutors executed after populating staging tables</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_rownumsgenerated">
            <xs:annotation>
              <xs:documentation>Row numbers generated for staging tables</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_sourceloaded">
            <xs:annotation>
              <xs:documentation>Source tables loaded from staging tables (Entire phase)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_stagingcleared">
            <xs:annotation>
              <xs:documentation>Staging tables cleared</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AgencyPaymentTargetType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>List of potential targets of an Agency Payment used in the New Agency Payment Wizard.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_promise">
            <xs:annotation>
              <xs:documentation>Load an unpaid promise and pay it with this payment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_savedpayment">
            <xs:annotation>
              <xs:documentation>Load a previously saved payment and continue the wizard with those values.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_specificitems">
            <xs:annotation>
              <xs:documentation>Apply the money ad hoc to newly defined items.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_statement">
            <xs:annotation>
              <xs:documentation>Make a brand new payment against a statement.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_unapplied">
            <xs:annotation>
              <xs:documentation>Put this money directly into Producer Unapplied and do not distribute it in any way.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AgencyPromiseTargetType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>List of potential targets of an Agency Payment used in the New Agency Payment Wizard.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_savedpromise">
            <xs:annotation>
              <xs:documentation>Load a previously saved promise and continue the wizard with those values.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_statement">
            <xs:annotation>
              <xs:documentation>Make a brand new promise against a statement.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AgencyCycleDistPrefill" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Defines the different ways in which a user can pre-fill an AgencyCycleDist.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_saved">
            <xs:annotation>
              <xs:documentation>Saved Values</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_unpaid">
            <xs:annotation>
              <xs:documentation>Net Owed Amounts</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_zero">
            <xs:annotation>
              <xs:documentation>Zeroes</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="BatchProcessType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Types of batch processes</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_AccountInactivity">
            <xs:annotation>
              <xs:documentation>Checks for accounts that have been inactive for many days and creates notification activities for those accounts.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ActivityEsc">
            <xs:annotation>
              <xs:documentation>Activity escalation monitor</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AdvanceExpiration">
            <xs:annotation>
              <xs:documentation>Checks for commission advances whose "maintain until" dates have passed and expires them. Results in any remaining advance balance becoming owed by the producer.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AgencySuspensePayment">
            <xs:annotation>
              <xs:documentation>Process agency cycle payments and promises that match policy periods</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Archive">
            <xs:annotation>
              <xs:documentation>Identify archiving work and create work items.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AutomaticDisbursement">
            <xs:annotation>
              <xs:documentation>Checks for accounts whose unapplied funds' amount less the (amount under contract + amount slated for disbursement) is greater than billing-plan defined "Disbursement Over" amount and creates a disbursement for such accounts.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BulkPurge">
            <xs:annotation>
              <xs:documentation>Purge records through table updates</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ChargeProRataTx">
            <xs:annotation>
              <xs:documentation>Moves part of the total charge amount from the pro-rata charge's unearned T-Account (liability) to its revenue T-Account (income).</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CmsnPayable">
            <xs:annotation>
              <xs:documentation>Checks for commissions that need to be made payable.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CollEffective">
            <xs:annotation>
              <xs:documentation>Checks for Pending Collateral Requirements whose effective dates have passed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CollExpiration">
            <xs:annotation>
              <xs:documentation>Checks for Active Collateral Requirements whose expiration dates have passed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CommissionPmt">
            <xs:annotation>
              <xs:documentation>Checks for manual commission payments that have been scheduled to occur on a future date. Any commission payment whose scheduled date has passed is executed by this process.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ContactAutoSync">
            <xs:annotation>
              <xs:documentation>Automatically synchronize the local contact that are out of syn and marked 'allow' auto-sync.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DBConsistencyCheck">
            <xs:annotation>
              <xs:documentation>Database consistency checks</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DBStats">
            <xs:annotation>
              <xs:documentation>Database statistics</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DataDistribution">
            <xs:annotation>
              <xs:documentation>Data distribution for the database</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DeferredUpgradeTasks">
            <xs:annotation>
              <xs:documentation>Execute database upgrade tasks that were deferred</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Disbursement">
            <xs:annotation>
              <xs:documentation>Checks for disbursements whose due dates have passed and are approved and pays that amount to the account.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_FullPayDiscount">
            <xs:annotation>
              <xs:documentation>Evaluates whether a policy is eligible for a full pay discount</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_FundsAllotment">
            <xs:annotation>
              <xs:documentation>Allots funds from fund sources to fund uses for funds tracking.  Allots funds for all accounts that have unallotted or partially unallotted funds.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Geocode">
            <xs:annotation>
              <xs:documentation>Geocoding Addresses queue writer.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GroupException">
            <xs:annotation>
              <xs:documentation>Group exception Monitor</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Invoice">
            <xs:annotation>
              <xs:documentation>Changes the status of planned invoices whose billing date has passed to "billed". As a consequence of this change, the invoices are sent to the account.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_InvoiceDue">
            <xs:annotation>
              <xs:documentation>Changes the status of billed invoices whose due date has passed to "due". Delinquency will be triggered for any policies with past due amounts.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LegacyAgencyBill">
            <xs:annotation>
              <xs:documentation>Starts workflow on staging table imported active agency bill cycle</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LegacyCollateral">
            <xs:annotation>
              <xs:documentation>Runs allocate on Collateral with requirements and resources of the same type</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LegacyDelinquency">
            <xs:annotation>
              <xs:documentation>Starts workflow on staging table imported active delinquency processes</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LegacyLetterOfCredit">
            <xs:annotation>
              <xs:documentation>Runs allocate on Collateral with LOCs but no cash</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LetterOfCredit">
            <xs:annotation>
              <xs:documentation>Changes the status of Current LOCs to Expired when their expiration date has passed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MSDMVReport">
            <xs:annotation>
              <xs:documentation>Microsoft database DMV performance report generation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NewPayment">
            <xs:annotation>
              <xs:documentation>Distributes a payment, moving funds from the account's unapplied T-Account to the account's policies.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_OraAWRReport">
            <xs:annotation>
              <xs:documentation>Oracle database AWR performance report generation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PaymentRequest">
            <xs:annotation>
              <xs:documentation>Checks for need to change payment request status</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PhoneNumberNormalizer">
            <xs:annotation>
              <xs:documentation>Performs a normalization of phone numbers contact</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PolicyClosure">
            <xs:annotation>
              <xs:documentation>Checks for policies that are not locked and that have been fully paid. Any such policy is closed by this process.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PopulateSearchColumns">
            <xs:annotation>
              <xs:documentation>Populate searchColumn columns from their original sources.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PremiumReportReportDue">
            <xs:annotation>
              <xs:documentation>Checks to see if any premium reports are past due, kicks off delinquency if they are.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ProcessCompletionMonitor">
            <xs:annotation>
              <xs:documentation>Invoke plugin on completion of monitored worker queue</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ProcessHistoryPurge">
            <xs:annotation>
              <xs:documentation>Purge batch process history data</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ProducerPayment">
            <xs:annotation>
              <xs:documentation>Pays producers whose next scheduled auto-payment date has passed. Payment includes the amount currently payable to the producer, plus any manual commission payments that have been scheduled to occur with next payment.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PurgeClusterMembers">
            <xs:annotation>
              <xs:documentation>Purge old ClusterMember entities</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PurgeFailedWorkItems">
            <xs:annotation>
              <xs:documentation>Purge failed work items from all queues.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PurgeProfilerData">
            <xs:annotation>
              <xs:documentation>Purge profiler data at regular intervals</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PurgeTransactionIds">
            <xs:annotation>
              <xs:documentation>Purge external transaction id that no longer need to be tracked, by age.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PurgeWorkflowLogs">
            <xs:annotation>
              <xs:documentation>Purge completed workflows logs, this executes gw.processes.PurgeWorkflowLogs.gs</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PurgeWorkflows">
            <xs:annotation>
              <xs:documentation>Purge completed workflows after resetting any referenced workflows, this executes gw.processes.PurgeWorkflow.gs</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ReleaseChargeHolds">
            <xs:annotation>
              <xs:documentation>Checks for charge holds whose released dates have passed and release them.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ReleaseTtktHoldTypes">
            <xs:annotation>
              <xs:documentation>Checks for hold types on trouble tickets whose released dates have passed and removes those hold types from their holds.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_STDeleteExcluded">
            <xs:annotation>
              <xs:documentation>Asynchronous deletion of excluded rows from staging tables</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_STEncrypt">
            <xs:annotation>
              <xs:documentation>Asynchronous encryption of staging table data</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_STIntegrityCheck">
            <xs:annotation>
              <xs:documentation>Asynchronous integrity check of staging tables</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_STLoad">
            <xs:annotation>
              <xs:documentation>Asynchronous integrity check and load of staging tables</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_STPopExcluded">
            <xs:annotation>
              <xs:documentation>Asynchronous population of the exclusion tables</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_STStatistics">
            <xs:annotation>
              <xs:documentation>Asynchronous update of staging table statistics</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_StatReport">
            <xs:annotation>
              <xs:documentation>Stat Report work queue writer</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_StatementBilled">
            <xs:annotation>
              <xs:documentation>Changes the status of "Planned" Agency Bill Statements whose Bill Date has passed to "Billed".</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_StatementDue">
            <xs:annotation>
              <xs:documentation>Changes the status of "Billed" Agency Bill Statements whose Due Date has passed to "Due".</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SuspensePayment">
            <xs:annotation>
              <xs:documentation>Process the suspense payments who match accounts</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TroubleTicketEsc">
            <xs:annotation>
              <xs:documentation>Trouble Ticket escalation monitor</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_UpgradeBillingInstructionPaymentPlan">
            <xs:annotation>
              <xs:documentation>Initializes policy billing instructions' payment plans after upgrade</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_UserException">
            <xs:annotation>
              <xs:documentation>User exception Monitor</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WorkItemSetPurge">
            <xs:annotation>
              <xs:documentation>Purge WorkItemSet data</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WorkQueueInstrumentationPurge">
            <xs:annotation>
              <xs:documentation>Purge instrumentation data for work queues</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Workflow">
            <xs:annotation>
              <xs:documentation>Workflows work queue writer.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WriteoffStaging">
            <xs:annotation>
              <xs:documentation>Distributes any undistributed imported writeoffs, to be used after staging table loading.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="WorkItemSetState" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>State of a WorkItemSet</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_Canceling">
            <xs:annotation>
              <xs:documentation>a WorkItemSet goes into this state when the user requests that we cease further processing. Workers will continue processing current WorkItems, but will not start new ones.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Completed">
            <xs:annotation>
              <xs:documentation>all WorkItems have been processed. Some WorkItems may have been successful and others may have failed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CurrentlyPaused">
            <xs:annotation>
              <xs:documentation>the WorkItemSet is currently paused</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CurrentlyStarting">
            <xs:annotation>
              <xs:documentation>the WorkItemSet is currently starting up</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CurrentlyStuck">
            <xs:annotation>
              <xs:documentation>the WorkItemSet appears to be stuck. Please cancel.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Processing">
            <xs:annotation>
              <xs:documentation>the WorkItemSet is being worked on, i.e. there is at least one WorkItem that has not been completed yet</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SystemRunlevel" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Defines the runlevels that the system can be at or set to.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="GW_DAEMONS">
            <xs:annotation>
              <xs:documentation>Run level in which the server is running but users will not be able to login
to the server. Background processes, e.g. batch processes, can run in this run level.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="GW_MAINTENANCE">
            <xs:annotation>
              <xs:documentation>Run level in which the server is running but users will not be able to login
to the server. Background processes, e.g. batch processes, are not running.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="GW_MULTIUSER">
            <xs:annotation>
              <xs:documentation>Run level in which the server is running normally.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="GW_STARTING">
            <xs:annotation>
              <xs:documentation>Server is currently starting</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="IBillingCenterAPI-addDocumentToProducerRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="document" type="tns1:Document">
      <wsdl:documentation>the Document entity to add to an existing producer</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="producerID" type="soapenc:string">
      <wsdl:documentation>string public id of an existing producer</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-sendBillingInstructionRequest1" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="billingInstruction" type="tns1:PlcyBillingInstruction">
      <wsdl:documentation>an instance of one of the available concrete PlcyBillingInstruction subtypes</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="paymentPlanModifiers" type="tns1:ArrayOfPaymentPlanModifier">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-addDocumentToAccountResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="addDocumentToAccountReturn" type="soapenc:string">
      <wsdl:documentation>newly created Document entity's public ID</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-createSharedActivityRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="activityPatternID" type="soapenc:string">
      <wsdl:documentation>the public ID of the activity pattern</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="subject" type="soapenc:string">
      <wsdl:documentation>optional subject, which overrides the subject generated from the activity pattern</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="description" type="soapenc:string">
      <wsdl:documentation>optional description, which overrides the description generated from the activity pattern</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="targetDate" type="xsd:dateTime">
      <wsdl:documentation>optional target date</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="escalationDate" type="xsd:dateTime">
      <wsdl:documentation>optional escalation date</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="mandatory" type="soapenc:boolean">
      <wsdl:documentation>sets the activity &lt;code&gt;mandatory&lt;code&gt; flag, which is true if the activity must be completed and
cannot be skipped.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-triggerDelinquencyWorkflowRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="policyPeriodID" type="soapenc:string">
      <wsdl:documentation>the public id of the policy period</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="workflowTrigger" type="tns2:WorkflowTriggerKey">
      <wsdl:documentation>the trigger to be invoked</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-getApplicableCommissionSubPlanRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="policyPeriod" type="tns1:PolicyPeriod">
      <wsdl:documentation>a new policy period.  If the policy period already exists, then a DataConversionException is
thrown.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="producerCodeID" type="soapenc:string">
      <wsdl:documentation>the public ID of a producer code</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-loadProducerResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="loadProducerReturn" type="tns1:Producer">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-getAllCurrentDelinquencyPlansResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getAllCurrentDelinquencyPlansReturn" type="tns1:ArrayOfDelinquencyPlan">
      <wsdl:documentation>the available delinquency plans</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-RequiredFieldException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns3:RequiredFieldException">
      <wsdl:documentation>if required data in BillingInstruction missing</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-addNoteToPolicyPeriodResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="addNoteToPolicyPeriodReturn" type="tns1:Note">
      <wsdl:documentation>newly created Note entity which has been added to the policy period</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-getChargePatternByCodeRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="name" type="soapenc:string">
      <wsdl:documentation>which must correspond to the ChargeCode field on a charge pattern</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-getInvoiceItemsOnInvoiceRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="invoiceID" type="soapenc:string">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-getAllCurrentPaymentPlansRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IBillingCenterAPI-putHoldOnAccountRequest1" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="accountID" type="soapenc:string">
      <wsdl:documentation>The id of the Account</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="holdTypes" type="tns2:ArrayOfHoldType">
      <wsdl:documentation>The holds on the Account</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="troubleTicket" type="tns1:TroubleTicket">
      <wsdl:documentation>TroubleTicket to be used in applying the hold types to the Account</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-addNoteToTroubleTicketResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="addNoteToTroubleTicketReturn" type="tns1:Note">
      <wsdl:documentation>newly created Note entity which has been added to the trouble ticket</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-getAllCurrentDelinquencyPlansRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IBillingCenterAPI-createAccountResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="createAccountReturn" type="tns1:Account">
      <wsdl:documentation>the newly created account entity</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-releaseHoldOnAccountRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="accountID" type="soapenc:string">
      <wsdl:documentation>The id of the Account</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="holdTypes" type="tns2:ArrayOfHoldType">
      <wsdl:documentation>The holds on the Account to release</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-loadAccountRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="accountID" type="soapenc:string">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-getInvoiceItemsSortedByDateRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="policyPeriodID" type="soapenc:string">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-releaseHoldOnPolicyPeriodRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="policyPeriodID" type="soapenc:string">
      <wsdl:documentation>The id of the Policy Period</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="holdTypes" type="tns2:ArrayOfHoldType">
      <wsdl:documentation>The holds on the Policy Period to release</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-BadIdentifierException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns3:BadIdentifierException">
      <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-DuplicateKeyException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns3:DuplicateKeyException">
      <wsdl:documentation>if policy already exists, and billing instruction attempts to create a duplicate</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-putHoldOnPolicyPeriodResponse1" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="putHoldOnPolicyPeriodReturn" type="tns1:TroubleTicket">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-loadAddressResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="loadAddressReturn" type="tns1:Address">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-loadAddressRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="addressID" type="soapenc:string">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-cancelPremiumReportDueDateResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IBillingCenterAPI-getProducerInfoResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getProducerInfoReturn" type="tns1:ProducerInfo">
      <wsdl:documentation>snapshot of the given Producer</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-loadPolicyPeriodResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="loadPolicyPeriodReturn" type="tns1:PolicyPeriod">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-addDocumentToPolicyPeriodResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="addDocumentToPolicyPeriodReturn" type="soapenc:string">
      <wsdl:documentation>newly created Document entity's public ID</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-getAllCurrentBillingPlansRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IBillingCenterAPI-SOAPServerException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns3:SOAPServerException">
      <wsdl:documentation>if billing instruction cannot be committed because of concurrent data change exceptions</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-getAllActivityPatternsRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IBillingCenterAPI-getAllCurrentBillingPlansResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getAllCurrentBillingPlansReturn" type="tns1:ArrayOfBillingPlan">
      <wsdl:documentation>the available billing plans</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-getAllCurrentPaymentPlansResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getAllCurrentPaymentPlansReturn" type="tns1:ArrayOfPaymentPlan">
      <wsdl:documentation>the available payment plans</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-createTroubleTicketResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="createTroubleTicketReturn" type="tns1:TroubleTicket">
      <wsdl:documentation>the newly created trouble ticket entity</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-startDelinquencyResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="startDelinquencyReturn" type="tns1:DelinquencyProcess">
      <wsdl:documentation>the delinquency process that was created</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-getPolicyPeriodInfoRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="policyPeriodID" type="soapenc:string">
      <wsdl:documentation>the public ID of the Policy Period</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-startDelinquencyRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="policyPeriodID" type="soapenc:string">
      <wsdl:documentation>the ID of the policyPeriod</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="reason" type="tns2:DelinquencyReason">
      <wsdl:documentation>the reason the delinquency is being started</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-releaseHoldOnPolicyPeriodResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IBillingCenterAPI-cancelPremiumReportDueDateRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="policyPeriodID" type="soapenc:string">
      <wsdl:documentation>the ID of the policyPeriod</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="startDate" type="xsd:dateTime">
      <wsdl:documentation>the Start Date of the target billing period</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="endDate" type="xsd:dateTime">
      <wsdl:documentation>the End Date of the target billing period - null ok</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-sendBillingInstructionRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="billingInstruction" type="tns1:BillingInstruction">
      <wsdl:documentation>an instance of one of the available concrete PlcyBillingInstruction subtypes</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-putHoldOnAccountResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="putHoldOnAccountReturn" type="tns1:TroubleTicket">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-triggerDelinquencyWorkflowResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="triggerDelinquencyWorkflowReturn" type="soapenc:boolean">
      <wsdl:documentation>true if the trigger was invoked; false if the trigger was not available in the workflow</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-addDocumentToProducerResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="addDocumentToProducerReturn" type="soapenc:string">
      <wsdl:documentation>newly created Document entity's public ID</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-getInvoicesSortedByDateResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getInvoicesSortedByDateReturn" type="tns1:ArrayOfInvoice">
      <wsdl:documentation>invoice items sorted from oldest to newest</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-putHoldOnAccountRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="accountID" type="soapenc:string">
      <wsdl:documentation>The id of the Account</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="holdTypes" type="tns2:ArrayOfHoldType">
      <wsdl:documentation>The holds on the Account</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-getAccountWithNumberResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getAccountWithNumberReturn" type="tns1:Account">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-loadPolicyPeriodRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="policyPeriodID" type="soapenc:string">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-ServerStateException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns3:ServerStateException">
      <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-addDocumentToPolicyPeriodRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="document" type="tns1:Document">
      <wsdl:documentation>the Document entity to add to an existing policy period</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="policyPeriodID" type="soapenc:string">
      <wsdl:documentation>string public id of an existing policy period</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-getAccountInfoResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getAccountInfoReturn" type="tns1:AccountInfo">
      <wsdl:documentation>a snapshot of the given account</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-getAccountWithNumberRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="accountNumber" type="soapenc:string">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-getInvoiceItemsSortedByDateResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getInvoiceItemsSortedByDateReturn" type="tns1:ArrayOfInvoiceItem">
      <wsdl:documentation>invoice items sorted from oldest to newest</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-createAccountRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="account" type="tns1:Account">
      <wsdl:documentation>the Account entity to create.  Must include all non-nullable fields (please refer to data
dictionary for the current set of required fields for Account), except DefaultPaymentInstrument.
If DefaultPaymentInstrument is null, the account's Responsive PaymentInstrument will be chosen.  If
a Responsive PaymentInstrument does not exist, one will be created.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-releaseHoldOnAccountResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IBillingCenterAPI-loadAccountResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="loadAccountReturn" type="tns1:Account">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-addNoteToTroubleTicketRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="note" type="tns1:Note">
      <wsdl:documentation>the Note entity to add to an existing trouble ticket</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="troubleTicketPublicID" type="soapenc:string">
      <wsdl:documentation>string public id of an existing trouble ticket</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-addDocumentToAccountRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="document" type="tns1:Document">
      <wsdl:documentation>the Document entity to add to an existing account</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="accountID" type="soapenc:string">
      <wsdl:documentation>string public id of an existing account</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-putHoldOnPolicyPeriodResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="putHoldOnPolicyPeriodReturn" type="tns1:TroubleTicket">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-populateCommissionRateOverridesResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="populateCommissionRateOverridesReturn" type="tns1:ArrayOfCharge">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-getInvoicesSortedByDateRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="accountID" type="soapenc:string">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-putHoldOnPolicyPeriodRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="policyPeriodID" type="soapenc:string">
      <wsdl:documentation>The id of the Policy Period</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="holdTypes" type="tns2:ArrayOfHoldType">
      <wsdl:documentation>The holds on the Policy Period</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-createTroubleTicketRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="troubleTicket" type="tns1:TroubleTicket">
      <wsdl:documentation>the trouble ticket to create.  Must include all non-nullable fields (please refer to data dictionary for
the current set of required fields for TroubleTicket)</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-sendBillingInstructionResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="sendBillingInstructionReturn" type="tns1:BillingInstruction">
      <wsdl:documentation>array of invoice items</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-sendBillingInstructionResponse1" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="sendBillingInstructionReturn" type="tns1:PlcyBillingInstruction">
      <wsdl:documentation>array of invoice items</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-populateCommissionRateOverridesRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="policyPeriod" type="tns1:PolicyPeriod">
      <wsdl:documentation>The policy period that is going to be submitted.  The ICommission.getCommissionRate() plugin
method can use the data on the policy period to determine a rate, if necessary.  The internal method only uses
the policyRole field combined with the commission subplan to determine a rate.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="policyRole" type="tns2:PolicyRole">
      <wsdl:documentation>The policy role that is going to be used</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="commissionSubPlanID" type="soapenc:string">
      <wsdl:documentation>The commission subplan</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="charges" type="tns1:ArrayOfCharge">
      <wsdl:documentation>The charges, on which will be added the updated commission rate.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-getProducerInfoRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="producerID" type="soapenc:string">
      <wsdl:documentation>public ID of the Producer</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-addNoteToPolicyPeriodRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="note" type="tns1:Note">
      <wsdl:documentation>the Note entity to add to an existing policy period</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="policyPeriodID" type="soapenc:string">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-PermissionException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns3:PermissionException">
      <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-addNoteToAccountRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="note" type="tns1:Note">
      <wsdl:documentation>the Note entity to add to an existing account</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="accountID" type="soapenc:string">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-createSharedActivityResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="createSharedActivityReturn" type="tns1:SharedActivity">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-loadProducerRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="producerID" type="soapenc:string">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-putHoldOnPolicyPeriodRequest1" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="policyPeriodID" type="soapenc:string">
      <wsdl:documentation>The id of the Policy Period</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="holdTypes" type="tns2:ArrayOfHoldType">
      <wsdl:documentation>The holds on the Policy Period</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="troubleTicket" type="tns1:TroubleTicket">
      <wsdl:documentation>TroubleTicket to be used in applying the hold types to the PolicyPeriod</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-getAllActivityPatternsResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getAllActivityPatternsReturn" type="tns1:ArrayOfActivityPattern">
      <wsdl:documentation>all of the activity patterns in the system.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-getChargePatternByCodeResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getChargePatternByCodeReturn" type="tns1:ChargePattern">
      <wsdl:documentation>the matching ChargePattern instance, or null if no match found</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-getPolicyPeriodInfoResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getPolicyPeriodInfoReturn" type="tns1:PolicyPeriodInfo">
      <wsdl:documentation>a snapshot of the currently active Policy Period for the given Policy</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-addNoteToAccountResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="addNoteToAccountReturn" type="tns1:Note">
      <wsdl:documentation>newly created Note entity which has been added to the account</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-DataConversionException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns3:DataConversionException">
      <wsdl:documentation>if the document or accountID is null</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-getInvoiceItemsOnInvoiceResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getInvoiceItemsOnInvoiceReturn" type="tns1:ArrayOfInvoiceItem">
      <wsdl:documentation>invoice items on the invoice</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-putHoldOnAccountResponse1" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="putHoldOnAccountReturn" type="tns1:TroubleTicket">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-EntityStateException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns3:EntityStateException">
      <wsdl:documentation>if entities are in a illegal state</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-createProducerRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="producer" type="tns1:Producer">
      <wsdl:documentation>the producer to create.  Must include all non-nullable fields (please refer to data dictionary for
the current set of required fields for Producer)</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="producerPaymentPeriodicity" type="tns2:Periodicity">
      <wsdl:documentation/>
    </wsdl:part>
    <wsdl:part name="nextPaymentDate" type="xsd:dateTime">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-getAccountInfoRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="accountID" type="soapenc:string">
      <wsdl:documentation>the public ID of the account</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-createProducerResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="createProducerReturn" type="tns1:Producer">
      <wsdl:documentation>the newly created producer entity</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBillingCenterAPI-getApplicableCommissionSubPlanResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getApplicableCommissionSubPlanReturn" type="tns1:CommissionSubPlan">
      <wsdl:documentation>CommissionSubPlan that is the best match</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ICollateralAPI-ServerStateException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns3:ServerStateException">
      <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ICollateralAPI-DataConversionException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns3:DataConversionException">
      <wsdl:documentation>if account is null</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ICollateralAPI-createCollateralRequirementResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="createCollateralRequirementReturn" type="tns1:CollateralRequirement">
      <wsdl:documentation>the newly created account entity</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ICollateralAPI-PermissionException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns3:PermissionException">
      <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ICollateralAPI-BadIdentifierException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns3:BadIdentifierException">
      <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ICollateralAPI-createCollateralRequirementRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="collateralRequirement" type="tns1:CollateralRequirement">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IDataObjectAPI-setPathValuesResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="setPathValuesReturn" type="tns1:SetPathValuesResult">
      <wsdl:documentation>&lt;code&gt;SetPathValuesResult&lt;/code&gt; with the public Ids of any newly inserted entities.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IDataObjectAPI-findRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="entityType" type="soapenc:string">
      <wsdl:documentation>The type of entity to find.  Type is case-insensitive,
e.g. "Claim" and "claim" are both valid entity types.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="alias" type="soapenc:string">
      <wsdl:documentation>Used in the the where clause to refer to the root type
being returned, for example, &lt;code&gt;"c"&lt;/code&gt;.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="whereClause" type="soapenc:string">
      <wsdl:documentation>Criteria to apply when finding objects. See the &lt;i&gt;Gosu
Reference Guide&lt;/i&gt; for details on how to build a where
clause.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="filter" type="tns1:ObjectFilter">
      <wsdl:documentation>Object filter to apply to the root object. See &lt;code&gt;
ObjectFilter&lt;/code&gt; for details on how the filter is applied
to an object graph. A &lt;code&gt;null&lt;/code&gt; filter will return the entire
object graph, for example, &lt;code&gt;Claim&lt;/code&gt; and its related objects such as
&lt;code&gt;Policy&lt;/code&gt; and &lt;code&gt;Contacts&lt;/code&gt;. This can have negative performance
implications and even cause &lt;code&gt;OutOfMemoryError&lt;/code&gt;s if
the object graph returned is too large.  To avoid these
types of problems, a filter that limits the returned data
to just the desired fields should be used if possible.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IDataObjectAPI-getPathValuesResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getPathValuesReturn" type="impl:ArrayOfArrayOf_soapenc_string">
      <wsdl:documentation>A two-dimensional array of string values. Each path specified
has a corresponding string array in the results. The results return
in the same order as the paths were specified. If a path returns no values,
then its array is empty.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IDataObjectAPI-PermissionException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns3:PermissionException">
      <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IDataObjectAPI-BadIdentifierException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns3:BadIdentifierException">
      <wsdl:documentation>If the entity type is invalid</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IDataObjectAPI-getNextSequenceNumberRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="sequenceKey" type="soapenc:string">
      <wsdl:documentation>The sequenceKey on which a sequence number will be
generated for.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="minValue" type="xsd:long">
      <wsdl:documentation>if the sequenceKey is new, it will be created and
initialized with &lt;i&gt;minValue&lt;/i&gt;.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IDataObjectAPI-findIdsRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="entityType" type="soapenc:string">
      <wsdl:documentation>The type of entity to find.  Type is case-insensitive,
as a result &lt;code&gt;"Claim"&lt;/code&gt; and &lt;code&gt;"claim"&lt;/code&gt; are both valid entity types.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="alias" type="soapenc:string">
      <wsdl:documentation>Used in the where clause to refer to the root type
being returned, for example &lt;code&gt;"c"&lt;/code&gt;.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="whereClause" type="soapenc:string">
      <wsdl:documentation>Criteria to apply when finding objects. See the &lt;i&gt;Gosu
Reference Guide&lt;/i&gt; for details on how to build a where
clause.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IDataObjectAPI-getObjectByIdRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="entityType" type="soapenc:string">
      <wsdl:documentation>The type of root entity.  Type is case-insensitive, e.g.
"Claim" and "claim" are both valid entity types.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="publicId" type="soapenc:string">
      <wsdl:documentation>The publicId of the root object to return.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="filter" type="tns1:ObjectFilter">
      <wsdl:documentation>Object filter to apply to the root object. See {@link
ObjectFilter} for details on how the filter is applied to
an object graph. A NULL filter will return the entire
object graph, e.g. Claim and its related objects such as
Policy and Contacts. This can have negative performance
implications and even cause {@link OutOfMemoryError}s if
the object graph returned is too large.  To avoid these
types of problems, a filter that limits the returned data
to just the desired fields should be used if possible.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IDataObjectAPI-getPathValuesRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="entityType" type="soapenc:string">
      <wsdl:documentation>The type of root entity. The type is case-insensitive,
e.g. &lt;code&gt;"Claim"&lt;/code&gt; and &lt;code&gt;"claim"&lt;/code&gt;, are both valid types.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="publicId" type="soapenc:string">
      <wsdl:documentation>The ID of the root object from which all paths
originate.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="paths" type="impl:ArrayOf_soapenc_string">
      <wsdl:documentation>Paths of the properties to return.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IDataObjectAPI-ServerStateException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns3:ServerStateException">
      <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IDataObjectAPI-findIdsResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="findIdsReturn" type="tns1:FindIdsResult">
      <wsdl:documentation>A set of public Ids</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IDataObjectAPI-SOAPException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns3:SOAPException">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IDataObjectAPI-getNextSequenceNumberResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getNextSequenceNumberReturn" type="xsd:long">
      <wsdl:documentation>A unique sequence number for this sequence key.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IDataObjectAPI-getObjectByIdResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getObjectByIdReturn" type="tns1:GWObject">
      <wsdl:documentation>Root object of the object graph, NULL if an entity with that
publicId does not exist.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IDataObjectAPI-findResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="findReturn" type="tns1:ArrayOfGWObject">
      <wsdl:documentation>Array of objects that match the where clause criteria</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IDataObjectAPI-setPathValuesResponse1" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IDataObjectAPI-setPathValuesRequest1" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="entityType" type="soapenc:string">
      <wsdl:documentation>The type of root entity. The type is case-insensitive,
e.g. &lt;code&gt;"Claim"&lt;/code&gt; and &lt;code&gt;"claim"&lt;/code&gt;, are both valid types.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="publicId" type="soapenc:string">
      <wsdl:documentation>The ID of the root object from which all paths will
start</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="pathValues" type="tns1:ArrayOfPathValue">
      <wsdl:documentation>Array of path values to set.  Each path value has a path,
starting from the root, and a value, which is the new
value to set on the field which is at the "leaf" of the
path.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IDataObjectAPI-setPathValuesRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="entityType" type="soapenc:string">
      <wsdl:documentation>The type of root entity. The type is case-insensitive,
for example, &lt;code&gt;Claim&lt;/code&gt; and &lt;code&gt;claim&lt;/code&gt; are both valid types. If only
"rootless" entities are being added then &lt;i&gt;entityType&lt;i&gt; can
be &lt;code&gt;null&lt;/code&gt;.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="publicId" type="soapenc:string">
      <wsdl:documentation>The ID of the root object from which all the paths start.
If only "rootless" entities are being added
then &lt;i&gt;entityType&lt;/i&gt; can be &lt;code&gt;null&lt;/code&gt;.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="add" type="tns1:ArrayOfInsertPathValue">
      <wsdl:documentation>Path values of entities to add. The path leaf can
be &lt;code&gt;null&lt;/code&gt; or refer to an array or a foreign key link. If
the path is &lt;code&gt;null&lt;/code&gt; then a new "rootless" entity is
inserted. The refId is used to reference the new entity
when setting properties using update paths.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="update" type="tns1:ArrayOfPathValue">
      <wsdl:documentation>Path values of properties to set. If setting properties
on a newly inserted entity then start the path with the
refId of the new entity.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="remove" type="impl:ArrayOf_soapenc_string">
      <wsdl:documentation>Paths that point to entities to remove. The leaf of the
path must refer to a specific array element or a foreign
key link. An empty path ("") will remove the root entity.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IGroupAPI-ServerStateException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns3:ServerStateException">
      <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IGroupAPI-getGroupResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getGroupReturn" type="tns1:Group">
      <wsdl:documentation>The GroupData representing the group</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IGroupAPI-findPublicIdByNameResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="findPublicIdByNameReturn" type="soapenc:string">
      <wsdl:documentation>the matching group's publicId, or &lt;code&gt;null&lt;/code&gt; if no Group exists with the given name.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IGroupAPI-RequiredFieldException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns3:RequiredFieldException">
      <wsdl:documentation>If any of the required fields are missing.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IGroupAPI-addGroupResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="addGroupReturn" type="soapenc:string">
      <wsdl:documentation>The public identifier of the group data object.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IGroupAPI-DataConversionException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns3:DataConversionException">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IGroupAPI-PermissionException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns3:PermissionException">
      <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IGroupAPI-BadIdentifierException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns3:BadIdentifierException">
      <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IGroupAPI-DuplicateKeyException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns3:DuplicateKeyException">
      <wsdl:documentation>If the group has a public id that exists already.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IGroupAPI-getGroupRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="groupID" type="soapenc:string">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IGroupAPI-addGroupRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="groupData" type="tns1:Group">
      <wsdl:documentation>The &lt;code&gt;GroupData&lt;/code&gt; object</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IGroupAPI-findPublicIdByNameRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="groupName" type="soapenc:string">
      <wsdl:documentation>the name of the group to match</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IImportToolsAPI-rebuildRolePrivilegesRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IImportToolsAPI-csvToXmlRequest1" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="csvData" type="soapenc:string">
      <wsdl:documentation>A String containing CSV data</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="dataSet" type="xsd:int">
      <wsdl:documentation>An int defining the number of the dataset to be imported.  Datasets are ordered by inclusion, and
the smallest dataset is always numbered 0.  Thus Dataset 0 is a subset of dataset 1, and datatset 1
is a subset of dataset 2, etc.  If this param is set to -1, all data will be imported.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="ignoreNullConstraintViolations" type="xsd:boolean">
      <wsdl:documentation>Whether to continue after detecting an empty field in the CSV that
corresponds to a property that is not nullable.  If false, throws an exception in this situation.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="ignoreAllErrors" type="xsd:boolean">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IImportToolsAPI-xmlToCsvRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="xmlData" type="soapenc:string">
      <wsdl:documentation>String containing CSV data</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IImportToolsAPI-PermissionException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:PermissionException">
      <wsdl:documentation>If the user does not have SOAP Admin permission.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IImportToolsAPI-BadIdentifierException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:BadIdentifierException">
      <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IImportToolsAPI-importCsvDataRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="csvData" type="soapenc:string">
      <wsdl:documentation>The data to import, passed as a String.  This may not be null.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="dataSet" type="xsd:int">
      <wsdl:documentation/>
    </wsdl:part>
    <wsdl:part name="ignoreNullConstraintViolations" type="xsd:boolean">
      <wsdl:documentation/>
    </wsdl:part>
    <wsdl:part name="ignoreAllErrors" type="xsd:boolean">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IImportToolsAPI-xmlToCsvResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="xmlToCsvReturn" type="soapenc:string">
      <wsdl:documentation>a String containing equivalent import data in CSV format.  The result of calling csvToXml on the result
should be an equivalent XML document to #xmlData.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IImportToolsAPI-rebuildRolePrivilegesResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IImportToolsAPI-importXmlDataRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="xmlData" type="soapenc:string">
      <wsdl:documentation>The data to import, passed as a String.    This may not be null or empty.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IImportToolsAPI-ServerStateException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:ServerStateException">
      <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IImportToolsAPI-importXmlDataResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="importXmlDataReturn" type="tns2:ImportResults">
      <wsdl:documentation>Set of results of the import (number of entities imported by type, and so on).  If the import failed,
ImportResults will have the ok flag set to &lt;code&gt;false&lt;/code&gt;, and the errorLog element will
contain descriptions of the errors that were encountered.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IImportToolsAPI-RequiredFieldException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:RequiredFieldException">
      <wsdl:documentation>If csvData is null.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IImportToolsAPI-importCsvDataResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="importCsvDataReturn" type="tns2:ImportResults">
      <wsdl:documentation>Set of results of the import (number of entities imported by type, and so on).  If the import failed,
ImportResults will have the ok flag set to &lt;code&gt;false&lt;/code&gt;, and the errorLog element will
contain descriptions of the errors that were encountered.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IImportToolsAPI-importXmlDataAsByteArrayResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="importXmlDataAsByteArrayReturn" type="tns2:ImportResults">
      <wsdl:documentation>Set of results of the import (number of entities imported by type, and so on).  If the import failed,
ImportResults will have the ok flag set to &lt;code&gt;false&lt;/code&gt;, and the errorLog element will
contain descriptions of the errors that were encountered.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IImportToolsAPI-csvToXmlResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="csvToXmlReturn" type="soapenc:string">
      <wsdl:documentation>a String containing equivalent import data in XML format, suitable for import by #importXmlData(String)</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IImportToolsAPI-DataConversionException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:DataConversionException">
      <wsdl:documentation>If the data can't be imported because it violates duplicate key constraints, contains nulls in non-nullable fields, or otherwise can't be safely inserted into the database.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IImportToolsAPI-SOAPException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:SOAPException">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IImportToolsAPI-SOAPServerException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:SOAPServerException">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IImportToolsAPI-importXmlDataAsByteArrayRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="xmlData" type="soapenc:base64Binary">
      <wsdl:documentation>The data to import, passed as a byte[] for the UTF-8 bytes representing the XML string.    This may not be null or empty.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IImportToolsAPI-csvToXmlRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="csvData" type="soapenc:string">
      <wsdl:documentation>A String containing CSV data</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="ignoreNullConstraintViolations" type="xsd:boolean">
      <wsdl:documentation>Whether to continue after detecting an empty field in the CSV that
corresponds to a property that is not nullable.  If false, throws an exception in this situation.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="ignoreAllErrors" type="xsd:boolean">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IImportToolsAPI-csvToXmlResponse1" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="csvToXmlReturn" type="soapenc:string">
      <wsdl:documentation>a String containing equivalent import data in XML format, suitable for import by #importXmlData(String)</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ILoginAPI-WSSLogoutResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ILoginAPI-loginResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="loginReturn" type="soapenc:string">
      <wsdl:documentation>A valid session ID.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ILoginAPI-WSSLoginResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="WSSLoginReturn" type="soapenc:string">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ILoginAPI-PermissionException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:PermissionException">
      <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ILoginAPI-BadIdentifierException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:BadIdentifierException">
      <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ILoginAPI-WSSLoginRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="userName" type="soapenc:string">
      <wsdl:documentation/>
    </wsdl:part>
    <wsdl:part name="password" type="soapenc:string">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ILoginAPI-logoutRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="sessionID" type="soapenc:string">
      <wsdl:documentation>the session ID of the server session.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ILoginAPI-ServerStateException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:ServerStateException">
      <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ILoginAPI-WSSLogoutRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="userName" type="soapenc:string">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ILoginAPI-SOAPException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:SOAPException">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ILoginAPI-loginRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="userName" type="soapenc:string">
      <wsdl:documentation>The user name to authenticate.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="password" type="soapenc:string">
      <wsdl:documentation>The password to authenticate with.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ILoginAPI-LoginException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:LoginException">
      <wsdl:documentation>if the user cannot be authenticated or was denied access for some reason.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ILoginAPI-logoutResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IMaintenanceToolsAPI-stopWorkQueueWorkersRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="queueName" type="soapenc:string">
      <wsdl:documentation>Name of the queue</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-isPluginStartedResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="isPluginStartedReturn" type="xsd:boolean">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-batchProcessStatusByNameRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="processName" type="soapenc:string">
      <wsdl:documentation>the name of the process to retrieve the status of</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-batchProcessStatusByIDRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="pid" type="tns1:ProcessID">
      <wsdl:documentation>the process ID to retrieve the status of</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-stopPluginRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="pluginName" type="soapenc:string">
      <wsdl:documentation>the name of the plugin</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-getWorkQueueNamesResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getWorkQueueNamesReturn" type="impl:ArrayOf_soapenc_string">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-getWorkQueueStatusRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="queueName" type="soapenc:string">
      <wsdl:documentation>name of the queue</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-requestTerminationOfBatchProcessByIDResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="requestTerminationOfBatchProcessByIDReturn" type="xsd:boolean">
      <wsdl:documentation>true if the request was successful, false if the process could not be terminated</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-requestTerminationOfBatchProcessByIDRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="pid" type="tns1:ProcessID">
      <wsdl:documentation>the process ID of the process for which to request termination</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-requestTerminationOfBatchProcessByNameRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="processName" type="soapenc:string">
      <wsdl:documentation>the name of the batch process for which to request termination</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-ServerStateException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns2:ServerStateException">
      <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-importSampleDataRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="dataSet" type="soapenc:string">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-importSampleDataResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IMaintenanceToolsAPI-setWorkQueueConfigRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="queueName" type="soapenc:string">
      <wsdl:documentation>Name of the queue to modify</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="config" type="tns1:WorkQueueConfig">
      <wsdl:documentation>The configuration to establish.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-getWorkQueueConfigRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="queueName" type="soapenc:string">
      <wsdl:documentation>Name of the queue to query</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-requestTerminationOfBatchProcessByNameResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="requestTerminationOfBatchProcessByNameReturn" type="xsd:boolean">
      <wsdl:documentation>true if the request was successful, false if the process could not be terminated</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-notifyQueueWorkersRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="queueName" type="soapenc:string">
      <wsdl:documentation>Name of the queue to notify workers</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-RequiredFieldException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns2:RequiredFieldException">
      <wsdl:documentation>If the required field dataSet is null.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-getWQueueStatusResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getWQueueStatusReturn" type="tns1:WQueueStatus">
      <wsdl:documentation>The status of the queue</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-getWorkQueueConfigResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getWorkQueueConfigReturn" type="tns1:WorkQueueConfig">
      <wsdl:documentation>A WorkQueueConfig instance containing the current settings</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-isBatchProcessNameValidRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="processName" type="soapenc:string">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-setWorkQueueConfigResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IMaintenanceToolsAPI-getWQueueStatusRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="queueName" type="soapenc:string">
      <wsdl:documentation>name of the queue</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-startBatchProcessResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="startBatchProcessReturn" type="tns1:ProcessID">
      <wsdl:documentation>the ProcessID of the process that was started</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-batchProcessStatusByNameResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="batchProcessStatusByNameReturn" type="tns1:ProcessStatus">
      <wsdl:documentation>the status of that particular process</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-getValidBatchProcessNamesResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getValidBatchProcessNamesReturn" type="impl:ArrayOf_soapenc_string">
      <wsdl:documentation>String[]</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-getValidBatchProcessNamesRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IMaintenanceToolsAPI-stopPluginResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IMaintenanceToolsAPI-notifyQueueWorkersResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IMaintenanceToolsAPI-PermissionException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns2:PermissionException">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-BadIdentifierException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns2:BadIdentifierException">
      <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-stopWorkQueueWorkersResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IMaintenanceToolsAPI-startPluginResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IMaintenanceToolsAPI-getWorkQueueNamesRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IMaintenanceToolsAPI-batchProcessStatusByIDResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="batchProcessStatusByIDReturn" type="tns1:ProcessStatus">
      <wsdl:documentation>the status of that particular process invocation</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-startBatchProcessRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="processName" type="soapenc:string">
      <wsdl:documentation>the name of the batch process to start</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-startPluginRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="pluginName" type="soapenc:string">
      <wsdl:documentation>the name of the plugin to start</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-DataConversionException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns2:DataConversionException">
      <wsdl:documentation>If there is an issue while generating sample data.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-isPluginStartedRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="pluginName" type="soapenc:string">
      <wsdl:documentation>the name of the plugin to start</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-getWorkQueueStatusResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getWorkQueueStatusReturn" type="tns1:WQueueStatus">
      <wsdl:documentation>The status of the queue</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-startWorkQueueWorkersResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IMaintenanceToolsAPI-SOAPServerException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns2:SOAPServerException">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-importDefaultSampleDataRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IMaintenanceToolsAPI-startWorkQueueWorkersRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="queueName" type="soapenc:string">
      <wsdl:documentation>Name of the queue</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-importDefaultSampleDataResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IMaintenanceToolsAPI-SOAPSenderException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns2:SOAPSenderException">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-isBatchProcessNameValidResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="isBatchProcessNameValidReturn" type="xsd:boolean">
      <wsdl:documentation>boolean</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMessagingToolsAPI-resyncAccountRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="destID" type="xsd:int">
      <wsdl:documentation>The destination against which the account should be resynced.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="accountID" type="soapenc:string">
      <wsdl:documentation>The identifier of the account that should be resynced.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMessagingToolsAPI-getTotalStatisticsResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getTotalStatisticsReturn" type="tns1:MessageStatisticsData">
      <wsdl:documentation>the message statistics for the specified destination</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMessagingToolsAPI-retryRetryableErrorMessagesRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="destID" type="xsd:int">
      <wsdl:documentation>The destination that should be retried.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMessagingToolsAPI-retryRetryableErrorMessagesResponse1" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="retryRetryableErrorMessagesReturn" type="xsd:boolean">
      <wsdl:documentation>Returns true if all messages were successfully retried; false if any errors occurred.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMessagingToolsAPI-getMessageIdRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="senderRefID" type="soapenc:string">
      <wsdl:documentation>The sender ref id for the message we want to get</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="destinationID" type="xsd:int">
      <wsdl:documentation>The destination id for the message we want to get. -1 would match all destination ids.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMessagingToolsAPI-retryMessageRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="messageID" type="xsd:int">
      <wsdl:documentation>The message to retry.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMessagingToolsAPI-retryRetryableErrorMessagesResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="retryRetryableErrorMessagesReturn" type="xsd:boolean">
      <wsdl:documentation>Returns true if all messages were successfully retried; false if any errors occurred.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMessagingToolsAPI-resyncPolicyPeriodRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="destID" type="xsd:int">
      <wsdl:documentation>The destination against which the policy period should be resynced.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="policyPeriodID" type="soapenc:string">
      <wsdl:documentation>The identifier of the policy period that should be resynced.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMessagingToolsAPI-acknowledgeMessageResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="acknowledgeMessageReturn" type="tns1:MessageOptionalFields">
      <wsdl:documentation>optional message fields that can be set</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMessagingToolsAPI-ServerStateException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns2:ServerStateException">
      <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMessagingToolsAPI-purgeCompletedMessagesResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IMessagingToolsAPI-suspendDestinationRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="destID" type="xsd:int">
      <wsdl:documentation>The destination id of the destination to suspend</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMessagingToolsAPI-purgeCompletedMessagesRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="cutoff" type="xsd:dateTime">
      <wsdl:documentation>Remove messages with send time less than this date.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMessagingToolsAPI-suspendDestinationResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IMessagingToolsAPI-SOAPException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns2:SOAPException">
      <wsdl:documentation>If the ack could not be committed to the database</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMessagingToolsAPI-retryMessageResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="retryMessageReturn" type="xsd:boolean">
      <wsdl:documentation>Returns whether or not the message was successfully retried.
If the message with this messageID does not exist, this returns false.
If the message is not a retryable error message or an inflight message, this returns false.
Returning true does not necessarily mean that the retry was successful; it just means that the message was retried.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMessagingToolsAPI-resyncProducerResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IMessagingToolsAPI-getMessageStatisticsForSafeOrderedObjectResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getMessageStatisticsForSafeOrderedObjectReturn" type="tns1:MessageStatisticsData">
      <wsdl:documentation>the message statistics for the specified destination and safe order object</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMessagingToolsAPI-skipMessageRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="messageID" type="xsd:int">
      <wsdl:documentation>The message to skip.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMessagingToolsAPI-resumeDestinationResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IMessagingToolsAPI-acknowledgeMessageRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="ack" type="tns1:Acknowledgement">
      <wsdl:documentation>The acknowledgement to report</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMessagingToolsAPI-resumeDestinationRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="destID" type="xsd:int">
      <wsdl:documentation>The destination id of the destination to resume</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMessagingToolsAPI-PermissionException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns2:PermissionException">
      <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMessagingToolsAPI-resyncAccountResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IMessagingToolsAPI-BadIdentifierException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns2:BadIdentifierException">
      <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMessagingToolsAPI-resyncProducerRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="destID" type="xsd:int">
      <wsdl:documentation>The destination against which the producer should be resynced.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="producerID" type="soapenc:string">
      <wsdl:documentation>The identifier of the producer that should be resynced.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMessagingToolsAPI-skipMessageResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="skipMessageReturn" type="xsd:boolean">
      <wsdl:documentation>Returns whether the message was successfully skipped.
If the message with this messageId does not exist, this returns false.
If the message is not in an active state(active states are:
pending send, inflight, error, retryable error and pending retry),
this returns false.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMessagingToolsAPI-resyncPolicyPeriodResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IMessagingToolsAPI-retryRetryableErrorMessagesForCategoryResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="retryRetryableErrorMessagesForCategoryReturn" type="xsd:boolean">
      <wsdl:documentation>Returns true if all messages were successfully retried; false if any errors occurred.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMessagingToolsAPI-getTotalStatisticsRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="destID" type="xsd:int">
      <wsdl:documentation>The destination to get the message statistics.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMessagingToolsAPI-retryRetryableErrorMessagesRequest1" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="destID" type="xsd:int">
      <wsdl:documentation>The destination that should be retried.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="retryLimit" type="xsd:int">
      <wsdl:documentation>Retry only messages with retryCount &lt; retryLimit; if retryLimit
is 0, retry all messages.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMessagingToolsAPI-getMessageStatisticsForSafeOrderedObjectRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="destID" type="xsd:int">
      <wsdl:documentation>The destination to get the message statistics.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="safeOrderedObjectId" type="soapenc:string">
      <wsdl:documentation>The public id of the safe ordered object of interest</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMessagingToolsAPI-DataConversionException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns2:DataConversionException">
      <wsdl:documentation>If account cannot be found</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMessagingToolsAPI-getMessageIdResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getMessageIdReturn" type="xsd:int">
      <wsdl:documentation>message id, or -1 if message is not found</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMessagingToolsAPI-retryRetryableErrorMessagesForCategoryRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="destID" type="xsd:int">
      <wsdl:documentation>The destination that should be retried.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="category" type="tns3:ErrorCategory">
      <wsdl:documentation>The error category of the messages that should be retried.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IPaymentAPI-PermissionException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns3:PermissionException">
      <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IPaymentAPI-payToProducerUnappliedRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="producerID" type="soapenc:string">
      <wsdl:documentation/>
    </wsdl:part>
    <wsdl:part name="moneyDetails" type="tns1:NewAgencyMoneyDetails">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IPaymentAPI-BadIdentifierException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns3:BadIdentifierException">
      <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IPaymentAPI-loadProducerRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="producerID" type="soapenc:string">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IPaymentAPI-payToFirstOpenStatementResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="payToFirstOpenStatementReturn" type="soapenc:string">
      <wsdl:documentation>invoice statement paid</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IPaymentAPI-writeoffProducerRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="producerID" type="soapenc:string">
      <wsdl:documentation/>
    </wsdl:part>
    <wsdl:part name="writeoffAmount" type="soapenc:decimal">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IPaymentAPI-payToFirstOpenStatementRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="producerID" type="soapenc:string">
      <wsdl:documentation/>
    </wsdl:part>
    <wsdl:part name="moneyDetails" type="tns1:NewAgencyMoneyDetails">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IPaymentAPI-loadAddressResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="loadAddressReturn" type="tns1:Address">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IPaymentAPI-getProducerUnappliedResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getProducerUnappliedReturn" type="soapenc:decimal">
      <wsdl:documentation>producer unapplied</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IPaymentAPI-writeoffProducerResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="writeoffProducerReturn" type="soapenc:decimal">
      <wsdl:documentation>producer writeoff expense</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IPaymentAPI-loadAddressRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="addressID" type="soapenc:string">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IPaymentAPI-createAgencyPaymentRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="moneyDetails" type="tns1:NewAgencyMoneyDetails">
      <wsdl:documentation/>
    </wsdl:part>
    <wsdl:part name="statementID" type="soapenc:string">
      <wsdl:documentation/>
    </wsdl:part>
    <wsdl:part name="grossAmounts" type="impl:ArrayOf_soapenc_decimal">
      <wsdl:documentation/>
    </wsdl:part>
    <wsdl:part name="commissionAmounts" type="impl:ArrayOf_soapenc_decimal">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IPaymentAPI-getAccountWithNumberResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getAccountWithNumberReturn" type="tns1:Account">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IPaymentAPI-loadPolicyPeriodRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="policyPeriodID" type="soapenc:string">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IPaymentAPI-ServerStateException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns3:ServerStateException">
      <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IPaymentAPI-getAccountWithNumberRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="accountNumber" type="soapenc:string">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IPaymentAPI-loadProducerResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="loadProducerReturn" type="tns1:Producer">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IPaymentAPI-loadPolicyPeriodResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="loadPolicyPeriodReturn" type="tns1:PolicyPeriod">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IPaymentAPI-DataConversionException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns3:DataConversionException">
      <wsdl:documentation>If the accountNumber is null.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IPaymentAPI-loadAccountResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="loadAccountReturn" type="tns1:Account">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IPaymentAPI-getProducerUnappliedRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="producerID" type="soapenc:string">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IPaymentAPI-payToProducerUnappliedResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="payToProducerUnappliedReturn" type="soapenc:decimal">
      <wsdl:documentation>the new unapplied amount of the producer</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IPaymentAPI-createAgencyPaymentResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IPaymentAPI-loadAccountRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="accountID" type="soapenc:string">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IPolicyPeriodAPI-ServerStateException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:ServerStateException">
      <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IPolicyPeriodAPI-RequiredFieldException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:RequiredFieldException">
      <wsdl:documentation>Policy period public id cannot be null</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IPolicyPeriodAPI-changeBillingMethodToAgencyBillResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IPolicyPeriodAPI-PermissionException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:PermissionException">
      <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IPolicyPeriodAPI-BadIdentifierException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:BadIdentifierException">
      <wsdl:documentation>Policy period public id is not valid</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IPolicyPeriodAPI-changeBillingMethodToAgencyBillRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="policyPeriodID" type="soapenc:string">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IPolicyPeriodAPI-changeBillingMethodToDirectBillResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IPolicyPeriodAPI-changeBillingMethodToDirectBillRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="createInvoiceForToday" type="xsd:boolean">
      <wsdl:documentation/>
    </wsdl:part>
    <wsdl:part name="policyPeriodID" type="soapenc:string">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IProfilerAPI-setEnableProfilerForBatchProcessRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="enable" type="xsd:boolean">
      <wsdl:documentation>whether to enable or disable</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="type" type="tns1:BatchProcessType">
      <wsdl:documentation>batch process type</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="hiResTime" type="xsd:boolean">
      <wsdl:documentation>whether to use hi-resolution clock for timing (Windows only)</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="enableStackTracing" type="xsd:boolean">
      <wsdl:documentation>to allow stack tracing (expensive) or not. This is ignored if enable is false</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="enableQueryOptimizerTracing" type="xsd:boolean">
      <wsdl:documentation>whether to allow query optimizer tracing (expensive) or not. This is ignored if enable is false.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="enableExtendedQueryTracing" type="xsd:boolean">
      <wsdl:documentation>whether to allow extended query tracing (expensive) or not. This is ignored if enable is false.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="dbmsCounterThresholdMs" type="xsd:int">
      <wsdl:documentation>The threshold for how long a database operation can take before generating a report using dbms
counters for the interval (start of profiling session, end of profiling session). Use 0 to disable.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="diffDbmsCounters" type="xsd:boolean">
      <wsdl:documentation>Whether diffing DBMS counters is enabled. Only meaningful if ProfilerEnabled and DbmsCounterThresholdMs are true.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IProfilerAPI-setEnableProfilerForWorkQueueResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IProfilerAPI-PermissionException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns2:PermissionException">
      <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IProfilerAPI-setEnableProfilerForSubsequentWebSessionsResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IProfilerAPI-setEnableProfilerForBatchProcessResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IProfilerAPI-BadIdentifierException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns2:BadIdentifierException">
      <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IProfilerAPI-setEnableProfilerForWorkQueueRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="enable" type="xsd:boolean">
      <wsdl:documentation>whether to enable or disable</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="type" type="tns1:BatchProcessType">
      <wsdl:documentation>batch process type</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="hiResTime" type="xsd:boolean">
      <wsdl:documentation>whether to use hi-resolution clock for timing (Windows only)</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="enableStackTracing" type="xsd:boolean">
      <wsdl:documentation>whether to allow stack tracing (expensive) or not. This is ignored if enable is false</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="enableQueryOptimizerTracing" type="xsd:boolean">
      <wsdl:documentation>whether to allow query optimizer tracing (expensive) or not. This is ignored if enable is false.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="enableExtendedQueryTracing" type="xsd:boolean">
      <wsdl:documentation>whether to allow extended query tracing (expensive) or not. This is ignored if enable is false.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="dbmsCounterThresholdMs" type="xsd:int">
      <wsdl:documentation>The threshold for how long a database operation can take before generating a report using dbms
counters for the interval (start of profiling session, end of profiling session). Use 0 to disable.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="diffDbmsCounters" type="xsd:boolean">
      <wsdl:documentation>Whether diffing DBMS counters is enabled. Only meaningful if ProfilerEnabled and DbmsCounterThresholdMs are true.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IProfilerAPI-setEnableProfilerForStartablePluginResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IProfilerAPI-setEnableProfilerForBatchProcessAndWorkQueueResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IProfilerAPI-ServerStateException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns2:ServerStateException">
      <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IProfilerAPI-setEnableProfilerForMessageDestinationRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="enable" type="xsd:boolean">
      <wsdl:documentation>whether to enable or disable</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="destinationID" type="xsd:int">
      <wsdl:documentation/>
    </wsdl:part>
    <wsdl:part name="hiResTime" type="xsd:boolean">
      <wsdl:documentation>whether to use hi-resolution clock for timing (Windows only)</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="enableStackTracing" type="xsd:boolean">
      <wsdl:documentation>whether to allow stack tracing (expensive) or not. This is ignored if enable is false</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="enableQueryOptimizerTracing" type="xsd:boolean">
      <wsdl:documentation>whether to allow query optimizer tracing (expensive) or not. This is ignored if enable is false.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="enableExtendedQueryTracing" type="xsd:boolean">
      <wsdl:documentation>whether to allow extended query tracing (expensive) or not. This is ignored if enable is false.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="dbmsCounterThresholdMs" type="xsd:int">
      <wsdl:documentation>The threshold for how long a database operation can take before generating a report using dbms
counters for the interval (start of profiling session, end of profiling session). Use 0 to disable.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="diffDbmsCounters" type="xsd:boolean">
      <wsdl:documentation>Whether diffing DBMS counters is enabled. Only meaningful if ProfilerEnabled and DbmsCounterThresholdMs are true.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IProfilerAPI-setEnableProfilerForStartablePluginRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="enable" type="xsd:boolean">
      <wsdl:documentation>whether to enable or disable</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="pluginName" type="soapenc:string">
      <wsdl:documentation/>
    </wsdl:part>
    <wsdl:part name="hiResTime" type="xsd:boolean">
      <wsdl:documentation>whether to use hi-resolution clock for timing (Windows only)</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="enableStackTracing" type="xsd:boolean">
      <wsdl:documentation>whether to allow stack tracing (expensive) or not. This is ignored if enable is false</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="enableQueryOptimizerTracing" type="xsd:boolean">
      <wsdl:documentation>whether to allow query optimizer tracing (expensive) or not. This is ignored if enable is false.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="enableExtendedQueryTracing" type="xsd:boolean">
      <wsdl:documentation>whether to allow extended query tracing (expensive) or not. This is ignored if enable is false.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="dbmsCounterThresholdMs" type="xsd:int">
      <wsdl:documentation>The threshold for how long a database operation can take before generating a report using dbms
counters for the interval (start of profiling session, end of profiling session). Use 0 to disable.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="diffDbmsCounters" type="xsd:boolean">
      <wsdl:documentation>Whether diffing DBMS counters is enabled. Only meaningful if ProfilerEnabled and DbmsCounterThresholdMs are true.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IProfilerAPI-setEnableProfilerForWebServiceResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IProfilerAPI-setEnableProfilerForMessageDestinationResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IProfilerAPI-setEnableProfilerForSubsequentWebSessionsRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="name" type="soapenc:string">
      <wsdl:documentation>name for the profiler session. optional; use null for the default name.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="enable" type="xsd:boolean">
      <wsdl:documentation>whether to enable or disable</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="hiResTime" type="xsd:boolean">
      <wsdl:documentation>whether to use hi-resolution clock for timing (Windows only)</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="enableStackTracing" type="xsd:boolean">
      <wsdl:documentation>whether to allow stack tracing (expensive) or not. This is ignored if enable is false</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="enableQueryOptimizerTracing" type="xsd:boolean">
      <wsdl:documentation>whether to allow query optimizer tracing (expensive) or not. This is ignored if enable is false.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="enableExtendedQueryTracing" type="xsd:boolean">
      <wsdl:documentation>whether to allow extended query tracing (expensive) or not. This is ignored if enable is false.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="dbmsCounterThresholdMs" type="xsd:int">
      <wsdl:documentation>The threshold for how long a database operation can take before generating a report using dbms
counters for the interval (start of profiling session, end of profiling session). Use 0 to disable.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="diffDbmsCounters" type="xsd:boolean">
      <wsdl:documentation>Whether diffing DBMS counters is enabled. Only meaningful if ProfilerEnabled and DbmsCounterThresholdMs are true.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IProfilerAPI-setEnableProfilerForWebServiceRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="enable" type="xsd:boolean">
      <wsdl:documentation>whether to enable or disable</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="serviceName" type="soapenc:string">
      <wsdl:documentation/>
    </wsdl:part>
    <wsdl:part name="operationName" type="soapenc:string">
      <wsdl:documentation/>
    </wsdl:part>
    <wsdl:part name="hiResTime" type="xsd:boolean">
      <wsdl:documentation>whether to use hi-resolution clock for timing (Windows only)</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="enableStackTracing" type="xsd:boolean">
      <wsdl:documentation>whether to allow stack tracing (expensive) or not. This is ignored if enable is false</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="enableQueryOptimizerTracing" type="xsd:boolean">
      <wsdl:documentation>whether to allow query optimizer tracing (expensive) or not. This is ignored if enable is false.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="enableExtendedQueryTracing" type="xsd:boolean">
      <wsdl:documentation>whether to allow extended query tracing (expensive) or not. This is ignored if enable is false.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="dbmsCounterThresholdMs" type="xsd:int">
      <wsdl:documentation>The threshold for how long a database operation can take before generating a report using dbms
counters for the interval (start of profiling session, end of profiling session). Use 0 to disable.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="diffDbmsCounters" type="xsd:boolean">
      <wsdl:documentation>Whether diffing DBMS counters is enabled. Only meaningful if ProfilerEnabled and DbmsCounterThresholdMs are true.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IProfilerAPI-setEnableProfilerForBatchProcessAndWorkQueueRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="enable" type="xsd:boolean">
      <wsdl:documentation>whether to enable or disable</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="type" type="tns1:BatchProcessType">
      <wsdl:documentation>batch process type</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="hiResTime" type="xsd:boolean">
      <wsdl:documentation>whether to use hi-resolution clock for timing (Windows only)</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="enableStackTracing" type="xsd:boolean">
      <wsdl:documentation>whether to allow stack tracing (expensive) or not. This is ignored if enable is false</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="enableQueryOptimizerTracing" type="xsd:boolean">
      <wsdl:documentation>whether to allow query optimizer tracing (expensive) or not. This is ignored if enable is false.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="enableExtendedQueryTracing" type="xsd:boolean">
      <wsdl:documentation>whether to allow extended query tracing (expensive) or not. This is ignored if enable is false.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="dbmsCounterThresholdMs" type="xsd:int">
      <wsdl:documentation>The threshold for how long a database operation can take before generating a report using dbms
counters for the interval (start of profiling session, end of profiling session). Use 0 to disable.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="diffDbmsCounters" type="xsd:boolean">
      <wsdl:documentation>Whether diffing DBMS counters is enabled. Only meaningful if ProfilerEnabled and DbmsCounterThresholdMs are true.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IStagingTableEncryptionAPI-ServerStateException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:ServerStateException">
      <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IStagingTableEncryptionAPI-encryptDataOnStagingTablesRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IStagingTableEncryptionAPI-encryptDataOnStagingTablesAsBatchProcessResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="encryptDataOnStagingTablesAsBatchProcessReturn" type="tns2:ProcessID">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IStagingTableEncryptionAPI-encryptDataOnStagingTablesResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IStagingTableEncryptionAPI-SOAPException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:SOAPException">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IStagingTableEncryptionAPI-PermissionException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:PermissionException">
      <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IStagingTableEncryptionAPI-BadIdentifierException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:BadIdentifierException">
      <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IStagingTableEncryptionAPI-encryptDataOnStagingTablesAsBatchProcessRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ISystemToolsAPI-checkDatabaseConsistencyRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="returnAllResults" type="xsd:boolean">
      <wsdl:documentation>true - DBConsistencyCheckResult is returned for every check
false - DBConsistencyCheckResults returned only for failures.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ISystemToolsAPI-reportDatabaseCatalogStatisticsRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ISystemToolsAPI-submitAwrReportBatchJobResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="submitAwrReportBatchJobReturn" type="tns2:ProcessID">
      <wsdl:documentation>ProcessID  pid of batch job</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ISystemToolsAPI-reloadLoggingConfigRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ISystemToolsAPI-getVersionRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ISystemToolsAPI-getVersionResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getVersionReturn" type="tns2:ServerVersion">
      <wsdl:documentation>Version of the server, including application version and schema version.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ISystemToolsAPI-getLoggingCategoriesRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ISystemToolsAPI-RequiredFieldException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:RequiredFieldException">
      <wsdl:documentation>If the logger field is null.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ISystemToolsAPI-submitDBCCBatchJobRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="tablesToCheck" type="impl:ArrayOf_soapenc_string">
      <wsdl:documentation>null - check all tables, else array of tables names to check</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="consistencyCheckTypesToCheck" type="impl:ArrayOf_soapenc_string">
      <wsdl:documentation>null - check all types, else array of types to check
Must be valid &lt;code&gt;ConsistencyCheckType&lt;/code&gt;s.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ISystemToolsAPI-SOAPException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:SOAPException">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ISystemToolsAPI-checkDatabaseConsistencyResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="checkDatabaseConsistencyReturn" type="tns2:ArrayOfDBConsistencyCheckResult">
      <wsdl:documentation>DBConsistencyCheckResult[] Describes results of consistency checks
(All checks if returnAllResults=true, otherwise all failures.)</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ISystemToolsAPI-submitUpdateStatsResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ISystemToolsAPI-verifyDatabaseSchemaRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ISystemToolsAPI-updateLoggingLevelResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ISystemToolsAPI-cancelUpdateStatsResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ISystemToolsAPI-BadIdentifierException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:BadIdentifierException">
      <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ISystemToolsAPI-getLoggingCategoriesResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getLoggingCategoriesReturn" type="impl:ArrayOf_soapenc_string">
      <wsdl:documentation>An array of Strings containing all logger categories in the system</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ISystemToolsAPI-setRunlevelRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="runLevel" type="tns3:SystemRunlevel">
      <wsdl:documentation>The level at which the server should run.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ISystemToolsAPI-submitDmvReportBatchJobWithParamsRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="includeDatabaseStatistics" type="xsd:boolean">
      <wsdl:documentation>The default is true.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ISystemToolsAPI-submitDBCCBatchJobResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="submitDBCCBatchJobReturn" type="tns2:ProcessID">
      <wsdl:documentation>ProcessID  Describes results of consistency checks</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ISystemToolsAPI-getUpdateStatsStateRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ISystemToolsAPI-SOAPServerException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:SOAPServerException">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ISystemToolsAPI-setRunlevelResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ISystemToolsAPI-submitDmvReportBatchJobRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ISystemToolsAPI-getActiveSessionDataRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ISystemToolsAPI-checkPartialDatabaseConsistencyResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="checkPartialDatabaseConsistencyReturn" type="tns2:ArrayOfDBConsistencyCheckResult">
      <wsdl:documentation>DBConsistencyCheckResult[]  Describes results of consistency checks</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ISystemToolsAPI-submitAwrReportBatchJobRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="awrReportUserSettings" type="tns2:AWRReportUserSettings">
      <wsdl:documentation>All the settings to run the AWR report</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ISystemToolsAPI-submitUpdateStatsRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="description" type="soapenc:string">
      <wsdl:documentation>null - Description of the job</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="incremental" type="xsd:boolean">
      <wsdl:documentation>true: the process should perform an incremental update; false: the process should perform a full upgrade</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ISystemToolsAPI-recalculateFileChecksumsRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ISystemToolsAPI-ServerStateException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:ServerStateException">
      <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ISystemToolsAPI-reportPartialDatabaseCatalogStatisticsRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="tables" type="impl:ArrayOf_soapenc_string">
      <wsdl:documentation>null - report on all tables, else array of tables names to on which to report</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="stagingTables" type="impl:ArrayOf_soapenc_string">
      <wsdl:documentation>null - report on all staging tables, else array of staging tables names to on which to report</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="typelistTables" type="impl:ArrayOf_soapenc_string">
      <wsdl:documentation>null - report on all typelist tables, else array of typelist tables names to on which to report</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ISystemToolsAPI-getRunlevelRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ISystemToolsAPI-getDBCCStateResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getDBCCStateReturn" type="tns3:WorkItemSetState">
      <wsdl:documentation>the state of the consistency checks process</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ISystemToolsAPI-reportPartialDatabaseCatalogStatisticsResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="reportPartialDatabaseCatalogStatisticsReturn" type="soapenc:base64Binary">
      <wsdl:documentation>a zip file of an HTML report to view the database catalog statistics on the selected tables.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ISystemToolsAPI-getActiveSessionDataResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getActiveSessionDataReturn" type="tns2:ArrayOfSessionData">
      <wsdl:documentation>all server session information.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ISystemToolsAPI-cancelUpdateStatsRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ISystemToolsAPI-getDBCCStateRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ISystemToolsAPI-PermissionException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:PermissionException">
      <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ISystemToolsAPI-getRecentAWRSnapshotInfoResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getRecentAWRSnapshotInfoReturn" type="tns2:ArrayOfDatabaseSnapshotInfo">
      <wsdl:documentation>String[]                    Requested AWR snapshot information</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ISystemToolsAPI-reloadLoggingConfigResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ISystemToolsAPI-getRecentAWRSnapshotInfoRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="numSnapshots" type="xsd:int">
      <wsdl:documentation>Number of snapshots to retrieve.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ISystemToolsAPI-verifyDatabaseSchemaResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="verifyDatabaseSchemaReturn" type="impl:ArrayOf_soapenc_string">
      <wsdl:documentation>String[] Any differences between the data model and the physical database.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ISystemToolsAPI-getUpdateStatsStateResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getUpdateStatsStateReturn" type="tns3:WorkItemSetState">
      <wsdl:documentation>the state of the update stats process</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ISystemToolsAPI-updateLoggingLevelRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="logger" type="soapenc:string">
      <wsdl:documentation>The name of the logger to be updated - this should be a qualified class or package</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="level" type="soapenc:string">
      <wsdl:documentation>One of 5 possible logging levels: INFO, DEBUG, WARN, ERROR, TRACE</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ISystemToolsAPI-recalculateFileChecksumsResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="recalculateFileChecksumsReturn" type="xsd:boolean">
      <wsdl:documentation>&lt;code&gt;true&lt;/code&gt; if checksums were recalcuted and &lt;code&gt;false&lt;/code&gt; if clustering or configuration verification were disabled.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ISystemToolsAPI-reportDatabaseCatalogStatisticsResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="reportDatabaseCatalogStatisticsReturn" type="soapenc:base64Binary">
      <wsdl:documentation>a zip file of an HTML report to view the database catalog statistics.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ISystemToolsAPI-submitDmvReportBatchJobWithParamsResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="submitDmvReportBatchJobWithParamsReturn" type="tns2:ProcessID">
      <wsdl:documentation>ProcessID  pid of batch job</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ISystemToolsAPI-submitDmvReportBatchJobResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="submitDmvReportBatchJobReturn" type="tns2:ProcessID">
      <wsdl:documentation>ProcessID  pid of batch job</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ISystemToolsAPI-getHighestRunlevelResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getHighestRunlevelReturn" type="tns3:SystemRunlevel">
      <wsdl:documentation>An int containing the highest runlevel of the cluster.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ISystemToolsAPI-getHighestRunlevelRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ISystemToolsAPI-getRunlevelResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getRunlevelReturn" type="tns3:SystemRunlevel">
      <wsdl:documentation>An int containing the runlevel</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ISystemToolsAPI-checkPartialDatabaseConsistencyRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="returnAllResults" type="xsd:boolean">
      <wsdl:documentation>true - DBConsistencyCheckResult is returned for every check
false - DBConsistencyCheckResults returned only for failures.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="tablesToCheck" type="impl:ArrayOf_soapenc_string">
      <wsdl:documentation>null - check all tables, else array of tables names to check</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="consistencyCheckTypesToCheck" type="impl:ArrayOf_soapenc_string">
      <wsdl:documentation>null - check all types, else array of types to check
Must be valid &lt;code&gt;ConsistencyCheckType&lt;/code&gt;s.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITableImportAPI-deleteExcludedRowsFromStagingTablesRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ITableImportAPI-deleteExcludedRowsFromStagingTablesAsBatchProcessResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="deleteExcludedRowsFromStagingTablesAsBatchProcessReturn" type="tns2:ProcessID">
      <wsdl:documentation>a ProcessID that can be used to retrieve the status of the job</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITableImportAPI-updateStatisticsOnStagingTablesAsBatchProcessRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ITableImportAPI-updateStatisticsOnStagingTablesAsBatchProcessResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="updateStatisticsOnStagingTablesAsBatchProcessReturn" type="tns2:ProcessID">
      <wsdl:documentation>a ProcessID that can be used to retrieve the status of the job</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITableImportAPI-clearErrorTableResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ITableImportAPI-ServerStateException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:ServerStateException">
      <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITableImportAPI-integrityCheckStagingTableContentsAndLoadSourceTablesAsBatchProcessRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="clearErrorTable" type="soapenc:boolean">
      <wsdl:documentation>If true, the load error tables will be cleared
before executing integrity checking (defaults to true if this parameter is null).</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="populateExclusionTable" type="soapenc:boolean">
      <wsdl:documentation>If true, populate exclusion table with any newly
excluded rows before executing integrity checking (defaults to true if this parameter
is null).</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="updateDBStatisticsWithEstimates" type="soapenc:boolean">
      <wsdl:documentation>If true, then update the database statistics on any table that will be loaded with
estimated changes based on the contents of the associated staging table.  When
loading large amounts of data which will cause a source table to grow significantly, the optimizer could choose
a bad query plan based on the existing state of the database statistics unless the loader updates the database
statistics to reflect the expected size of the table after the load has completed.  This
parameter is only meaningful when running against Oracle.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="allowRefsToExistingNonAdminRows" type="soapenc:boolean">
      <wsdl:documentation>If true, rows in the staging tables are allowed to reference
existing rows in any table, regardless of whether or not the tables
are admin tables.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITableImportAPI-updateStatisticsOnStagingTablesRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ITableImportAPI-integrityCheckZoneStagingTableContentsAndLoadZoneSourceTablesRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="clearErrorTable" type="soapenc:boolean">
      <wsdl:documentation>If true, the load error tables will be cleared
before executing integrity checking (defaults to true if this parameter is null).</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="populateExclusionTable" type="soapenc:boolean">
      <wsdl:documentation>If true, populate exclusion table with any newly
excluded rows before executing integrity checking (defaults to true if this parameter
is null).</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="updateDBStatisticsWithEstimates" type="soapenc:boolean">
      <wsdl:documentation>If true, then update the database statistics on any table that will be loaded with
estimated changes based on the contents of the associated staging table.  When
loading large amounts of data which will cause a source table to grow significantly, the optimizer could choose
a bad query plan based on the existing state of the database statistics unless the loader updates the database
statistics to reflect the expected size of the table after the load has completed.  This
parameter is only meaningful when running against Oracle.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITableImportAPI-integrityCheckZoneStagingTableContentsAndLoadZoneSourceTablesResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="integrityCheckZoneStagingTableContentsAndLoadZoneSourceTablesReturn" type="tns2:TableImportResult">
      <wsdl:documentation>a TableImportResult object containing load error information and
any raised exception.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITableImportAPI-SOAPException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:SOAPException">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITableImportAPI-populateExclusionTableAsBatchProcessResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="populateExclusionTableAsBatchProcessReturn" type="tns2:ProcessID">
      <wsdl:documentation>a ProcessID that can be used to retrieve the status of the job</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITableImportAPI-integrityCheckStagingTableContentsAndLoadSourceTablesRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="clearErrorTable" type="soapenc:boolean">
      <wsdl:documentation>If true, the load error tables will be cleared
before executing integrity checking (defaults to true if this parameter is null).</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="populateExclusionTable" type="soapenc:boolean">
      <wsdl:documentation>If true, populate exclusion table with any newly
excluded rows before executing integrity checking (defaults to true if this parameter
is null).</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="updateDBStatisticsWithEstimates" type="soapenc:boolean">
      <wsdl:documentation>If true, then update the database statistics on any table that will be loaded with
estimated changes based on the contents of the associated staging table.  When
loading large amounts of data which will cause a source table to grow significantly, the optimizer could choose
a bad query plan based on the existing state of the database statistics unless the loader updates the database
statistics to reflect the expected size of the table after the load has completed.  This
parameter is only meaningful when running against Oracle.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="allowRefsToExistingNonAdminRows" type="soapenc:boolean">
      <wsdl:documentation>If true, rows in the staging tables are allowed to reference
existing rows in any table, regardless of whether or not the tables
are admin tables.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITableImportAPI-integrityCheckStagingTableContentsResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="integrityCheckStagingTableContentsReturn" type="tns2:TableImportResult">
      <wsdl:documentation>a TableImportResult object containing load error information and
any raised exception.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITableImportAPI-clearStagingTablesRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ITableImportAPI-integrityCheckStagingTableContentsAndLoadSourceTablesResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="integrityCheckStagingTableContentsAndLoadSourceTablesReturn" type="tns2:TableImportResult">
      <wsdl:documentation>a TableImportResult object containing load error information and
any raised exception.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITableImportAPI-updateStatisticsOnStagingTablesResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ITableImportAPI-integrityCheckStagingTableContentsRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="clearErrorTable" type="soapenc:boolean">
      <wsdl:documentation>If true, the load error tables will be cleared
before executing integrity checking (defaults to true if this parameter is null).</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="populateExclusionTable" type="soapenc:boolean">
      <wsdl:documentation>If true, populate exclusion table with any newly
excluded rows before executing integrity checking (defaults to true if this parameter
is null).</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="allowRefsToExistingNonAdminRows" type="soapenc:boolean">
      <wsdl:documentation>If true, rows in the staging tables are allowed to reference
existing rows in any table, regardless of whether or not the tables
are admin tables.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITableImportAPI-clearExclusionTableResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ITableImportAPI-clearExclusionTableRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ITableImportAPI-PermissionException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:PermissionException">
      <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITableImportAPI-BadIdentifierException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:BadIdentifierException">
      <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITableImportAPI-deleteExcludedRowsFromStagingTablesResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ITableImportAPI-clearStagingTablesResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ITableImportAPI-deleteExcludedRowsFromStagingTablesAsBatchProcessRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ITableImportAPI-encryptDataOnStagingTablesRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ITableImportAPI-integrityCheckStagingTableContentsAndLoadSourceTablesAsBatchProcessResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="integrityCheckStagingTableContentsAndLoadSourceTablesAsBatchProcessReturn" type="tns2:ProcessID">
      <wsdl:documentation>a ProcessID that can be used to query the status of the running load</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITableImportAPI-populateExclusionTableRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ITableImportAPI-encryptDataOnStagingTablesResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="encryptDataOnStagingTablesReturn" type="xsd:int">
      <wsdl:documentation>The number of staging tables whose columns were encrypted</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITableImportAPI-populateExclusionTableAsBatchProcessRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ITableImportAPI-integrityCheckStagingTableContentsAsBatchProcessResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="integrityCheckStagingTableContentsAsBatchProcessReturn" type="tns2:ProcessID">
      <wsdl:documentation>a ProcessID that can be used to retrieve the status of the job</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITableImportAPI-integrityCheckStagingTableContentsAsBatchProcessRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="clearErrorTable" type="soapenc:boolean">
      <wsdl:documentation>If true, the load error tables will be cleared
before executing integrity checking (defaults to true if this parameter is null).</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="populateExclusionTable" type="soapenc:boolean">
      <wsdl:documentation>If true, populate exclusion table with any newly
excluded rows before executing integrity checking (defaults to true if this parameter
is null).</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="allowRefsToExistingNonAdminRows" type="soapenc:boolean">
      <wsdl:documentation>If true, rows in the staging tables are allowed to reference
existing rows in any table, regardless of whether or not the tables
are admin tables.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITableImportAPI-populateExclusionTableResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ITableImportAPI-clearErrorTableRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ITypelistToolsAPI-getTypelistValuesRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="typelistName" type="soapenc:string">
      <wsdl:documentation>the case-insensitive name of the typelist to look up. for example: "accidenttype"</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITypelistToolsAPI-PermissionException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:PermissionException">
      <wsdl:documentation>if the caller does not have all of the following permissions: ADMIN</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITypelistToolsAPI-getTypeKeysByAliasRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="typelist" type="soapenc:string">
      <wsdl:documentation>the name of the given typelist (case-insensitive)</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="namespace" type="soapenc:string">
      <wsdl:documentation>the given namespace (case-insensitive)</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="alias" type="soapenc:string">
      <wsdl:documentation>the given alias (case-insensitive)</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITypelistToolsAPI-BadIdentifierException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:BadIdentifierException">
      <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITypelistToolsAPI-getAliasByInternalCodeRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="typelist" type="soapenc:string">
      <wsdl:documentation>the name of the given typelist (case-insensitive)</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="namespace" type="soapenc:string">
      <wsdl:documentation>the given namespace (case-insensitive)</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="code" type="soapenc:string">
      <wsdl:documentation>the given typecode (case-insensitive)</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITypelistToolsAPI-getTypeKeyByAliasRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="typelist" type="soapenc:string">
      <wsdl:documentation>the name of the given typelist (case-insensitive)</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="namespace" type="soapenc:string">
      <wsdl:documentation>the given namespace (case-insensitive)</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="alias" type="soapenc:string">
      <wsdl:documentation>the given alias (case-insensitive)</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITypelistToolsAPI-getTypeKeyByAliasResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getTypeKeyByAliasReturn" type="tns2:TypeKeyData">
      <wsdl:documentation>TypeKeyData instance corresponding to a typecode; null if no match found</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITypelistToolsAPI-getAliasByInternalCodeResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getAliasByInternalCodeReturn" type="soapenc:string">
      <wsdl:documentation>string corresponding to a typecode; null if no match found</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITypelistToolsAPI-ServerStateException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:ServerStateException">
      <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITypelistToolsAPI-SOAPException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:SOAPException">
      <wsdl:documentation>if more than one result is found for the given namespace/typecode</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITypelistToolsAPI-getAliasesByInternalCodeResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getAliasesByInternalCodeReturn" type="impl:ArrayOf_soapenc_string">
      <wsdl:documentation>string array of aliases, or a zero-length, non-null string array if no aliases match</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITypelistToolsAPI-getTypeKeysByAliasResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getTypeKeysByAliasReturn" type="tns2:ArrayOfTypeKeyData">
      <wsdl:documentation>array of TypeKeyData objects, or a zero-length, non-null string array if no typecodes match</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITypelistToolsAPI-getTypelistValuesResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getTypelistValuesReturn" type="tns2:ArrayOfTypeKeyData">
      <wsdl:documentation>an array of codes of typekeys contained within the typelist</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITypelistToolsAPI-getAliasesByInternalCodeRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="typelist" type="soapenc:string">
      <wsdl:documentation>the name of the given typelist (case-insensitive)</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="namespace" type="soapenc:string">
      <wsdl:documentation>the given namespace (case-insensitive)</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="code" type="soapenc:string">
      <wsdl:documentation>the given typecode (case-insensitive)</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IUserAPI-addUserAttributesResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IUserAPI-addRolesToUserRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="userID" type="soapenc:string">
      <wsdl:documentation>The ID of the user</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="roleIDs" type="impl:ArrayOf_soapenc_string">
      <wsdl:documentation>The public IDs of roles to be added.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IUserAPI-addUserResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="addUserReturn" type="soapenc:string">
      <wsdl:documentation>The public id of the new user</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IUserAPI-removeUserAttributesRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="userID" type="soapenc:string">
      <wsdl:documentation>The ID of the user</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="attributeIDs" type="impl:ArrayOf_soapenc_string">
      <wsdl:documentation>attribute public IDs to be removed</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IUserAPI-findPublicIdByNameRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="userName" type="soapenc:string">
      <wsdl:documentation>the login name (credential name).</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IUserAPI-ServerStateException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:ServerStateException">
      <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IUserAPI-RequiredFieldException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:RequiredFieldException">
      <wsdl:documentation>if the passed in User is null, or if the passed in User.Contact is null, or if the passed in User.Credential is null.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IUserAPI-addUserRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="userData" type="tns2:User">
      <wsdl:documentation>The &lt;code&gt;User&lt;/code&gt; object, which must have valid &lt;code&gt;UserContact&lt;/code&gt;
and &lt;code&gt;Credential&lt;/code&gt; objects set as the contact and credential field.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="rolePublicIds" type="impl:ArrayOf_soapenc_string">
      <wsdl:documentation>The public ids of the roles to assign the user.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IUserAPI-isUserMemberOfGroupRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="groupID" type="soapenc:string">
      <wsdl:documentation>The identifier of the group.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="userID" type="soapenc:string">
      <wsdl:documentation>The identifier of the user.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IUserAPI-SOAPException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:SOAPException">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IUserAPI-doesExistResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="doesExistReturn" type="xsd:boolean">
      <wsdl:documentation>&lt;code&gt;true&lt;/code&gt; if the user specified by the identifier exists in the system,
&lt;code&gt;false&lt;/code&gt; otherwise.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IUserAPI-getUserResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getUserReturn" type="tns2:User">
      <wsdl:documentation>The UserData representing the user</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IUserAPI-removeUserAsMemberOfGroupResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IUserAPI-getUserRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="userID" type="soapenc:string">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IUserAPI-addUserRequest1" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="data" type="tns2:User">
      <wsdl:documentation>The &lt;code&gt;User&lt;/code&gt; object, which must have valid &lt;code&gt;UserContact&lt;/code&gt;
and &lt;code&gt;Credential&lt;/code&gt; objects set as the contact and credential field.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="rolePublicIds" type="impl:ArrayOf_soapenc_string">
      <wsdl:documentation>The roles to assign the user.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="credentialName" type="soapenc:string">
      <wsdl:documentation>Ignored</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IUserAPI-removeUserAsMemberOfGroupRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="groupID" type="soapenc:string">
      <wsdl:documentation>The identifier of the group.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="userID" type="soapenc:string">
      <wsdl:documentation>The identifier of the user.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IUserAPI-addUserResponse1" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="addUserReturn" type="soapenc:string">
      <wsdl:documentation>The public id of the new user</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IUserAPI-PermissionException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:PermissionException">
      <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IUserAPI-doesExistRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="publicId" type="soapenc:string">
      <wsdl:documentation>The public identifier of the user in question.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IUserAPI-BadIdentifierException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:BadIdentifierException">
      <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IUserAPI-addUserAsMemberOfGroupRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="groupID" type="soapenc:string">
      <wsdl:documentation>The identifier of the group.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="userID" type="soapenc:string">
      <wsdl:documentation>The identifier of the user.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IUserAPI-addUserAsMemberOfGroupResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IUserAPI-findPublicIdByNameResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="findPublicIdByNameReturn" type="soapenc:string">
      <wsdl:documentation>the user's publicID, else null</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IUserAPI-removeRolesFromUserResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IUserAPI-addRolesToUserResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IUserAPI-addUserAttributesRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="userID" type="soapenc:string">
      <wsdl:documentation>The ID of the user</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="attributeIDs" type="impl:ArrayOf_soapenc_string">
      <wsdl:documentation>attribute public IDs to be added</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IUserAPI-DataConversionException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:DataConversionException">
      <wsdl:documentation>if the userID or roleID does not exist</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IUserAPI-isUserMemberOfGroupResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="isUserMemberOfGroupReturn" type="xsd:boolean">
      <wsdl:documentation>&lt;code&gt;true&lt;/code&gt; if the user is a member of the group specified, &lt;code&gt;false&lt;/code&gt; if not.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IUserAPI-removeUserAttributesResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IUserAPI-removeRolesFromUserRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="userID" type="soapenc:string">
      <wsdl:documentation>The ID of the user</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="roleIDs" type="impl:ArrayOf_soapenc_string">
      <wsdl:documentation>The public IDs of roles to be added.  This may be null</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IWorkflowAPI-completeRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="workflowID" type="soapenc:string">
      <wsdl:documentation>the public id of the workflow</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IWorkflowAPI-resumeWorkflowRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="workflowID" type="soapenc:string">
      <wsdl:documentation>the public id of the workflow</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IWorkflowAPI-isTriggerAvailableRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="workflowID" type="soapenc:string">
      <wsdl:documentation>The ID of the workflow</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="triggerKey" type="tns2:WorkflowTriggerKey">
      <wsdl:documentation>A workflow trigger key off the current workflow</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IWorkflowAPI-PermissionException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:PermissionException">
      <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IWorkflowAPI-suspendRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="workflowID" type="soapenc:string">
      <wsdl:documentation>the public id of the workflow</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IWorkflowAPI-BadIdentifierException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:BadIdentifierException">
      <wsdl:documentation>If the workflow id did not match a valid workflow.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IWorkflowAPI-invokeTriggerResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IWorkflowAPI-resumeAllWorkflowsRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IWorkflowAPI-suspendResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IWorkflowAPI-ServerStateException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:ServerStateException">
      <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IWorkflowAPI-completeResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IWorkflowAPI-resumeWorkflowResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IWorkflowAPI-invokeTriggerRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="workflowID" type="soapenc:string">
      <wsdl:documentation>The ID of the workflow</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="triggerKey" type="tns2:WorkflowTriggerKey">
      <wsdl:documentation>A workflow trigger key off the current workflow</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IWorkflowAPI-RequiredFieldException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:RequiredFieldException">
      <wsdl:documentation>If the workflow id is null.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IWorkflowAPI-SOAPException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:SOAPException">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IWorkflowAPI-EntityStateException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:EntityStateException">
      <wsdl:documentation>If the workflow is not currently in the error or suspended state.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IWorkflowAPI-resumeAllWorkflowsResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IWorkflowAPI-isTriggerAvailableResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="isTriggerAvailableReturn" type="xsd:boolean">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IZoneImportAPI-importToStagingRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="countryCode" type="soapenc:string">
      <wsdl:documentation>the code for the country to which this data belongs</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="zoneData" type="soapenc:string">
      <wsdl:documentation>The data to import, passed as a String.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="clearStaging" type="xsd:boolean">
      <wsdl:documentation>Clears the staging tables before doing the import, this only clears the staging
tables of the data for the specified country, if all data needs to be cleared, use table import instead</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IZoneImportAPI-ServerStateException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:ServerStateException">
      <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IZoneImportAPI-importToStagingResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="importToStagingReturn" type="xsd:int">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IZoneImportAPI-clearProductionTablesResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IZoneImportAPI-SOAPException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:SOAPException">
      <wsdl:documentation>If the country code is not null and does not have a zone configuration defined or does not correspond to a valid country.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IZoneImportAPI-PermissionException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:PermissionException">
      <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IZoneImportAPI-BadIdentifierException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:BadIdentifierException">
      <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IZoneImportAPI-clearStagingTablesResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IZoneImportAPI-clearStagingTablesRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="countryCode" type="soapenc:string">
      <wsdl:documentation>a valid country code or null. A null value here will clear all zone information.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IZoneImportAPI-clearProductionTablesRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="countryCode" type="soapenc:string">
      <wsdl:documentation>a valid country code that has a zone configuartion defined or null.  A null value here will clear all zone information.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="InvoiceAPI-ServerStateException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns3:ServerStateException">
      <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="InvoiceAPI-PermissionException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns3:PermissionException">
      <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="InvoiceAPI-BadIdentifierException" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns3:BadIdentifierException">
      <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="InvoiceAPI-previewInstallmentScheduleRequest" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="newPolicyPeriod" type="tns1:PolicyPeriod">
      <wsdl:documentation/>
    </wsdl:part>
    <wsdl:part name="charges" type="tns1:ArrayOfCharge">
      <wsdl:documentation/>
    </wsdl:part>
    <wsdl:part name="accountBillingPlan" type="tns1:BillingPlan">
      <wsdl:documentation/>
    </wsdl:part>
    <wsdl:part name="invoiceDayOfMonth" type="soapenc:double">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="InvoiceAPI-previewInstallmentScheduleResponse" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="previewInstallmentScheduleReturn" type="tns1:ArrayOfInvoiceItemPreview">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:portType name="IBillingCenterAPI" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>
@deprecated (Since 8.0.1) Use gw.webservice.bc.bc801.BCAPI, gw.webservice.policycenter.bc801.BillingAPI,
gw.webservice.bc.bc801.TroubleTicketAPI, gw.webservice.bc.bc801.InvoiceDetailsAPI as appropriate instead
</wsdl:documentation>
    <wsdl:operation name="addDocumentToAccount" parameterOrder="document accountID">
      <wsdl:documentation>Add a new Document to an existing Account
&lt;br&gt;@deprecated (Since 8.0.1) Use gw.webservice.bc.bc801.BCAPI#addDocumentToAccount instead.</wsdl:documentation>
      <wsdl:input name="addDocumentToAccountRequest" message="impl:IBillingCenterAPI-addDocumentToAccountRequest"/>
      <wsdl:output name="addDocumentToAccountResponse" message="impl:IBillingCenterAPI-addDocumentToAccountResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IBillingCenterAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IBillingCenterAPI-DataConversionException"/>
      <wsdl:fault name="PermissionException" message="impl:IBillingCenterAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IBillingCenterAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="addDocumentToPolicyPeriod" parameterOrder="document policyPeriodID">
      <wsdl:documentation>Add a new Document to an existing PolicyPeriod
&lt;br&gt;@deprecated (Since 8.0.1) Use gw.webservice.bc.bc801.BCAPI#addDocumentToPolicyPeriod instead.</wsdl:documentation>
      <wsdl:input name="addDocumentToPolicyPeriodRequest" message="impl:IBillingCenterAPI-addDocumentToPolicyPeriodRequest"/>
      <wsdl:output name="addDocumentToPolicyPeriodResponse" message="impl:IBillingCenterAPI-addDocumentToPolicyPeriodResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IBillingCenterAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IBillingCenterAPI-DataConversionException"/>
      <wsdl:fault name="PermissionException" message="impl:IBillingCenterAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IBillingCenterAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="addDocumentToProducer" parameterOrder="document producerID">
      <wsdl:documentation>Add a new Document to an existing Producer
&lt;br&gt;@deprecated (Since 8.0.1) Use gw.webservice.bc.bc801.BCAPI#addDocumentToProducer instead.</wsdl:documentation>
      <wsdl:input name="addDocumentToProducerRequest" message="impl:IBillingCenterAPI-addDocumentToProducerRequest"/>
      <wsdl:output name="addDocumentToProducerResponse" message="impl:IBillingCenterAPI-addDocumentToProducerResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IBillingCenterAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IBillingCenterAPI-DataConversionException"/>
      <wsdl:fault name="PermissionException" message="impl:IBillingCenterAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IBillingCenterAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="addNoteToAccount" parameterOrder="note accountID">
      <wsdl:documentation>Add a new Note to an existing Account
&lt;br&gt;@deprecated (Since 8.0.1) Use gw.webservice.bc.bc801.BCAPI#addNoteToAccount instead.</wsdl:documentation>
      <wsdl:input name="addNoteToAccountRequest" message="impl:IBillingCenterAPI-addNoteToAccountRequest"/>
      <wsdl:output name="addNoteToAccountResponse" message="impl:IBillingCenterAPI-addNoteToAccountResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IBillingCenterAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IBillingCenterAPI-DataConversionException"/>
      <wsdl:fault name="PermissionException" message="impl:IBillingCenterAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IBillingCenterAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="addNoteToPolicyPeriod" parameterOrder="note policyPeriodID">
      <wsdl:documentation>Add a new Note to an existing PolicyPeriods
&lt;br&gt;@deprecated (Since 8.0.1) Use gw.webservice.bc.bc801.BCAPI#addNoteToPolicyPeriod instead.</wsdl:documentation>
      <wsdl:input name="addNoteToPolicyPeriodRequest" message="impl:IBillingCenterAPI-addNoteToPolicyPeriodRequest"/>
      <wsdl:output name="addNoteToPolicyPeriodResponse" message="impl:IBillingCenterAPI-addNoteToPolicyPeriodResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IBillingCenterAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IBillingCenterAPI-DataConversionException"/>
      <wsdl:fault name="PermissionException" message="impl:IBillingCenterAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IBillingCenterAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="addNoteToTroubleTicket" parameterOrder="note troubleTicketPublicID">
      <wsdl:documentation>Add a new Note to an existing TroubleTicket
&lt;br&gt;@deprecated (Since 8.0.1) Use gw.webservice.bc.bc801.BCAPI#addNoteToTroubleTicket instead.</wsdl:documentation>
      <wsdl:input name="addNoteToTroubleTicketRequest" message="impl:IBillingCenterAPI-addNoteToTroubleTicketRequest"/>
      <wsdl:output name="addNoteToTroubleTicketResponse" message="impl:IBillingCenterAPI-addNoteToTroubleTicketResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IBillingCenterAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IBillingCenterAPI-DataConversionException"/>
      <wsdl:fault name="PermissionException" message="impl:IBillingCenterAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IBillingCenterAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="cancelPremiumReportDueDate" parameterOrder="policyPeriodID startDate endDate">
      <wsdl:documentation>Cancels a premium report due date billing instruction.
&lt;br&gt;@deprecated (Since 8.0.1) Use gw.webservice.bc.bc801.BCAPI#cancelPremiumReportDueDate instead.</wsdl:documentation>
      <wsdl:input name="cancelPremiumReportDueDateRequest" message="impl:IBillingCenterAPI-cancelPremiumReportDueDateRequest"/>
      <wsdl:output name="cancelPremiumReportDueDateResponse" message="impl:IBillingCenterAPI-cancelPremiumReportDueDateResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IBillingCenterAPI-ServerStateException"/>
      <wsdl:fault name="PermissionException" message="impl:IBillingCenterAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IBillingCenterAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="createAccount" parameterOrder="account">
      <wsdl:documentation>Creates an account in BillingCenter.
&lt;br&gt;@deprecated (Since 8.0.1) Use gw.webservice.policycenter.bc801.BillingAPI#createAccount instead.</wsdl:documentation>
      <wsdl:input name="createAccountRequest" message="impl:IBillingCenterAPI-createAccountRequest"/>
      <wsdl:output name="createAccountResponse" message="impl:IBillingCenterAPI-createAccountResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IBillingCenterAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IBillingCenterAPI-DataConversionException"/>
      <wsdl:fault name="PermissionException" message="impl:IBillingCenterAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IBillingCenterAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="createProducer" parameterOrder="producer producerPaymentPeriodicity nextPaymentDate">
      <wsdl:documentation>Creates a producer in BillingCenter.
&lt;br&gt;@deprecated (Since 8.0.1) Use gw.webservice.policycenter.bc801.BillingAPI#createProducer instead.</wsdl:documentation>
      <wsdl:input name="createProducerRequest" message="impl:IBillingCenterAPI-createProducerRequest"/>
      <wsdl:output name="createProducerResponse" message="impl:IBillingCenterAPI-createProducerResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IBillingCenterAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IBillingCenterAPI-DataConversionException"/>
      <wsdl:fault name="PermissionException" message="impl:IBillingCenterAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IBillingCenterAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="createSharedActivity" parameterOrder="activityPatternID subject description targetDate escalationDate mandatory">
      <wsdl:documentation>Creates a shared activity within BillingCenter
&lt;br&gt;@deprecated (Since 8.0.1) Use gw.webservice.bc.bc801.BCAPI#createSharedActivity instead.</wsdl:documentation>
      <wsdl:input name="createSharedActivityRequest" message="impl:IBillingCenterAPI-createSharedActivityRequest"/>
      <wsdl:output name="createSharedActivityResponse" message="impl:IBillingCenterAPI-createSharedActivityResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IBillingCenterAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IBillingCenterAPI-DataConversionException"/>
      <wsdl:fault name="PermissionException" message="impl:IBillingCenterAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IBillingCenterAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="createTroubleTicket" parameterOrder="troubleTicket">
      <wsdl:documentation>Creates a trouble ticket in BillingCenter.
&lt;br&gt;@deprecated (Since 8.0.1) Use gw.webservice.bc.bc801.TroubleTicketAPI#createTroubleTicket instead.</wsdl:documentation>
      <wsdl:input name="createTroubleTicketRequest" message="impl:IBillingCenterAPI-createTroubleTicketRequest"/>
      <wsdl:output name="createTroubleTicketResponse" message="impl:IBillingCenterAPI-createTroubleTicketResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IBillingCenterAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IBillingCenterAPI-DataConversionException"/>
      <wsdl:fault name="PermissionException" message="impl:IBillingCenterAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IBillingCenterAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getAccountInfo" parameterOrder="accountID">
      <wsdl:documentation>Returns the status of the given account, represented by an AccountInfo non-persistent entity.  Note that this
information is temporal, and should only be used as a snapshot.  See the description of the fields on AccountInfo
to get more details about what information is included in this call.
&lt;br&gt;@deprecated (Since 8.0.1) Use gw.webservice.bc.bc801.BCAPI#getAccountInfo instead.</wsdl:documentation>
      <wsdl:input name="getAccountInfoRequest" message="impl:IBillingCenterAPI-getAccountInfoRequest"/>
      <wsdl:output name="getAccountInfoResponse" message="impl:IBillingCenterAPI-getAccountInfoResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IBillingCenterAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IBillingCenterAPI-DataConversionException"/>
      <wsdl:fault name="PermissionException" message="impl:IBillingCenterAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IBillingCenterAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getAccountWithNumber" parameterOrder="accountNumber">
      <wsdl:documentation>
&lt;br&gt;@deprecated (Since 8.0.1) Use gw.webservice.bc.bc801.BCAPI#getAccountInfo instead.</wsdl:documentation>
      <wsdl:input name="getAccountWithNumberRequest" message="impl:IBillingCenterAPI-getAccountWithNumberRequest"/>
      <wsdl:output name="getAccountWithNumberResponse" message="impl:IBillingCenterAPI-getAccountWithNumberResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IBillingCenterAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IBillingCenterAPI-DataConversionException"/>
      <wsdl:fault name="PermissionException" message="impl:IBillingCenterAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IBillingCenterAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllActivityPatterns">
      <wsdl:documentation>Gets all of the activity patterns in the system.
&lt;br&gt;@deprecated (Since 8.0.1) Removed.</wsdl:documentation>
      <wsdl:input name="getAllActivityPatternsRequest" message="impl:IBillingCenterAPI-getAllActivityPatternsRequest"/>
      <wsdl:output name="getAllActivityPatternsResponse" message="impl:IBillingCenterAPI-getAllActivityPatternsResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IBillingCenterAPI-ServerStateException"/>
      <wsdl:fault name="PermissionException" message="impl:IBillingCenterAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IBillingCenterAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllCurrentBillingPlans">
      <wsdl:documentation>Gets all of the available billing plans in the system.  Only plans which are effective (ie effectiveDate &amp;lt=
current date &amp;lt= expiration date) are returned.
&lt;br&gt;@deprecated (Since 8.0.1) Removed.</wsdl:documentation>
      <wsdl:input name="getAllCurrentBillingPlansRequest" message="impl:IBillingCenterAPI-getAllCurrentBillingPlansRequest"/>
      <wsdl:output name="getAllCurrentBillingPlansResponse" message="impl:IBillingCenterAPI-getAllCurrentBillingPlansResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IBillingCenterAPI-ServerStateException"/>
      <wsdl:fault name="PermissionException" message="impl:IBillingCenterAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IBillingCenterAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllCurrentDelinquencyPlans">
      <wsdl:documentation>Gets all of the available delinquency plans in the system.  Only plans which are effective (ie effectiveDate &amp;lt=
current date &amp;lt= expiration date) are returned.
&lt;br&gt;@deprecated (Since 8.0.1) Removed.</wsdl:documentation>
      <wsdl:input name="getAllCurrentDelinquencyPlansRequest" message="impl:IBillingCenterAPI-getAllCurrentDelinquencyPlansRequest"/>
      <wsdl:output name="getAllCurrentDelinquencyPlansResponse" message="impl:IBillingCenterAPI-getAllCurrentDelinquencyPlansResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IBillingCenterAPI-ServerStateException"/>
      <wsdl:fault name="PermissionException" message="impl:IBillingCenterAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IBillingCenterAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllCurrentPaymentPlans">
      <wsdl:documentation>Gets all of the available payment plans in the system.  Only plans which are effective (ie effectiveDate &amp;lt=
current date &amp;lt= expiration date) are returned.
&lt;br&gt;@deprecated (Since 8.0.1) Use gw.webservice.policycenter.bc801.BillingAPI#getAllPaymentPlans instead.</wsdl:documentation>
      <wsdl:input name="getAllCurrentPaymentPlansRequest" message="impl:IBillingCenterAPI-getAllCurrentPaymentPlansRequest"/>
      <wsdl:output name="getAllCurrentPaymentPlansResponse" message="impl:IBillingCenterAPI-getAllCurrentPaymentPlansResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IBillingCenterAPI-ServerStateException"/>
      <wsdl:fault name="PermissionException" message="impl:IBillingCenterAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IBillingCenterAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getApplicableCommissionSubPlan" parameterOrder="policyPeriod producerCodeID">
      <wsdl:documentation>Returns the CommissionSubPlan that is the best match for the given (new) policy period using the given producer
code.  Does not persist anything - this method should be used to preview what the eventual commission a producer
could expect to get.
&lt;br&gt;@deprecated (Since 8.0.1) Use gw.webservice.policycenter.bc801.BillingAPI#previewApplicableCommissionSubPlan instead.</wsdl:documentation>
      <wsdl:input name="getApplicableCommissionSubPlanRequest" message="impl:IBillingCenterAPI-getApplicableCommissionSubPlanRequest"/>
      <wsdl:output name="getApplicableCommissionSubPlanResponse" message="impl:IBillingCenterAPI-getApplicableCommissionSubPlanResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IBillingCenterAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IBillingCenterAPI-DataConversionException"/>
      <wsdl:fault name="PermissionException" message="impl:IBillingCenterAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IBillingCenterAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getChargePatternByCode" parameterOrder="name">
      <wsdl:documentation>Returns the charge pattern with the matching code (case-sensitive).  Returns null if no charge pattern found
&lt;br&gt;@deprecated (Since 8.0.1) Removed.</wsdl:documentation>
      <wsdl:input name="getChargePatternByCodeRequest" message="impl:IBillingCenterAPI-getChargePatternByCodeRequest"/>
      <wsdl:output name="getChargePatternByCodeResponse" message="impl:IBillingCenterAPI-getChargePatternByCodeResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IBillingCenterAPI-ServerStateException"/>
      <wsdl:fault name="PermissionException" message="impl:IBillingCenterAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IBillingCenterAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getInvoiceItemsOnInvoice" parameterOrder="invoiceID">
      <wsdl:documentation>Returns all invoice items on an invoice
&lt;br&gt;@deprecated (Since 8.0.1) Use gw.webservice.bc.bc801.InvoiceDetailsAPI#getInvoiceItemsOnInvoice instead.</wsdl:documentation>
      <wsdl:input name="getInvoiceItemsOnInvoiceRequest" message="impl:IBillingCenterAPI-getInvoiceItemsOnInvoiceRequest"/>
      <wsdl:output name="getInvoiceItemsOnInvoiceResponse" message="impl:IBillingCenterAPI-getInvoiceItemsOnInvoiceResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IBillingCenterAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IBillingCenterAPI-DataConversionException"/>
      <wsdl:fault name="PermissionException" message="impl:IBillingCenterAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IBillingCenterAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getInvoiceItemsSortedByDate" parameterOrder="policyPeriodID">
      <wsdl:documentation>Returns all invoice items related to this policy period, sorted from oldest to newest
&lt;br&gt;@deprecated (Since 8.0.1) Use gw.webservice.bc.bc801.InvoiceDetailsAPI#getInvoiceItemsOnPolicyPeriodSortedByEventDate instead.</wsdl:documentation>
      <wsdl:input name="getInvoiceItemsSortedByDateRequest" message="impl:IBillingCenterAPI-getInvoiceItemsSortedByDateRequest"/>
      <wsdl:output name="getInvoiceItemsSortedByDateResponse" message="impl:IBillingCenterAPI-getInvoiceItemsSortedByDateResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IBillingCenterAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IBillingCenterAPI-DataConversionException"/>
      <wsdl:fault name="PermissionException" message="impl:IBillingCenterAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IBillingCenterAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getInvoicesSortedByDate" parameterOrder="accountID">
      <wsdl:documentation>Returns all invoice items related to this policy period, sorted from oldest to newest
&lt;br&gt;@deprecated (Since 8.0.1) Use gw.webservice.bc.bc801.InvoiceDetailsAPI#getInvoicesOnAccountSortedByBillDate instead.</wsdl:documentation>
      <wsdl:input name="getInvoicesSortedByDateRequest" message="impl:IBillingCenterAPI-getInvoicesSortedByDateRequest"/>
      <wsdl:output name="getInvoicesSortedByDateResponse" message="impl:IBillingCenterAPI-getInvoicesSortedByDateResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IBillingCenterAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IBillingCenterAPI-DataConversionException"/>
      <wsdl:fault name="PermissionException" message="impl:IBillingCenterAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IBillingCenterAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getPolicyPeriodInfo" parameterOrder="policyPeriodID">
      <wsdl:documentation>Returns a snapshot of information about the active Policy Period at the time this method was invoked.
&lt;br&gt;@deprecated (Since 8.0.1) Use gw.webservice.bc.bc801.BCAPI#getPolicyPeriodInfo instead.</wsdl:documentation>
      <wsdl:input name="getPolicyPeriodInfoRequest" message="impl:IBillingCenterAPI-getPolicyPeriodInfoRequest"/>
      <wsdl:output name="getPolicyPeriodInfoResponse" message="impl:IBillingCenterAPI-getPolicyPeriodInfoResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IBillingCenterAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IBillingCenterAPI-DataConversionException"/>
      <wsdl:fault name="PermissionException" message="impl:IBillingCenterAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IBillingCenterAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getProducerInfo" parameterOrder="producerID">
      <wsdl:documentation>Returns information about the given Producer, represented by the non-persistent entity ProducerInfo. This info
is a snapshot of information and should only be used as such. See the fields on ProducerInfo for more on what
this call provides.
&lt;br&gt;@deprecated (Since 8.0.1) Use gw.webservice.bc.bc801.BCAPI#getProducerInfo instead.</wsdl:documentation>
      <wsdl:input name="getProducerInfoRequest" message="impl:IBillingCenterAPI-getProducerInfoRequest"/>
      <wsdl:output name="getProducerInfoResponse" message="impl:IBillingCenterAPI-getProducerInfoResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IBillingCenterAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IBillingCenterAPI-DataConversionException"/>
      <wsdl:fault name="PermissionException" message="impl:IBillingCenterAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IBillingCenterAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="loadAccount" parameterOrder="accountID">
      <wsdl:documentation>
&lt;br&gt;@deprecated (Since 8.0.1) Use gw.webservice.bc.bc801.BCAPI#getAccountInfo instead.</wsdl:documentation>
      <wsdl:input name="loadAccountRequest" message="impl:IBillingCenterAPI-loadAccountRequest"/>
      <wsdl:output name="loadAccountResponse" message="impl:IBillingCenterAPI-loadAccountResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IBillingCenterAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IBillingCenterAPI-DataConversionException"/>
      <wsdl:fault name="PermissionException" message="impl:IBillingCenterAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IBillingCenterAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="loadAddress" parameterOrder="addressID">
      <wsdl:documentation>
&lt;br&gt;@deprecated (Since 8.0.1) Removed.</wsdl:documentation>
      <wsdl:input name="loadAddressRequest" message="impl:IBillingCenterAPI-loadAddressRequest"/>
      <wsdl:output name="loadAddressResponse" message="impl:IBillingCenterAPI-loadAddressResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IBillingCenterAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IBillingCenterAPI-DataConversionException"/>
      <wsdl:fault name="PermissionException" message="impl:IBillingCenterAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IBillingCenterAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="loadPolicyPeriod" parameterOrder="policyPeriodID">
      <wsdl:documentation>
&lt;br&gt;@deprecated (Since 8.0.1) Use gw.webservice.bc.bc801.BCAPI#getPolicyPeriodInfo instead.</wsdl:documentation>
      <wsdl:input name="loadPolicyPeriodRequest" message="impl:IBillingCenterAPI-loadPolicyPeriodRequest"/>
      <wsdl:output name="loadPolicyPeriodResponse" message="impl:IBillingCenterAPI-loadPolicyPeriodResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IBillingCenterAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IBillingCenterAPI-DataConversionException"/>
      <wsdl:fault name="PermissionException" message="impl:IBillingCenterAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IBillingCenterAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="loadProducer" parameterOrder="producerID">
      <wsdl:documentation>
&lt;br&gt;@deprecated (Since 8.0.1) Use gw.webservice.bc.bc801.BCAPI#getProducerInfo instead.</wsdl:documentation>
      <wsdl:input name="loadProducerRequest" message="impl:IBillingCenterAPI-loadProducerRequest"/>
      <wsdl:output name="loadProducerResponse" message="impl:IBillingCenterAPI-loadProducerResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IBillingCenterAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IBillingCenterAPI-DataConversionException"/>
      <wsdl:fault name="PermissionException" message="impl:IBillingCenterAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IBillingCenterAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="populateCommissionRateOverrides" parameterOrder="policyPeriod policyRole commissionSubPlanID charges">
      <wsdl:documentation>Populates the CommissionRateOverrides array on each Charge in the array of Charges based on the given commission subplan
and the given policy role.  This method, combined with {@link #getApplicableCommissionSubPlan(PolicyPeriod,String)} can
be used to preview the expected commission rates that a new policy will generate.
&lt;br&gt;@deprecated (Since 8.0.1) Use gw.webservice.policycenter.bc801.BillingAPI#previewCommissionRates instead.</wsdl:documentation>
      <wsdl:input name="populateCommissionRateOverridesRequest" message="impl:IBillingCenterAPI-populateCommissionRateOverridesRequest"/>
      <wsdl:output name="populateCommissionRateOverridesResponse" message="impl:IBillingCenterAPI-populateCommissionRateOverridesResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IBillingCenterAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IBillingCenterAPI-DataConversionException"/>
      <wsdl:fault name="PermissionException" message="impl:IBillingCenterAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IBillingCenterAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="putHoldOnAccount" parameterOrder="accountID holdTypes">
      <wsdl:documentation>Puts a hold on the given account, effective immediately.  Applies the given HoldTypes to the hold.
Creates a trouble ticket and a hold that is linked to the trouble ticket.
&lt;p/&gt;
NOTE: in BillingCenter 1.0, holds are always associated with trouble tickets
&lt;br&gt;@deprecated (Since 8.0.1) Use gw.webservice.bc.bc801.TroubleTicketAPI#putHoldOnAccount instead.</wsdl:documentation>
      <wsdl:input name="putHoldOnAccountRequest" message="impl:IBillingCenterAPI-putHoldOnAccountRequest"/>
      <wsdl:output name="putHoldOnAccountResponse" message="impl:IBillingCenterAPI-putHoldOnAccountResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IBillingCenterAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IBillingCenterAPI-DataConversionException"/>
      <wsdl:fault name="PermissionException" message="impl:IBillingCenterAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IBillingCenterAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="putHoldOnAccount" parameterOrder="accountID holdTypes troubleTicket">
      <wsdl:documentation>Provides same functionality as putHoldOnPolicyPeriod(String policyPeriodID,HoldType[] holdTypes, TroubleTicket troubleTicket)
with one difference.  This version of the method takes in a TroubleTicket and uses that to apply the HoldTypes.
Use this version of the method if is desired to customize the title, description etc of the TroubleTicket
associated with the hold.
&lt;br&gt;@deprecated (Since 8.0.1) Use gw.webservice.bc.bc801.TroubleTicketAPI#putHoldOnAccount instead.</wsdl:documentation>
      <wsdl:input name="putHoldOnAccountRequest1" message="impl:IBillingCenterAPI-putHoldOnAccountRequest1"/>
      <wsdl:output name="putHoldOnAccountResponse1" message="impl:IBillingCenterAPI-putHoldOnAccountResponse1"/>
      <wsdl:fault name="ServerStateException" message="impl:IBillingCenterAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IBillingCenterAPI-DataConversionException"/>
      <wsdl:fault name="PermissionException" message="impl:IBillingCenterAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IBillingCenterAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="putHoldOnPolicyPeriod" parameterOrder="policyPeriodID holdTypes">
      <wsdl:documentation>Puts a hold on the given policy, effective immediately.  Applies the given HoldTypes to the hold.
Creates a trouble ticket and a hold that is linked to the trouble ticket.
&lt;p/&gt;
NOTE: holds are always associated with trouble tickets
&lt;br&gt;@deprecated (Since 8.0.1) Use gw.webservice.bc.bc801.TroubleTicketAPI#putHoldOnPolicyPeriod instead.</wsdl:documentation>
      <wsdl:input name="putHoldOnPolicyPeriodRequest" message="impl:IBillingCenterAPI-putHoldOnPolicyPeriodRequest"/>
      <wsdl:output name="putHoldOnPolicyPeriodResponse" message="impl:IBillingCenterAPI-putHoldOnPolicyPeriodResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IBillingCenterAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IBillingCenterAPI-DataConversionException"/>
      <wsdl:fault name="PermissionException" message="impl:IBillingCenterAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IBillingCenterAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="putHoldOnPolicyPeriod" parameterOrder="policyPeriodID holdTypes troubleTicket">
      <wsdl:documentation>Provides same functionality as
{@link IBillingCenterAPI#putHoldOnPolicyPeriod(String,HoldType[])}
with one difference.  This version of the method takes in a TroubleTicket and uses that to apply the HoldTypes.
Use this version of the method if is desired to customize the title, description etc of the TroubleTicket
associated with the hold.
&lt;br&gt;@deprecated (Since 8.0.1) Use gw.webservice.bc.bc801.TroubleTicketAPI#putHoldOnPolicyPeriod instead.</wsdl:documentation>
      <wsdl:input name="putHoldOnPolicyPeriodRequest1" message="impl:IBillingCenterAPI-putHoldOnPolicyPeriodRequest1"/>
      <wsdl:output name="putHoldOnPolicyPeriodResponse1" message="impl:IBillingCenterAPI-putHoldOnPolicyPeriodResponse1"/>
      <wsdl:fault name="ServerStateException" message="impl:IBillingCenterAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IBillingCenterAPI-DataConversionException"/>
      <wsdl:fault name="PermissionException" message="impl:IBillingCenterAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IBillingCenterAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="releaseHoldOnAccount" parameterOrder="accountID holdTypes">
      <wsdl:documentation>Releases the given HoldTypes on the given account.  If an account has multiple holds on it, then releases the given
HoldTypes on all the holds on the account.  If after releasing the given HoldTypes, there are no active HoldTypes
on the hold, releases the hold itself by closing the associated trouble ticket.
&lt;p/&gt;
NOTE: in BillingCenter, holds are always associated with trouble tickets
&lt;br&gt;@deprecated (Since 8.0.1) Use gw.webservice.bc.bc801.TroubleTicketAPI#releaseHoldOnAccount instead.</wsdl:documentation>
      <wsdl:input name="releaseHoldOnAccountRequest" message="impl:IBillingCenterAPI-releaseHoldOnAccountRequest"/>
      <wsdl:output name="releaseHoldOnAccountResponse" message="impl:IBillingCenterAPI-releaseHoldOnAccountResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IBillingCenterAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IBillingCenterAPI-DataConversionException"/>
      <wsdl:fault name="PermissionException" message="impl:IBillingCenterAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IBillingCenterAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="releaseHoldOnPolicyPeriod" parameterOrder="policyPeriodID holdTypes">
      <wsdl:documentation>Releases the given HoldTypes on the given policy.  If a policy has multiple holds on it, then releases the given
HoldTypes on all the holds on the policy.  If after releasing the given HoldTypes, there are no active HoldTypes
on the hold, releases the hold itself by closing the associated trouble ticket.
&lt;p/&gt;
NOTE: in BillingCenter, holds are always associated with trouble tickets
&lt;br&gt;@deprecated (Since 8.0.1) Use gw.webservice.bc.bc801.TroubleTicketAPI#releaseHoldOnPolicyPeriod instead.</wsdl:documentation>
      <wsdl:input name="releaseHoldOnPolicyPeriodRequest" message="impl:IBillingCenterAPI-releaseHoldOnPolicyPeriodRequest"/>
      <wsdl:output name="releaseHoldOnPolicyPeriodResponse" message="impl:IBillingCenterAPI-releaseHoldOnPolicyPeriodResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IBillingCenterAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IBillingCenterAPI-DataConversionException"/>
      <wsdl:fault name="PermissionException" message="impl:IBillingCenterAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IBillingCenterAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="sendBillingInstruction" parameterOrder="billingInstruction">
      <wsdl:documentation>Generic Billing Instruction
&lt;br&gt;@deprecated (Since 8.0.1) Use gw.webservice.policycenter.bc801.BillingAPI#issuePolicyPeriod instead.</wsdl:documentation>
      <wsdl:input name="sendBillingInstructionRequest" message="impl:IBillingCenterAPI-sendBillingInstructionRequest"/>
      <wsdl:output name="sendBillingInstructionResponse" message="impl:IBillingCenterAPI-sendBillingInstructionResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IBillingCenterAPI-ServerStateException"/>
      <wsdl:fault name="RequiredFieldException" message="impl:IBillingCenterAPI-RequiredFieldException"/>
      <wsdl:fault name="DataConversionException" message="impl:IBillingCenterAPI-DataConversionException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IBillingCenterAPI-SOAPServerException"/>
      <wsdl:fault name="PermissionException" message="impl:IBillingCenterAPI-PermissionException"/>
      <wsdl:fault name="DuplicateKeyException" message="impl:IBillingCenterAPI-DuplicateKeyException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IBillingCenterAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="sendBillingInstruction" parameterOrder="billingInstruction paymentPlanModifiers">
      <wsdl:documentation>Generic Billing Instruction with payment plan modifiers
&lt;br&gt;@deprecated (Since 8.0.1) Use gw.webservice.policycenter.bc801.BillingAPI#issuePolicyPeriod instead.</wsdl:documentation>
      <wsdl:input name="sendBillingInstructionRequest1" message="impl:IBillingCenterAPI-sendBillingInstructionRequest1"/>
      <wsdl:output name="sendBillingInstructionResponse1" message="impl:IBillingCenterAPI-sendBillingInstructionResponse1"/>
      <wsdl:fault name="ServerStateException" message="impl:IBillingCenterAPI-ServerStateException"/>
      <wsdl:fault name="RequiredFieldException" message="impl:IBillingCenterAPI-RequiredFieldException"/>
      <wsdl:fault name="DataConversionException" message="impl:IBillingCenterAPI-DataConversionException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IBillingCenterAPI-SOAPServerException"/>
      <wsdl:fault name="PermissionException" message="impl:IBillingCenterAPI-PermissionException"/>
      <wsdl:fault name="DuplicateKeyException" message="impl:IBillingCenterAPI-DuplicateKeyException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IBillingCenterAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="startDelinquency" parameterOrder="policyPeriodID reason">
      <wsdl:documentation>Starts delinquency processing on the given policy.  It does not do any checking such as whether this PolicyPeriod
already has an active delinquency process. The caller is responsible for making the necessary checks.
&lt;br&gt;@deprecated (Since 8.0.1) Use gw.webservice.bc.bc801.BCAPI#startDelinquencyOnPolicyPeriod instead.</wsdl:documentation>
      <wsdl:input name="startDelinquencyRequest" message="impl:IBillingCenterAPI-startDelinquencyRequest"/>
      <wsdl:output name="startDelinquencyResponse" message="impl:IBillingCenterAPI-startDelinquencyResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IBillingCenterAPI-ServerStateException"/>
      <wsdl:fault name="PermissionException" message="impl:IBillingCenterAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IBillingCenterAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="triggerDelinquencyWorkflow" parameterOrder="policyPeriodID workflowTrigger">
      <wsdl:documentation>If the trigger is available in the workflow for the single active delinquency process associated with
the policyPeriod, the workflow will be triggered.
&lt;br&gt;@deprecated (Since 8.0.1) Use gw.webservice.bc.bc801.BCAPI#triggerDelinquencyWorkflowOnPolicyPeriod instead.</wsdl:documentation>
      <wsdl:input name="triggerDelinquencyWorkflowRequest" message="impl:IBillingCenterAPI-triggerDelinquencyWorkflowRequest"/>
      <wsdl:output name="triggerDelinquencyWorkflowResponse" message="impl:IBillingCenterAPI-triggerDelinquencyWorkflowResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IBillingCenterAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IBillingCenterAPI-DataConversionException"/>
      <wsdl:fault name="EntityStateException" message="impl:IBillingCenterAPI-EntityStateException"/>
      <wsdl:fault name="PermissionException" message="impl:IBillingCenterAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IBillingCenterAPI-BadIdentifierException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="ICollateralAPI" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>
@deprecated (Since 8.0.1) Use gw.webservice.bc.bc801.BCAPI instead
</wsdl:documentation>
    <wsdl:operation name="createCollateralRequirement" parameterOrder="collateralRequirement">
      <wsdl:documentation>Creates a collateralRequirement in BillingCenter.
&lt;br&gt;@deprecated (Since 8.0.1) Use gw.webservice.bc.bc801.BCAPI#createCollateralRequirement instead.</wsdl:documentation>
      <wsdl:input name="createCollateralRequirementRequest" message="impl:ICollateralAPI-createCollateralRequirementRequest"/>
      <wsdl:output name="createCollateralRequirementResponse" message="impl:ICollateralAPI-createCollateralRequirementResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ICollateralAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:ICollateralAPI-DataConversionException"/>
      <wsdl:fault name="PermissionException" message="impl:ICollateralAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ICollateralAPI-BadIdentifierException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="IDataObjectAPI" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>Deprecated interface. There is no replacement. Instead, you should write your own Gosu class and publish
it as a web service by marking it with the &lt;code&gt;@RpcWebService&lt;/code&gt; annotation.
&lt;p/&gt;
Methods in this class use XPath.  The notation draws heavily from
the new "Service Data Object" spec from BEA and IBM. See their
&lt;a href="http://xml.coverpages.org/IBM-BEA-SDOv10.pdf"&gt;Service Data Ojbects&lt;/a&gt;
specification.
Please note that certain characters need to be escaped in XPath notation.  Specifically:
' goes to &amp;apos; &lt;br/&gt;
" goes to &amp;qout; &lt;br/&gt;
&lt; goes to &amp;lt; &lt;br/&gt;
&gt; goes to &amp;gt; &lt;br/&gt;
&amp; goes to &amp;amp;  &lt;br/&gt;

@author mshaw
@version Jan 16, 2004 4:15:21 PM
@deprecated Write your own Gosu class and publish it as a web service.
</wsdl:documentation>
    <wsdl:operation name="find" parameterOrder="entityType alias whereClause filter">
      <wsdl:documentation>&lt;p&gt;
Find a set of objects of the same type using the Gosu finder notation.
See the &lt;i&gt;Gosu Reference Guide&lt;/i&gt; for details on how to build a &lt;b&gt;where&lt;/b&gt; clause.
The result set's size is capped by default at 100 objects. To override
the default, set the &lt;code&gt;GW_MAX_OBJECT_RETRIEVAL_PROPERTY&lt;/code&gt; property in the SOAP
header using &lt;code&gt;SOAPOutboundHandler&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
&lt;b&gt;This method is deprecated&lt;/b&gt;. Returning all the matching object data without first knowing the
size of the matching set can be expensive. Instead, use &lt;code&gt;findIds&lt;/code&gt; to find the matching set of ids and
&lt;code&gt;getObjectById&lt;/code&gt; or &lt;code&gt;getPathValues&lt;/code&gt; to load the associated entity data.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="findRequest" message="impl:IDataObjectAPI-findRequest"/>
      <wsdl:output name="findResponse" message="impl:IDataObjectAPI-findResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IDataObjectAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IDataObjectAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IDataObjectAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IDataObjectAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="findIds" parameterOrder="entityType alias whereClause">
      <wsdl:documentation>&lt;p&gt;
Find a set of public Ids of the same type using the Gosu finder
notation. See the &lt;i&gt;Gosu Reference Guide&lt;/i&gt; for details on how to build a
where clause. The size of the result set is capped by default at 100
objects. To override this default set the &lt;code&gt;GW_MAX_OBJECT_RETRIEVAL_PROPERTY&lt;/code&gt;
property in the soap header using &lt;code&gt;SOAPOutboundHandler&lt;/code&gt;.
&lt;/p&gt;
&lt;h4&gt;Example&lt;/H4&gt;
In the following example,  a Gosu finder expression is translated into a call to &lt;code&gt;findIds()&lt;/code&gt;:
The following Gosu expression:
&lt;/P&gt;
&lt;pre&gt;
&lt;code&gt;findIds(Claim with c in Claim where c.LossType == "AUTO" and c.AccidentType != "46")&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Becomes the following with IDataObjectAPI call:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;findIds("Claim", "c", "c.LossType == \"AUTO\" and c.AccidentType != \"46\"")&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;
Use &lt;code&gt;getObjectById&lt;/code&gt; to load the associated object data.
&lt;/p&gt;
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="findIdsRequest" message="impl:IDataObjectAPI-findIdsRequest"/>
      <wsdl:output name="findIdsResponse" message="impl:IDataObjectAPI-findIdsResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IDataObjectAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IDataObjectAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IDataObjectAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IDataObjectAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getNextSequenceNumber" parameterOrder="sequenceKey minValue">
      <wsdl:documentation>&lt;p&gt;
Get the next sequence number for a sequence key.
&lt;/p&gt;&lt;p&gt;
If this is a new sequence key a new sequence is created with initial value
&lt;i&gt;minValue&lt;/i&gt;. If the sequence exists then the next number in the sequence is
returned. The sequence numbers are unique across a cluster.
&lt;/p&gt;
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="getNextSequenceNumberRequest" message="impl:IDataObjectAPI-getNextSequenceNumberRequest"/>
      <wsdl:output name="getNextSequenceNumberResponse" message="impl:IDataObjectAPI-getNextSequenceNumberResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IDataObjectAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IDataObjectAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IDataObjectAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IDataObjectAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getObjectById" parameterOrder="entityType publicId filter">
      <wsdl:documentation>&lt;p&gt;
Get an object graph by the public Id of the root object.
&lt;/p&gt;
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="getObjectByIdRequest" message="impl:IDataObjectAPI-getObjectByIdRequest"/>
      <wsdl:output name="getObjectByIdResponse" message="impl:IDataObjectAPI-getObjectByIdResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IDataObjectAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IDataObjectAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IDataObjectAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IDataObjectAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getPathValues" parameterOrder="entityType publicId paths">
      <wsdl:documentation>&lt;p&gt;
Returns properties accessed from a root entity. Specify the paths as
strings. A single path may return multiple values if the path traverses an
array. Multiple paths return a two-dimensional array of values,
an array for each path specified.
&lt;/p&gt;&lt;p&gt;
A path can traverse any entity property but only a writeable property's
value can be set. This is the same set of properties that is accessible
from Gosu. See the Gosu API Reference in Studio for a list of
accessible properties. The set of available properties is a super-set of
the "exportable" properties that exist on SOAP entities.
&lt;/p&gt;&lt;p&gt;
The path leaf must reference a "simple" property (not an entity or
array) but the path can traverse through entities and arrays.
&lt;/p&gt;&lt;p&gt;
Specify the path in XPath notation. The notation draws heavily from
the new "Service Data Object" spec from BEA and IBM. See their
&lt;a href="http://xml.coverpages.org/IBM-BEA-SDOv10.pdf"&gt;Service Data Ojbects&lt;/a&gt;
specification.
&lt;/p&gt;&lt;p&gt;
&lt;b&gt;NOTE:&lt;/b&gt; Array elements are indexed starting at 1 not 0.
&lt;/p&gt;
&lt;h4&gt;Example&lt;/h4&gt;
&lt;p&gt;
Get the names of all the users in a group.
&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
String[] path = new String[1]
path[0] = "users/user/credential/username"
api.getPathValues("group", "315", path)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
Get the public Ids of all the users in a group with a LoadFactor &gt; 50
&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
String[] path = new String[1]
path[0] = "users[LoadFactor &gt;= 50]/user/publicId"
api.getPathValues("group", "315", path)
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="getPathValuesRequest" message="impl:IDataObjectAPI-getPathValuesRequest"/>
      <wsdl:output name="getPathValuesResponse" message="impl:IDataObjectAPI-getPathValuesResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IDataObjectAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IDataObjectAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IDataObjectAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IDataObjectAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="setPathValues" parameterOrder="entityType publicId add update remove">
      <wsdl:documentation>&lt;p&gt;
Add, update, and remove values on entities relative to a root entity. All
changes are made in the same transaction. If one change fails none of
the changes are applied.
&lt;/p&gt;&lt;p&gt;
A path can traverse any entity property but only a writeable property's
value can be set. An entity's writeable properties are the same set of
properties accessible from Gosu. See the API Help in Studio for a list of
accessible properties. The set of accessible properties is a super-set of
the "exportable" properties available to SOAP entities.
&lt;/p&gt;&lt;p&gt;
A path's leaf must reference a "simple" property (not an entity or
array) but the path can traverse through entities and arrays.
&lt;/p&gt;&lt;p&gt;
Specify the path in XPath notation. The notation draws heavily from
the &lt;a href="http://xml.coverpages.org/IBM-BEA-SDOv10.pdf"&gt;"Service Data Object"&lt;/a&gt;
specification put out by BEA and IBM.

&lt;/p&gt;&lt;p&gt;
&lt;b&gt;NOTE:&lt;/b&gt; Array elements are indexed starting at 1 not 0.
&lt;/p&gt;
&lt;H4&gt;Add Example&lt;/H4&gt;
&lt;p&gt;
This example associates an existing user to a group by adding a new &lt;code&gt;GroupUser&lt;/code&gt; entity
linking the two. The value of &lt;code&gt;newGroupUser/user&lt;/code&gt; on the &lt;code&gt;newGroupUser&lt;/code&gt; is
in the form &lt;i&gt;entityType:publicId&lt;/i&gt;, where &lt;code&gt;user&lt;/code&gt; is the &lt;i&gt;entityType&lt;/i&gt; and
&lt;code&gt;74&lt;/code&gt; is the user's &lt;i&gt;publicId&lt;/i&gt;.
&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
InsertPathValue[] add = new InsertPathValue[1]
add[0] = new InsertPathValue()
add[0].setPath("users")
add[0].setRefId("newGroupUser")
PathValue[] update = new PathValue[2]
update[0] = new PathValue()
update[0].setPath("newGroupUser/user")
update[0].setValue("user:74")
update[1] = new PathValue()
update[1].setPath("newGroupUser/loadfactor")
update[1].setValue("80")
String remove = new String[0]
api.setPathValues("group", "315", add, update, remove)
&lt;/code&gt;&lt;/pre&gt;
&lt;/p&gt;
&lt;H4&gt;Remove Example&lt;/H4&gt;
&lt;p&gt;
Disassociate a user from a group by removing the &lt;code&gt;GroupUser&lt;/code&gt; entity that
links them. &lt;code&gt;74&lt;/code&gt; is &lt;i&gt;publicId&lt;/i&gt; of the user being removed from the group.
&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
InsertPathValue[] add = new InsertPathValue[0]
PathValue[] update = new PathValue[0]
String[] remove = new String[1]
remove[0] = "users[user/publicId='74']"
api.setPathValues("group", "315", add, update, remove)
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="setPathValuesRequest" message="impl:IDataObjectAPI-setPathValuesRequest"/>
      <wsdl:output name="setPathValuesResponse" message="impl:IDataObjectAPI-setPathValuesResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IDataObjectAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IDataObjectAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IDataObjectAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IDataObjectAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="setPathValues" parameterOrder="entityType publicId pathValues">
      <wsdl:documentation>&lt;p&gt;
Update values on entities relative to a root entity. All changes will be
made in the same transaction. If one change fails none of the changes will
be applied.
&lt;/p&gt;&lt;p&gt;
A path can traverse any entity property but only a writeable property's
value can be set. This is the same set of properties that is accessible
from Gosu. This &lt;i&gt;Gosu API Reference&lt;/i&gt; contains a list of
accessible properties. The set of available properties is a super-set of
the "exportable" properties that exist on SOAP entities.
&lt;/p&gt;&lt;p&gt;
The leaf of a path must reference a "simple" property (not an entity or
array) but the path can traverse through entities and arrays.
&lt;/p&gt;&lt;p&gt;
Specify the path in XPath notation. The notation draws heavily from
the &lt;a href="http://xml.coverpages.org/IBM-BEA-SDOv10.pdf"&gt;"Service Data Object"&lt;/a&gt;
specification put out by BEA and IBM.
&lt;/p&gt;&lt;p&gt;
&lt;b&gt;NOTE:&lt;/b&gt; Array elements are indexed starting at 1 not 0.
&lt;/p&gt;
&lt;H4&gt;Example&lt;/H4&gt;
&lt;p&gt;
Change the load factor of a group's parent.
&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
PathValue[] update = new PathValue[1]
update[0].setPath("parent/group/loadfactor")
update[0].setValue("50")
api.setPathValues("group", "315", update)
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="setPathValuesRequest1" message="impl:IDataObjectAPI-setPathValuesRequest1"/>
      <wsdl:output name="setPathValuesResponse1" message="impl:IDataObjectAPI-setPathValuesResponse1"/>
      <wsdl:fault name="ServerStateException" message="impl:IDataObjectAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IDataObjectAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IDataObjectAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IDataObjectAPI-BadIdentifierException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="IGroupAPI" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>IGroupAPI provides mechanisms for adding new Groups to and obtaining information for
existing Groups from ClaimCenter
@deprecated Write your own Gosu class and publish it as a web service.
</wsdl:documentation>
    <wsdl:operation name="addGroup" parameterOrder="groupData">
      <wsdl:documentation>Adds the given group data to the system.
if the data object doesn't contain a PublicID, one will be assigned.
The parent, grouptype, and securityzone of the group data cannot be null.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="addGroupRequest" message="impl:IGroupAPI-addGroupRequest"/>
      <wsdl:output name="addGroupResponse" message="impl:IGroupAPI-addGroupResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IGroupAPI-ServerStateException"/>
      <wsdl:fault name="RequiredFieldException" message="impl:IGroupAPI-RequiredFieldException"/>
      <wsdl:fault name="DataConversionException" message="impl:IGroupAPI-DataConversionException"/>
      <wsdl:fault name="PermissionException" message="impl:IGroupAPI-PermissionException"/>
      <wsdl:fault name="DuplicateKeyException" message="impl:IGroupAPI-DuplicateKeyException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IGroupAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="findPublicIdByName" parameterOrder="groupName">
      <wsdl:documentation>Finds the public id of a group by the name.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="findPublicIdByNameRequest" message="impl:IGroupAPI-findPublicIdByNameRequest"/>
      <wsdl:output name="findPublicIdByNameResponse" message="impl:IGroupAPI-findPublicIdByNameResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IGroupAPI-ServerStateException"/>
      <wsdl:fault name="PermissionException" message="impl:IGroupAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IGroupAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getGroup" parameterOrder="groupID">
      <wsdl:documentation>Retrieves a group given the group identifier or returns null if no group could be found.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="getGroupRequest" message="impl:IGroupAPI-getGroupRequest"/>
      <wsdl:output name="getGroupResponse" message="impl:IGroupAPI-getGroupResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IGroupAPI-ServerStateException"/>
      <wsdl:fault name="PermissionException" message="impl:IGroupAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IGroupAPI-BadIdentifierException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="IImportToolsAPI" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>IImportToolsAPI is a remote interface to a set of tools to import XML data to the
server.
&lt;p/&gt;
The XML import format is defined by dynamically-generated XML Schema Definition (XSD) files. Regenerate the XSD
files with the regen-xsd task. After XSD regeneration, you will find the XSD files in dist/xsd/import,
including the three XSD files: xx_typelists.xsd, xx_entities.xsd, xx_import.xsd (with "xx" replaced by the Guidewire
product code, e.g., "cc" for ClaimCenter).
@deprecated Use WS-I webservice gw.wsi.pl.ImportToolsAPI instead.
</wsdl:documentation>
    <wsdl:operation name="csvToXml" parameterOrder="csvData ignoreNullConstraintViolations ignoreAllErrors">
      <wsdl:documentation>Convert CSV data to XML data suitable to be imported by {@link #importXmlData(String)}
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="csvToXmlRequest" message="impl:IImportToolsAPI-csvToXmlRequest"/>
      <wsdl:output name="csvToXmlResponse" message="impl:IImportToolsAPI-csvToXmlResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IImportToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IImportToolsAPI-SOAPServerException"/>
      <wsdl:fault name="SOAPException" message="impl:IImportToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IImportToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IImportToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="csvToXml" parameterOrder="csvData dataSet ignoreNullConstraintViolations ignoreAllErrors">
      <wsdl:documentation>Convert CSV data to XML data suitable to be imported {@link #importXmlData(String)}
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="csvToXmlRequest1" message="impl:IImportToolsAPI-csvToXmlRequest1"/>
      <wsdl:output name="csvToXmlResponse1" message="impl:IImportToolsAPI-csvToXmlResponse1"/>
      <wsdl:fault name="ServerStateException" message="impl:IImportToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IImportToolsAPI-SOAPServerException"/>
      <wsdl:fault name="SOAPException" message="impl:IImportToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IImportToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IImportToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="importCsvData" parameterOrder="csvData dataSet ignoreNullConstraintViolations ignoreAllErrors">
      <wsdl:documentation>Import CSV data.

Note that importing data through this call does not generate events for the newly imported objects.
&lt;p&gt;
&lt;b&gt;WARNING&lt;/b&gt;: this is &lt;em&gt;only&lt;/em&gt; supported for administrative database tables (such as User)
because these XML import routines do not perform complete data validation tests on imported data.
Any other use (claims, policies, etc) is dangerous and is &lt;b&gt;NOT&lt;/b&gt; supported
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="importCsvDataRequest" message="impl:IImportToolsAPI-importCsvDataRequest"/>
      <wsdl:output name="importCsvDataResponse" message="impl:IImportToolsAPI-importCsvDataResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IImportToolsAPI-ServerStateException"/>
      <wsdl:fault name="RequiredFieldException" message="impl:IImportToolsAPI-RequiredFieldException"/>
      <wsdl:fault name="DataConversionException" message="impl:IImportToolsAPI-DataConversionException"/>
      <wsdl:fault name="SOAPException" message="impl:IImportToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IImportToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IImportToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="importXmlData" parameterOrder="xmlData">
      <wsdl:documentation>Import XML data.
To improve performance, the XML data string can be wrapped with CDATA tags.
For example:
&lt;pre&gt;&amp;lt;![CDATA[&lt;br&gt;
...import XML...&lt;br&gt;
]]&gt;&lt;/pre&gt;

Note that importing data through this call does not generate events for the newly imported objects.
&lt;p&gt;
&lt;b&gt;WARNING&lt;/b&gt;: this is &lt;em&gt;only&lt;/em&gt; supported for administrative database tables (such as User)
because these XML import routines do not perform complete data validation tests on imported data.
Any other use (claims, policies, etc) is dangerous and is &lt;b&gt;NOT&lt;/b&gt; supported
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="importXmlDataRequest" message="impl:IImportToolsAPI-importXmlDataRequest"/>
      <wsdl:output name="importXmlDataResponse" message="impl:IImportToolsAPI-importXmlDataResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IImportToolsAPI-ServerStateException"/>
      <wsdl:fault name="RequiredFieldException" message="impl:IImportToolsAPI-RequiredFieldException"/>
      <wsdl:fault name="DataConversionException" message="impl:IImportToolsAPI-DataConversionException"/>
      <wsdl:fault name="SOAPException" message="impl:IImportToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IImportToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IImportToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="importXmlDataAsByteArray" parameterOrder="xmlData">
      <wsdl:documentation>Import XML data, passing the data as an array of UTF-8 bytes representing the XML string.
To improve performance, the XML data string can be wrapped with CDATA tags.
For example:
&lt;pre&gt;&amp;lt;![CDATA[&lt;br&gt;
...import XML...&lt;br&gt;
]]&gt;&lt;/pre&gt;

Note that importing data through this call does not generate events for the newly imported objects.
&lt;p&gt;
&lt;b&gt;WARNING&lt;/b&gt;: this is &lt;em&gt;only&lt;/em&gt; supported for administrative database tables (such as User)
because these XML import routines do not perform complete data validation tests on imported data.
Any other use (claims, policies, etc) is dangerous and is &lt;b&gt;NOT&lt;/b&gt; supported

@see #importXmlData(String)
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="importXmlDataAsByteArrayRequest" message="impl:IImportToolsAPI-importXmlDataAsByteArrayRequest"/>
      <wsdl:output name="importXmlDataAsByteArrayResponse" message="impl:IImportToolsAPI-importXmlDataAsByteArrayResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IImportToolsAPI-ServerStateException"/>
      <wsdl:fault name="RequiredFieldException" message="impl:IImportToolsAPI-RequiredFieldException"/>
      <wsdl:fault name="DataConversionException" message="impl:IImportToolsAPI-DataConversionException"/>
      <wsdl:fault name="SOAPException" message="impl:IImportToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IImportToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IImportToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="rebuildRolePrivileges">
      <wsdl:documentation>Rebuild the role privileges data by deleting the priviliges data in the database, and then
re-importing the roleprivileges.csv file.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="rebuildRolePrivilegesRequest" message="impl:IImportToolsAPI-rebuildRolePrivilegesRequest"/>
      <wsdl:output name="rebuildRolePrivilegesResponse" message="impl:IImportToolsAPI-rebuildRolePrivilegesResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IImportToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IImportToolsAPI-SOAPServerException"/>
      <wsdl:fault name="SOAPException" message="impl:IImportToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IImportToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IImportToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="xmlToCsv" parameterOrder="xmlData">
      <wsdl:documentation>Export XML data into CSV data.  The reverse operation from #csvToXml(String)
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="xmlToCsvRequest" message="impl:IImportToolsAPI-xmlToCsvRequest"/>
      <wsdl:output name="xmlToCsvResponse" message="impl:IImportToolsAPI-xmlToCsvResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IImportToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IImportToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IImportToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IImportToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="ILoginAPI" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>&lt;p&gt;
A remote interface that allows a user to log in and out of a system. The system uses conversations to implement SOAP
authentication in a Guidewire application  (e.g. BillingCenter, ClaimCenter, PolicyCenter). When connecting to Guidewire
applications the caller must first authenticate using the &lt;code&gt;ILoginAPI.login()&lt;/code&gt; method.  This method returns the
the session ID of the server session.
&lt;/p&gt;
&lt;p&gt;
On each successive call in the conversation, pass the session ID in the SOAP header
{@link gw.pl.util.webservices.Globals#GW_AUTHENTICATION_SECURITY_TOKEN_CONTEXT_PROPERTY}. You must call
&lt;code&gt;logout()&lt;/code&gt; when you are done with the conversation.
&lt;/p&gt;
&lt;p&gt;&lt;b&gt;NOTE:&lt;/b&gt; This API is intended for users who are using Guidewire's web services from languages other
than Java.   If you are using Java, you should use the &lt;code&gt;APILocator&lt;/code&gt; instead.
&lt;/p&gt;
@deprecated Use WS-I webservice gw.wsi.pl.LoginAPI instead.
</wsdl:documentation>
    <wsdl:operation name="WSSLogin" parameterOrder="userName password">
      <wsdl:documentation>&lt;p&gt;
Logs the user in preparation for a Web Service Security (WSS) conversation. A WSS conversation is one in which
user credentials are passed using the WSS &lt;code&gt;UsernameToken&lt;/code&gt; profile.
&lt;/p&gt;&lt;p&gt;
&lt;b&gt;NOTE:&lt;/b&gt; The Guidewire Toolkit does not currently support this method. This method is available
for access by all other SOAP clients.
&lt;/p&gt;
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="WSSLoginRequest" message="impl:ILoginAPI-WSSLoginRequest"/>
      <wsdl:output name="WSSLoginResponse" message="impl:ILoginAPI-WSSLoginResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ILoginAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ILoginAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ILoginAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ILoginAPI-BadIdentifierException"/>
      <wsdl:fault name="LoginException" message="impl:ILoginAPI-LoginException"/>
    </wsdl:operation>
    <wsdl:operation name="WSSLogout" parameterOrder="userName">
      <wsdl:documentation>Terminates a WSS conversation. Attempts to log out a user not logged in are siltently ignored.
&lt;p/&gt;
NOTE: Usage of this method by the Guidewire Toolkit is not currently supported. This is available
for access by all other SOAP clients.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="WSSLogoutRequest" message="impl:ILoginAPI-WSSLogoutRequest"/>
      <wsdl:output name="WSSLogoutResponse" message="impl:ILoginAPI-WSSLogoutResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ILoginAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ILoginAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ILoginAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ILoginAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="login" parameterOrder="userName password">
      <wsdl:documentation>Logs the user into a Guidewire application (e.g. ClaimCenter, PolicyCenter, BillingCenter). Returns the session ID
of the server session.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="loginRequest" message="impl:ILoginAPI-loginRequest"/>
      <wsdl:output name="loginResponse" message="impl:ILoginAPI-loginResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ILoginAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ILoginAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ILoginAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ILoginAPI-BadIdentifierException"/>
      <wsdl:fault name="LoginException" message="impl:ILoginAPI-LoginException"/>
    </wsdl:operation>
    <wsdl:operation name="logout" parameterOrder="sessionID">
      <wsdl:documentation>Logs the user out of the session.  The session will timeout if this method is not called.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="logoutRequest" message="impl:ILoginAPI-logoutRequest"/>
      <wsdl:output name="logoutResponse" message="impl:ILoginAPI-logoutResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ILoginAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ILoginAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ILoginAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ILoginAPI-BadIdentifierException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="IMaintenanceToolsAPI" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>An API used for managing the application. This is distinct from
ISystemToolsAPI which is concerned with managing the application platform.
@deprecated (Since 8.0.1) Use gw.webservice.bc.MaintenanceToolsAPI instead.
</wsdl:documentation>
    <wsdl:operation name="batchProcessStatusByID" parameterOrder="pid">
      <wsdl:documentation>Gets the status of a particular batch process invocation.  If that invocation is still running,
the status will indicate as much, and only the startDate and opsCompleted fields will be filled in.
Otherwise the returned object will contain information about
the completed run (see ProcessStatus for information about all the fields returned).
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="batchProcessStatusByIDRequest" message="impl:IMaintenanceToolsAPI-batchProcessStatusByIDRequest"/>
      <wsdl:output name="batchProcessStatusByIDResponse" message="impl:IMaintenanceToolsAPI-batchProcessStatusByIDResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMaintenanceToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IMaintenanceToolsAPI-SOAPServerException"/>
      <wsdl:fault name="PermissionException" message="impl:IMaintenanceToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMaintenanceToolsAPI-BadIdentifierException"/>
      <wsdl:fault name="SOAPSenderException" message="impl:IMaintenanceToolsAPI-SOAPSenderException"/>
    </wsdl:operation>
    <wsdl:operation name="batchProcessStatusByName" parameterOrder="processName">
      <wsdl:documentation>Gets the status of the given batch process, indicating whether or not the process is running and,
if so, its current progress.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="batchProcessStatusByNameRequest" message="impl:IMaintenanceToolsAPI-batchProcessStatusByNameRequest"/>
      <wsdl:output name="batchProcessStatusByNameResponse" message="impl:IMaintenanceToolsAPI-batchProcessStatusByNameResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMaintenanceToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IMaintenanceToolsAPI-SOAPServerException"/>
      <wsdl:fault name="PermissionException" message="impl:IMaintenanceToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMaintenanceToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getValidBatchProcessNames">
      <wsdl:documentation>Return the set of valid batch process names
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="getValidBatchProcessNamesRequest" message="impl:IMaintenanceToolsAPI-getValidBatchProcessNamesRequest"/>
      <wsdl:output name="getValidBatchProcessNamesResponse" message="impl:IMaintenanceToolsAPI-getValidBatchProcessNamesResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMaintenanceToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IMaintenanceToolsAPI-SOAPServerException"/>
      <wsdl:fault name="PermissionException" message="impl:IMaintenanceToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMaintenanceToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getWQueueStatus" parameterOrder="queueName">
      <wsdl:documentation>Retrieves the status of active executors for that particular queue. Each executor contains information
about last 25 workers ran by each executor.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="getWQueueStatusRequest" message="impl:IMaintenanceToolsAPI-getWQueueStatusRequest"/>
      <wsdl:output name="getWQueueStatusResponse" message="impl:IMaintenanceToolsAPI-getWQueueStatusResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMaintenanceToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IMaintenanceToolsAPI-SOAPServerException"/>
      <wsdl:fault name="PermissionException" message="impl:IMaintenanceToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMaintenanceToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getWorkQueueConfig" parameterOrder="queueName">
      <wsdl:documentation>Get the current configuration of distributed workers for the
specified work queue.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="getWorkQueueConfigRequest" message="impl:IMaintenanceToolsAPI-getWorkQueueConfigRequest"/>
      <wsdl:output name="getWorkQueueConfigResponse" message="impl:IMaintenanceToolsAPI-getWorkQueueConfigResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMaintenanceToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IMaintenanceToolsAPI-SOAPServerException"/>
      <wsdl:fault name="PermissionException" message="impl:IMaintenanceToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMaintenanceToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getWorkQueueNames">
      <wsdl:documentation>Returns the list of work queue names for this product.
These names may be used in {@link #getWorkQueueConfig}
and {@link #setWorkQueueConfig}.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="getWorkQueueNamesRequest" message="impl:IMaintenanceToolsAPI-getWorkQueueNamesRequest"/>
      <wsdl:output name="getWorkQueueNamesResponse" message="impl:IMaintenanceToolsAPI-getWorkQueueNamesResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMaintenanceToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IMaintenanceToolsAPI-SOAPServerException"/>
      <wsdl:fault name="PermissionException" message="impl:IMaintenanceToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMaintenanceToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getWorkQueueStatus" parameterOrder="queueName">
      <wsdl:documentation>Retrieves the worker status with information about work queues across a cluster.
&lt;br&gt;@deprecated (Since 8.0.0) Use the method {@link #getWQueueStatus(java.lang.String)} instead.  It returns more detailed and accurate
information about a worker queue executors and workers.</wsdl:documentation>
      <wsdl:input name="getWorkQueueStatusRequest" message="impl:IMaintenanceToolsAPI-getWorkQueueStatusRequest"/>
      <wsdl:output name="getWorkQueueStatusResponse" message="impl:IMaintenanceToolsAPI-getWorkQueueStatusResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMaintenanceToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IMaintenanceToolsAPI-SOAPServerException"/>
      <wsdl:fault name="PermissionException" message="impl:IMaintenanceToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMaintenanceToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="importDefaultSampleData">
      <wsdl:documentation>Generates the default Gosu sample data, as configured in config.xml
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="importDefaultSampleDataRequest" message="impl:IMaintenanceToolsAPI-importDefaultSampleDataRequest"/>
      <wsdl:output name="importDefaultSampleDataResponse" message="impl:IMaintenanceToolsAPI-importDefaultSampleDataResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMaintenanceToolsAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IMaintenanceToolsAPI-DataConversionException"/>
      <wsdl:fault name="PermissionException" message="impl:IMaintenanceToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMaintenanceToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="importSampleData" parameterOrder="dataSet">
      <wsdl:documentation>Imports sample data by calling a method on the SampleData.DataSets Gosu class
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="importSampleDataRequest" message="impl:IMaintenanceToolsAPI-importSampleDataRequest"/>
      <wsdl:output name="importSampleDataResponse" message="impl:IMaintenanceToolsAPI-importSampleDataResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMaintenanceToolsAPI-ServerStateException"/>
      <wsdl:fault name="RequiredFieldException" message="impl:IMaintenanceToolsAPI-RequiredFieldException"/>
      <wsdl:fault name="DataConversionException" message="impl:IMaintenanceToolsAPI-DataConversionException"/>
      <wsdl:fault name="PermissionException" message="impl:IMaintenanceToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMaintenanceToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="isBatchProcessNameValid" parameterOrder="processName">
      <wsdl:documentation>Return whether a given batch process name is valid
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="isBatchProcessNameValidRequest" message="impl:IMaintenanceToolsAPI-isBatchProcessNameValidRequest"/>
      <wsdl:output name="isBatchProcessNameValidResponse" message="impl:IMaintenanceToolsAPI-isBatchProcessNameValidResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMaintenanceToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IMaintenanceToolsAPI-SOAPServerException"/>
      <wsdl:fault name="PermissionException" message="impl:IMaintenanceToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMaintenanceToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="isPluginStarted" parameterOrder="pluginName">
      <wsdl:documentation>whether the plugin is started.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="isPluginStartedRequest" message="impl:IMaintenanceToolsAPI-isPluginStartedRequest"/>
      <wsdl:output name="isPluginStartedResponse" message="impl:IMaintenanceToolsAPI-isPluginStartedResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMaintenanceToolsAPI-ServerStateException"/>
      <wsdl:fault name="PermissionException" message="impl:IMaintenanceToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMaintenanceToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="notifyQueueWorkers" parameterOrder="queueName">
      <wsdl:documentation>Wakes up all workers for the specified queue across the cluster.
Workers will check for workitems and will continue
processing any found until the workitem table for the
queue is empty.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="notifyQueueWorkersRequest" message="impl:IMaintenanceToolsAPI-notifyQueueWorkersRequest"/>
      <wsdl:output name="notifyQueueWorkersResponse" message="impl:IMaintenanceToolsAPI-notifyQueueWorkersResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMaintenanceToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IMaintenanceToolsAPI-SOAPServerException"/>
      <wsdl:fault name="PermissionException" message="impl:IMaintenanceToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMaintenanceToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="requestTerminationOfBatchProcessByID" parameterOrder="pid">
      <wsdl:documentation>Requests termination of the given batch process, if it's currently running. Note that it's possible that
this particular invocation could have finished and another invocation of the same process
begun, in which case this won't request the termination of the current invocation.

This method does not wait for the batch process to actually terminate
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="requestTerminationOfBatchProcessByIDRequest" message="impl:IMaintenanceToolsAPI-requestTerminationOfBatchProcessByIDRequest"/>
      <wsdl:output name="requestTerminationOfBatchProcessByIDResponse" message="impl:IMaintenanceToolsAPI-requestTerminationOfBatchProcessByIDResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMaintenanceToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IMaintenanceToolsAPI-SOAPServerException"/>
      <wsdl:fault name="PermissionException" message="impl:IMaintenanceToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMaintenanceToolsAPI-BadIdentifierException"/>
      <wsdl:fault name="SOAPSenderException" message="impl:IMaintenanceToolsAPI-SOAPSenderException"/>
    </wsdl:operation>
    <wsdl:operation name="requestTerminationOfBatchProcessByName" parameterOrder="processName">
      <wsdl:documentation>Requests termination of the given batch process, if it's currently running.

This method does not wait for the batch process to actually terminate
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="requestTerminationOfBatchProcessByNameRequest" message="impl:IMaintenanceToolsAPI-requestTerminationOfBatchProcessByNameRequest"/>
      <wsdl:output name="requestTerminationOfBatchProcessByNameResponse" message="impl:IMaintenanceToolsAPI-requestTerminationOfBatchProcessByNameResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMaintenanceToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IMaintenanceToolsAPI-SOAPServerException"/>
      <wsdl:fault name="PermissionException" message="impl:IMaintenanceToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMaintenanceToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="setWorkQueueConfig" parameterOrder="queueName config">
      <wsdl:documentation>Sets the configuration for distributed workers for the
specified work queue.  Any currently running worker
instances will be stopped after the current workitem in process
is completed.  New worker instances as specified by the passed
in config will be created and started.  Note that the
changes made here are temporary; if the server is restarted,
the initial values from config.xml will be used when creating
and starting workers.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="setWorkQueueConfigRequest" message="impl:IMaintenanceToolsAPI-setWorkQueueConfigRequest"/>
      <wsdl:output name="setWorkQueueConfigResponse" message="impl:IMaintenanceToolsAPI-setWorkQueueConfigResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMaintenanceToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IMaintenanceToolsAPI-SOAPServerException"/>
      <wsdl:fault name="PermissionException" message="impl:IMaintenanceToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMaintenanceToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="startBatchProcess" parameterOrder="processName">
      <wsdl:documentation>Starts the given batch process.  If the process is already running on the server,
an exception will be thrown.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="startBatchProcessRequest" message="impl:IMaintenanceToolsAPI-startBatchProcessRequest"/>
      <wsdl:output name="startBatchProcessResponse" message="impl:IMaintenanceToolsAPI-startBatchProcessResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMaintenanceToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IMaintenanceToolsAPI-SOAPServerException"/>
      <wsdl:fault name="PermissionException" message="impl:IMaintenanceToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMaintenanceToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="startPlugin" parameterOrder="pluginName">
      <wsdl:documentation>Starts the given startable plugin.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="startPluginRequest" message="impl:IMaintenanceToolsAPI-startPluginRequest"/>
      <wsdl:output name="startPluginResponse" message="impl:IMaintenanceToolsAPI-startPluginResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMaintenanceToolsAPI-ServerStateException"/>
      <wsdl:fault name="PermissionException" message="impl:IMaintenanceToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMaintenanceToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="startWorkQueueWorkers" parameterOrder="queueName">
      <wsdl:documentation>This will start the workqueue wokers
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="startWorkQueueWorkersRequest" message="impl:IMaintenanceToolsAPI-startWorkQueueWorkersRequest"/>
      <wsdl:output name="startWorkQueueWorkersResponse" message="impl:IMaintenanceToolsAPI-startWorkQueueWorkersResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMaintenanceToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IMaintenanceToolsAPI-SOAPServerException"/>
      <wsdl:fault name="PermissionException" message="impl:IMaintenanceToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMaintenanceToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="stopPlugin" parameterOrder="pluginName">
      <wsdl:documentation>Stop the given startable plugin.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="stopPluginRequest" message="impl:IMaintenanceToolsAPI-stopPluginRequest"/>
      <wsdl:output name="stopPluginResponse" message="impl:IMaintenanceToolsAPI-stopPluginResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMaintenanceToolsAPI-ServerStateException"/>
      <wsdl:fault name="PermissionException" message="impl:IMaintenanceToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMaintenanceToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="stopWorkQueueWorkers" parameterOrder="queueName">
      <wsdl:documentation>This will stop the specified ied work queue.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="stopWorkQueueWorkersRequest" message="impl:IMaintenanceToolsAPI-stopWorkQueueWorkersRequest"/>
      <wsdl:output name="stopWorkQueueWorkersResponse" message="impl:IMaintenanceToolsAPI-stopWorkQueueWorkersResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMaintenanceToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IMaintenanceToolsAPI-SOAPServerException"/>
      <wsdl:fault name="PermissionException" message="impl:IMaintenanceToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMaintenanceToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="IMessagingToolsAPI" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>MessagingTools is a remote interface to a set of tools to get messaging
statistics and perform operations on messages.
@deprecated (Since 8.0.1) Use gw.webservice.bc.MessagingToolsAPI instead.
</wsdl:documentation>
    <wsdl:operation name="acknowledgeMessage" parameterOrder="ack">
      <wsdl:documentation>Acknowledges message
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="acknowledgeMessageRequest" message="impl:IMessagingToolsAPI-acknowledgeMessageRequest"/>
      <wsdl:output name="acknowledgeMessageResponse" message="impl:IMessagingToolsAPI-acknowledgeMessageResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMessagingToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IMessagingToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IMessagingToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMessagingToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getMessageId" parameterOrder="senderRefID destinationID">
      <wsdl:documentation>Gets the message id for a message with a specific sender ref id and a specific destination id.
If the destination id passed in is -1, then this would find messages from any destination that matches the sender ref id.
Returns -1 if no message is found that has given sender ref id and destination id.
If there are multiple messages that match, this will return the first one.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="getMessageIdRequest" message="impl:IMessagingToolsAPI-getMessageIdRequest"/>
      <wsdl:output name="getMessageIdResponse" message="impl:IMessagingToolsAPI-getMessageIdResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMessagingToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IMessagingToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IMessagingToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMessagingToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getMessageStatisticsForSafeOrderedObject" parameterOrder="destID safeOrderedObjectId">
      <wsdl:documentation>Gets all the message statistics of a given destination and safe ordered object.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="getMessageStatisticsForSafeOrderedObjectRequest" message="impl:IMessagingToolsAPI-getMessageStatisticsForSafeOrderedObjectRequest"/>
      <wsdl:output name="getMessageStatisticsForSafeOrderedObjectResponse" message="impl:IMessagingToolsAPI-getMessageStatisticsForSafeOrderedObjectResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMessagingToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IMessagingToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IMessagingToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMessagingToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getTotalStatistics" parameterOrder="destID">
      <wsdl:documentation>Gets all the message statistics of a given destination.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="getTotalStatisticsRequest" message="impl:IMessagingToolsAPI-getTotalStatisticsRequest"/>
      <wsdl:output name="getTotalStatisticsResponse" message="impl:IMessagingToolsAPI-getTotalStatisticsResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMessagingToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IMessagingToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IMessagingToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMessagingToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="purgeCompletedMessages" parameterOrder="cutoff">
      <wsdl:documentation>Purges the message history table of completed messages.
Deletes all messages with send time less than supplied before date.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="purgeCompletedMessagesRequest" message="impl:IMessagingToolsAPI-purgeCompletedMessagesRequest"/>
      <wsdl:output name="purgeCompletedMessagesResponse" message="impl:IMessagingToolsAPI-purgeCompletedMessagesResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMessagingToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IMessagingToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IMessagingToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMessagingToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="resumeDestination" parameterOrder="destID">
      <wsdl:documentation>Resumes the destination with the specified destination id
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="resumeDestinationRequest" message="impl:IMessagingToolsAPI-resumeDestinationRequest"/>
      <wsdl:output name="resumeDestinationResponse" message="impl:IMessagingToolsAPI-resumeDestinationResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMessagingToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IMessagingToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IMessagingToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMessagingToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="resyncAccount" parameterOrder="destID accountID">
      <wsdl:documentation>Resync the account against a specified destination
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="resyncAccountRequest" message="impl:IMessagingToolsAPI-resyncAccountRequest"/>
      <wsdl:output name="resyncAccountResponse" message="impl:IMessagingToolsAPI-resyncAccountResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMessagingToolsAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IMessagingToolsAPI-DataConversionException"/>
      <wsdl:fault name="SOAPException" message="impl:IMessagingToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IMessagingToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMessagingToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="resyncPolicyPeriod" parameterOrder="destID policyPeriodID">
      <wsdl:documentation>Resync the policy period against a specified destination
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="resyncPolicyPeriodRequest" message="impl:IMessagingToolsAPI-resyncPolicyPeriodRequest"/>
      <wsdl:output name="resyncPolicyPeriodResponse" message="impl:IMessagingToolsAPI-resyncPolicyPeriodResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMessagingToolsAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IMessagingToolsAPI-DataConversionException"/>
      <wsdl:fault name="SOAPException" message="impl:IMessagingToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IMessagingToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMessagingToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="resyncProducer" parameterOrder="destID producerID">
      <wsdl:documentation>Resync the producer against a specified destination
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="resyncProducerRequest" message="impl:IMessagingToolsAPI-resyncProducerRequest"/>
      <wsdl:output name="resyncProducerResponse" message="impl:IMessagingToolsAPI-resyncProducerResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMessagingToolsAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IMessagingToolsAPI-DataConversionException"/>
      <wsdl:fault name="SOAPException" message="impl:IMessagingToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IMessagingToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMessagingToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="retryMessage" parameterOrder="messageID">
      <wsdl:documentation>Retries a single message (retryable error or inflight).
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="retryMessageRequest" message="impl:IMessagingToolsAPI-retryMessageRequest"/>
      <wsdl:output name="retryMessageResponse" message="impl:IMessagingToolsAPI-retryMessageResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMessagingToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IMessagingToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IMessagingToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMessagingToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="retryRetryableErrorMessages" parameterOrder="destID">
      <wsdl:documentation>Retries all messages in retryable error state for the given destination.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="retryRetryableErrorMessagesRequest" message="impl:IMessagingToolsAPI-retryRetryableErrorMessagesRequest"/>
      <wsdl:output name="retryRetryableErrorMessagesResponse" message="impl:IMessagingToolsAPI-retryRetryableErrorMessagesResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMessagingToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IMessagingToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IMessagingToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMessagingToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="retryRetryableErrorMessages" parameterOrder="destID retryLimit">
      <wsdl:documentation>Retries messages in retryable error state for the given destination where the message
has previously been retried fewer than retryLimit times.  Each message maintains a retry
count; attempts to retry the message increment the retry count.  If there are messages
whose retry count &gt;= retryLimit, they will not be retried.
&lt;p/&gt;
Specifying a retryLimit of 0 retries all retryable error messages,
and is identical to retryRetryableErrorMessages(int destID).
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="retryRetryableErrorMessagesRequest1" message="impl:IMessagingToolsAPI-retryRetryableErrorMessagesRequest1"/>
      <wsdl:output name="retryRetryableErrorMessagesResponse1" message="impl:IMessagingToolsAPI-retryRetryableErrorMessagesResponse1"/>
      <wsdl:fault name="ServerStateException" message="impl:IMessagingToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IMessagingToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IMessagingToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMessagingToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="retryRetryableErrorMessagesForCategory" parameterOrder="destID category">
      <wsdl:documentation>Retries messages in retryable error state for the given destination and error category,
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="retryRetryableErrorMessagesForCategoryRequest" message="impl:IMessagingToolsAPI-retryRetryableErrorMessagesForCategoryRequest"/>
      <wsdl:output name="retryRetryableErrorMessagesForCategoryResponse" message="impl:IMessagingToolsAPI-retryRetryableErrorMessagesForCategoryResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMessagingToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IMessagingToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IMessagingToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMessagingToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="skipMessage" parameterOrder="messageID">
      <wsdl:documentation>Skips a single message (error or inflight).
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="skipMessageRequest" message="impl:IMessagingToolsAPI-skipMessageRequest"/>
      <wsdl:output name="skipMessageResponse" message="impl:IMessagingToolsAPI-skipMessageResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMessagingToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IMessagingToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IMessagingToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMessagingToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="suspendDestination" parameterOrder="destID">
      <wsdl:documentation>Suspends the destination with the specified destination id
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="suspendDestinationRequest" message="impl:IMessagingToolsAPI-suspendDestinationRequest"/>
      <wsdl:output name="suspendDestinationResponse" message="impl:IMessagingToolsAPI-suspendDestinationResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMessagingToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IMessagingToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IMessagingToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMessagingToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="IPaymentAPI" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation/>
    <wsdl:operation name="createAgencyPayment" parameterOrder="moneyDetails statementID grossAmounts commissionAmounts">
      <wsdl:documentation>Create an agency cycle payment with an Agency Money Received</wsdl:documentation>
      <wsdl:input name="createAgencyPaymentRequest" message="impl:IPaymentAPI-createAgencyPaymentRequest"/>
      <wsdl:output name="createAgencyPaymentResponse" message="impl:IPaymentAPI-createAgencyPaymentResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IPaymentAPI-ServerStateException"/>
      <wsdl:fault name="PermissionException" message="impl:IPaymentAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IPaymentAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getAccountWithNumber" parameterOrder="accountNumber">
      <wsdl:documentation>null</wsdl:documentation>
      <wsdl:input name="getAccountWithNumberRequest" message="impl:IPaymentAPI-getAccountWithNumberRequest"/>
      <wsdl:output name="getAccountWithNumberResponse" message="impl:IPaymentAPI-getAccountWithNumberResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IPaymentAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IPaymentAPI-DataConversionException"/>
      <wsdl:fault name="PermissionException" message="impl:IPaymentAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IPaymentAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getProducerUnapplied" parameterOrder="producerID">
      <wsdl:documentation>Make payment to producer unapplied</wsdl:documentation>
      <wsdl:input name="getProducerUnappliedRequest" message="impl:IPaymentAPI-getProducerUnappliedRequest"/>
      <wsdl:output name="getProducerUnappliedResponse" message="impl:IPaymentAPI-getProducerUnappliedResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IPaymentAPI-ServerStateException"/>
      <wsdl:fault name="PermissionException" message="impl:IPaymentAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IPaymentAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="loadAccount" parameterOrder="accountID">
      <wsdl:documentation>null</wsdl:documentation>
      <wsdl:input name="loadAccountRequest" message="impl:IPaymentAPI-loadAccountRequest"/>
      <wsdl:output name="loadAccountResponse" message="impl:IPaymentAPI-loadAccountResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IPaymentAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IPaymentAPI-DataConversionException"/>
      <wsdl:fault name="PermissionException" message="impl:IPaymentAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IPaymentAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="loadAddress" parameterOrder="addressID">
      <wsdl:documentation>null</wsdl:documentation>
      <wsdl:input name="loadAddressRequest" message="impl:IPaymentAPI-loadAddressRequest"/>
      <wsdl:output name="loadAddressResponse" message="impl:IPaymentAPI-loadAddressResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IPaymentAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IPaymentAPI-DataConversionException"/>
      <wsdl:fault name="PermissionException" message="impl:IPaymentAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IPaymentAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="loadPolicyPeriod" parameterOrder="policyPeriodID">
      <wsdl:documentation>null</wsdl:documentation>
      <wsdl:input name="loadPolicyPeriodRequest" message="impl:IPaymentAPI-loadPolicyPeriodRequest"/>
      <wsdl:output name="loadPolicyPeriodResponse" message="impl:IPaymentAPI-loadPolicyPeriodResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IPaymentAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IPaymentAPI-DataConversionException"/>
      <wsdl:fault name="PermissionException" message="impl:IPaymentAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IPaymentAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="loadProducer" parameterOrder="producerID">
      <wsdl:documentation>null</wsdl:documentation>
      <wsdl:input name="loadProducerRequest" message="impl:IPaymentAPI-loadProducerRequest"/>
      <wsdl:output name="loadProducerResponse" message="impl:IPaymentAPI-loadProducerResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IPaymentAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IPaymentAPI-DataConversionException"/>
      <wsdl:fault name="PermissionException" message="impl:IPaymentAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IPaymentAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="payToFirstOpenStatement" parameterOrder="producerID moneyDetails">
      <wsdl:documentation>Make payment to producer unapplied and look for the first billed statement which has
the net owned amount match the amount paid. If there is a match, will distribute the amount
to that statement. The amount is considered matched if it within the producer writeoff
threshold, and the different amount will be writeoff</wsdl:documentation>
      <wsdl:input name="payToFirstOpenStatementRequest" message="impl:IPaymentAPI-payToFirstOpenStatementRequest"/>
      <wsdl:output name="payToFirstOpenStatementResponse" message="impl:IPaymentAPI-payToFirstOpenStatementResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IPaymentAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IPaymentAPI-DataConversionException"/>
      <wsdl:fault name="PermissionException" message="impl:IPaymentAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IPaymentAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="payToProducerUnapplied" parameterOrder="producerID moneyDetails">
      <wsdl:documentation>Make payment to producer unapplied</wsdl:documentation>
      <wsdl:input name="payToProducerUnappliedRequest" message="impl:IPaymentAPI-payToProducerUnappliedRequest"/>
      <wsdl:output name="payToProducerUnappliedResponse" message="impl:IPaymentAPI-payToProducerUnappliedResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IPaymentAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IPaymentAPI-DataConversionException"/>
      <wsdl:fault name="PermissionException" message="impl:IPaymentAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IPaymentAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="writeoffProducer" parameterOrder="producerID writeoffAmount">
      <wsdl:documentation>Make producer writeoff</wsdl:documentation>
      <wsdl:input name="writeoffProducerRequest" message="impl:IPaymentAPI-writeoffProducerRequest"/>
      <wsdl:output name="writeoffProducerResponse" message="impl:IPaymentAPI-writeoffProducerResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IPaymentAPI-ServerStateException"/>
      <wsdl:fault name="PermissionException" message="impl:IPaymentAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IPaymentAPI-BadIdentifierException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="IPolicyPeriodAPI" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>
@deprecated (Since 8.0.1) Use gw.webservice.bc.bc801.BCAPI instead
</wsdl:documentation>
    <wsdl:operation name="changeBillingMethodToAgencyBill" parameterOrder="policyPeriodID">
      <wsdl:documentation>Change policy period's billing method from direct bill to agency bill
&lt;br&gt;@deprecated (Since 8.0.1) Use gw.webservice.bc.bc801.BCAPI#changeBillingMethodToAgencyBill instead.</wsdl:documentation>
      <wsdl:input name="changeBillingMethodToAgencyBillRequest" message="impl:IPolicyPeriodAPI-changeBillingMethodToAgencyBillRequest"/>
      <wsdl:output name="changeBillingMethodToAgencyBillResponse" message="impl:IPolicyPeriodAPI-changeBillingMethodToAgencyBillResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IPolicyPeriodAPI-ServerStateException"/>
      <wsdl:fault name="RequiredFieldException" message="impl:IPolicyPeriodAPI-RequiredFieldException"/>
      <wsdl:fault name="PermissionException" message="impl:IPolicyPeriodAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IPolicyPeriodAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="changeBillingMethodToDirectBill" parameterOrder="createInvoiceForToday policyPeriodID">
      <wsdl:documentation>Changes the Billing Method from Agency Bill to Direct Bill.
&lt;p/&gt;
It will try to make it appear as if the original policy period was Direct Bill to begin with and deal with
reallocating commissions, moving invoice items, etc.
&lt;br&gt;@deprecated (Since 8.0.1) Use gw.webservice.bc.bc801.BCAPI#changeBillingMethodToDirectBill instead.</wsdl:documentation>
      <wsdl:input name="changeBillingMethodToDirectBillRequest" message="impl:IPolicyPeriodAPI-changeBillingMethodToDirectBillRequest"/>
      <wsdl:output name="changeBillingMethodToDirectBillResponse" message="impl:IPolicyPeriodAPI-changeBillingMethodToDirectBillResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IPolicyPeriodAPI-ServerStateException"/>
      <wsdl:fault name="RequiredFieldException" message="impl:IPolicyPeriodAPI-RequiredFieldException"/>
      <wsdl:fault name="PermissionException" message="impl:IPolicyPeriodAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IPolicyPeriodAPI-BadIdentifierException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="IProfilerAPI" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>API to access services offered by the Guidewire Profiler.
@deprecated Use WS-I webservice gw.wsi.pl.ProfilerAPI instead.
</wsdl:documentation>
    <wsdl:operation name="setEnableProfilerForBatchProcess" parameterOrder="enable type hiResTime enableStackTracing enableQueryOptimizerTracing enableExtendedQueryTracing dbmsCounterThresholdMs diffDbmsCounters">
      <wsdl:documentation>Enable or disable the profiler for batch processes of the given type
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="setEnableProfilerForBatchProcessRequest" message="impl:IProfilerAPI-setEnableProfilerForBatchProcessRequest"/>
      <wsdl:output name="setEnableProfilerForBatchProcessResponse" message="impl:IProfilerAPI-setEnableProfilerForBatchProcessResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IProfilerAPI-ServerStateException"/>
      <wsdl:fault name="PermissionException" message="impl:IProfilerAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IProfilerAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="setEnableProfilerForBatchProcessAndWorkQueue" parameterOrder="enable type hiResTime enableStackTracing enableQueryOptimizerTracing enableExtendedQueryTracing dbmsCounterThresholdMs diffDbmsCounters">
      <wsdl:documentation>Enable or disable the profiler for batch processes of the given type and their associated work queue
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="setEnableProfilerForBatchProcessAndWorkQueueRequest" message="impl:IProfilerAPI-setEnableProfilerForBatchProcessAndWorkQueueRequest"/>
      <wsdl:output name="setEnableProfilerForBatchProcessAndWorkQueueResponse" message="impl:IProfilerAPI-setEnableProfilerForBatchProcessAndWorkQueueResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IProfilerAPI-ServerStateException"/>
      <wsdl:fault name="PermissionException" message="impl:IProfilerAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IProfilerAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="setEnableProfilerForMessageDestination" parameterOrder="enable destinationID hiResTime enableStackTracing enableQueryOptimizerTracing enableExtendedQueryTracing dbmsCounterThresholdMs diffDbmsCounters">
      <wsdl:documentation>Enable or disable the profiler for the given message destinations
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="setEnableProfilerForMessageDestinationRequest" message="impl:IProfilerAPI-setEnableProfilerForMessageDestinationRequest"/>
      <wsdl:output name="setEnableProfilerForMessageDestinationResponse" message="impl:IProfilerAPI-setEnableProfilerForMessageDestinationResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IProfilerAPI-ServerStateException"/>
      <wsdl:fault name="PermissionException" message="impl:IProfilerAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IProfilerAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="setEnableProfilerForStartablePlugin" parameterOrder="enable pluginName hiResTime enableStackTracing enableQueryOptimizerTracing enableExtendedQueryTracing dbmsCounterThresholdMs diffDbmsCounters">
      <wsdl:documentation>Enable or disable the profiler for the given StartablePlugin
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="setEnableProfilerForStartablePluginRequest" message="impl:IProfilerAPI-setEnableProfilerForStartablePluginRequest"/>
      <wsdl:output name="setEnableProfilerForStartablePluginResponse" message="impl:IProfilerAPI-setEnableProfilerForStartablePluginResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IProfilerAPI-ServerStateException"/>
      <wsdl:fault name="PermissionException" message="impl:IProfilerAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IProfilerAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="setEnableProfilerForSubsequentWebSessions" parameterOrder="name enable hiResTime enableStackTracing enableQueryOptimizerTracing enableExtendedQueryTracing dbmsCounterThresholdMs diffDbmsCounters">
      <wsdl:documentation>Enable or disable the profiler for subsequent new web sessions. Not recommended for production systems
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="setEnableProfilerForSubsequentWebSessionsRequest" message="impl:IProfilerAPI-setEnableProfilerForSubsequentWebSessionsRequest"/>
      <wsdl:output name="setEnableProfilerForSubsequentWebSessionsResponse" message="impl:IProfilerAPI-setEnableProfilerForSubsequentWebSessionsResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IProfilerAPI-ServerStateException"/>
      <wsdl:fault name="PermissionException" message="impl:IProfilerAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IProfilerAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="setEnableProfilerForWebService" parameterOrder="enable serviceName operationName hiResTime enableStackTracing enableQueryOptimizerTracing enableExtendedQueryTracing dbmsCounterThresholdMs diffDbmsCounters">
      <wsdl:documentation>Enable or disable the profiler for the given web service (service name, operation name) pair
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="setEnableProfilerForWebServiceRequest" message="impl:IProfilerAPI-setEnableProfilerForWebServiceRequest"/>
      <wsdl:output name="setEnableProfilerForWebServiceResponse" message="impl:IProfilerAPI-setEnableProfilerForWebServiceResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IProfilerAPI-ServerStateException"/>
      <wsdl:fault name="PermissionException" message="impl:IProfilerAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IProfilerAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="setEnableProfilerForWorkQueue" parameterOrder="enable type hiResTime enableStackTracing enableQueryOptimizerTracing enableExtendedQueryTracing dbmsCounterThresholdMs diffDbmsCounters">
      <wsdl:documentation>Enable or disable the profiler for work queues associated with the given batch process type
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="setEnableProfilerForWorkQueueRequest" message="impl:IProfilerAPI-setEnableProfilerForWorkQueueRequest"/>
      <wsdl:output name="setEnableProfilerForWorkQueueResponse" message="impl:IProfilerAPI-setEnableProfilerForWorkQueueResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IProfilerAPI-ServerStateException"/>
      <wsdl:fault name="PermissionException" message="impl:IProfilerAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IProfilerAPI-BadIdentifierException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="IStagingTableEncryptionAPI" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>This interface provides methods for encrypting data in the  staging tables.
@deprecated (Since 8.0.1) Use gw.webservice.bc.bc801.BCAPI instead.
</wsdl:documentation>
    <wsdl:operation name="encryptDataOnStagingTables">
      <wsdl:documentation>Instructs the  server to encrypt data on the staging tables.
&lt;br&gt;@deprecated (Since 8.0.1) Use gw.webservice.bc.bc801.BCAPI#encryptDataOnStagingTables instead.</wsdl:documentation>
      <wsdl:input name="encryptDataOnStagingTablesRequest" message="impl:IStagingTableEncryptionAPI-encryptDataOnStagingTablesRequest"/>
      <wsdl:output name="encryptDataOnStagingTablesResponse" message="impl:IStagingTableEncryptionAPI-encryptDataOnStagingTablesResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IStagingTableEncryptionAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IStagingTableEncryptionAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IStagingTableEncryptionAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IStagingTableEncryptionAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="encryptDataOnStagingTablesAsBatchProcess">
      <wsdl:documentation>Instructs the  server to encrypt data on the staging tables.  The same as encryptDataOnStagingTables
except that the process will be performed asynchronously in a batch process.  After completion,
the process status will contain the number of tables that were updated in the opsCompleted field.
Note that this batch process can't be terminated.
&lt;br&gt;@deprecated (Since 8.0.1) Use gw.webservice.bc.bc801.BCAPI#encryptDataOnStagingTablesAsBatchProcess instead.</wsdl:documentation>
      <wsdl:input name="encryptDataOnStagingTablesAsBatchProcessRequest" message="impl:IStagingTableEncryptionAPI-encryptDataOnStagingTablesAsBatchProcessRequest"/>
      <wsdl:output name="encryptDataOnStagingTablesAsBatchProcessResponse" message="impl:IStagingTableEncryptionAPI-encryptDataOnStagingTablesAsBatchProcessResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IStagingTableEncryptionAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IStagingTableEncryptionAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IStagingTableEncryptionAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IStagingTableEncryptionAPI-BadIdentifierException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="ISystemToolsAPI" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>System maintenance interface.
@deprecated Use WS-I webservice gw.wsi.pl.SystemToolsAPI instead.
</wsdl:documentation>
    <wsdl:operation name="cancelUpdateStats">
      <wsdl:documentation>Cancel the update stats process if running. Please use getUpdateStatsState() to check on the state of the run.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="cancelUpdateStatsRequest" message="impl:ISystemToolsAPI-cancelUpdateStatsRequest"/>
      <wsdl:output name="cancelUpdateStatsResponse" message="impl:ISystemToolsAPI-cancelUpdateStatsResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ISystemToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ISystemToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ISystemToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ISystemToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="checkDatabaseConsistency" parameterOrder="returnAllResults">
      <wsdl:documentation>Check the consistency of the underlying physical database.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="checkDatabaseConsistencyRequest" message="impl:ISystemToolsAPI-checkDatabaseConsistencyRequest"/>
      <wsdl:output name="checkDatabaseConsistencyResponse" message="impl:ISystemToolsAPI-checkDatabaseConsistencyResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ISystemToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ISystemToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ISystemToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ISystemToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="checkPartialDatabaseConsistency" parameterOrder="returnAllResults tablesToCheck consistencyCheckTypesToCheck">
      <wsdl:documentation>Run a subset of the consistency checks on the underlying physical database.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="checkPartialDatabaseConsistencyRequest" message="impl:ISystemToolsAPI-checkPartialDatabaseConsistencyRequest"/>
      <wsdl:output name="checkPartialDatabaseConsistencyResponse" message="impl:ISystemToolsAPI-checkPartialDatabaseConsistencyResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ISystemToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ISystemToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ISystemToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ISystemToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getActiveSessionData">
      <wsdl:documentation>Returns all server session information.  The session information is returned as an array of SessionData objects,
each of which contains the user's name, ID, and session ID for a session that's currently open.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="getActiveSessionDataRequest" message="impl:ISystemToolsAPI-getActiveSessionDataRequest"/>
      <wsdl:output name="getActiveSessionDataResponse" message="impl:ISystemToolsAPI-getActiveSessionDataResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ISystemToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ISystemToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ISystemToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ISystemToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getDBCCState">
      <wsdl:documentation>Returns the state of the consistency checks process. Only one set of consistency checks can be running at
any given moment.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="getDBCCStateRequest" message="impl:ISystemToolsAPI-getDBCCStateRequest"/>
      <wsdl:output name="getDBCCStateResponse" message="impl:ISystemToolsAPI-getDBCCStateResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ISystemToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ISystemToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ISystemToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ISystemToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getHighestRunlevel">
      <wsdl:documentation>Gets the highest run level of the cluster.  See the definition of the run level constants for details of how to
interpret this value.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="getHighestRunlevelRequest" message="impl:ISystemToolsAPI-getHighestRunlevelRequest"/>
      <wsdl:output name="getHighestRunlevelResponse" message="impl:ISystemToolsAPI-getHighestRunlevelResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ISystemToolsAPI-ServerStateException"/>
      <wsdl:fault name="PermissionException" message="impl:ISystemToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ISystemToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getLoggingCategories">
      <wsdl:documentation>Get a list of all of the logger categories available in the system. These can be used
directly in logging.properties.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="getLoggingCategoriesRequest" message="impl:ISystemToolsAPI-getLoggingCategoriesRequest"/>
      <wsdl:output name="getLoggingCategoriesResponse" message="impl:ISystemToolsAPI-getLoggingCategoriesResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ISystemToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPServerException" message="impl:ISystemToolsAPI-SOAPServerException"/>
      <wsdl:fault name="PermissionException" message="impl:ISystemToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ISystemToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getRecentAWRSnapshotInfo" parameterOrder="numSnapshots">
      <wsdl:documentation>Retrieve the latest N Oracle AWR snapshots.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="getRecentAWRSnapshotInfoRequest" message="impl:ISystemToolsAPI-getRecentAWRSnapshotInfoRequest"/>
      <wsdl:output name="getRecentAWRSnapshotInfoResponse" message="impl:ISystemToolsAPI-getRecentAWRSnapshotInfoResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ISystemToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ISystemToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ISystemToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ISystemToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getRunlevel">
      <wsdl:documentation>Gets the run level of the server.  See the definition of the run level constants for details of how to interpret
this value.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="getRunlevelRequest" message="impl:ISystemToolsAPI-getRunlevelRequest"/>
      <wsdl:output name="getRunlevelResponse" message="impl:ISystemToolsAPI-getRunlevelResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ISystemToolsAPI-ServerStateException"/>
      <wsdl:fault name="PermissionException" message="impl:ISystemToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ISystemToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getUpdateStatsState">
      <wsdl:documentation>Checks whether the update stats process is currently running. Only one set of update stats statements can be
Returns the state of the update stats process. Only one update stats process can be running at
any given moment.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="getUpdateStatsStateRequest" message="impl:ISystemToolsAPI-getUpdateStatsStateRequest"/>
      <wsdl:output name="getUpdateStatsStateResponse" message="impl:ISystemToolsAPI-getUpdateStatsStateResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ISystemToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ISystemToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ISystemToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ISystemToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getVersion">
      <wsdl:documentation>Get the version of the server, including application version and schema version.
The application version is in the format: &lt;tt&gt;[major].[minor].[build]&lt;/tt&gt;.
The scheme version is in the format: &lt;tt&gt;[base].[vertical]&lt;/tt&gt;.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="getVersionRequest" message="impl:ISystemToolsAPI-getVersionRequest"/>
      <wsdl:output name="getVersionResponse" message="impl:ISystemToolsAPI-getVersionResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ISystemToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ISystemToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ISystemToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ISystemToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="recalculateFileChecksums">
      <wsdl:documentation>Recalculates the file checksums used for clustered configuration verification.  Returns true
if checksums were recalcuted and false if clustering or configuration verification were disabled.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="recalculateFileChecksumsRequest" message="impl:ISystemToolsAPI-recalculateFileChecksumsRequest"/>
      <wsdl:output name="recalculateFileChecksumsResponse" message="impl:ISystemToolsAPI-recalculateFileChecksumsResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ISystemToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPServerException" message="impl:ISystemToolsAPI-SOAPServerException"/>
      <wsdl:fault name="PermissionException" message="impl:ISystemToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ISystemToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="reloadLoggingConfig">
      <wsdl:documentation>Causes a reload of the logging.properties.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="reloadLoggingConfigRequest" message="impl:ISystemToolsAPI-reloadLoggingConfigRequest"/>
      <wsdl:output name="reloadLoggingConfigResponse" message="impl:ISystemToolsAPI-reloadLoggingConfigResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ISystemToolsAPI-ServerStateException"/>
      <wsdl:fault name="PermissionException" message="impl:ISystemToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ISystemToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="reportDatabaseCatalogStatistics">
      <wsdl:documentation>Creates a report of the state of the database catalog statistics for all tables.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="reportDatabaseCatalogStatisticsRequest" message="impl:ISystemToolsAPI-reportDatabaseCatalogStatisticsRequest"/>
      <wsdl:output name="reportDatabaseCatalogStatisticsResponse" message="impl:ISystemToolsAPI-reportDatabaseCatalogStatisticsResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ISystemToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ISystemToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ISystemToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ISystemToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="reportPartialDatabaseCatalogStatistics" parameterOrder="tables stagingTables typelistTables">
      <wsdl:documentation>Creates a report of the state of the database catalog statistics for all tables.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="reportPartialDatabaseCatalogStatisticsRequest" message="impl:ISystemToolsAPI-reportPartialDatabaseCatalogStatisticsRequest"/>
      <wsdl:output name="reportPartialDatabaseCatalogStatisticsResponse" message="impl:ISystemToolsAPI-reportPartialDatabaseCatalogStatisticsResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ISystemToolsAPI-ServerStateException"/>
      <wsdl:fault name="PermissionException" message="impl:ISystemToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ISystemToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="setRunlevel" parameterOrder="runLevel">
      <wsdl:documentation>Sets the run level of the server. If the server is currently undergoing a runlevel change, this method will block
until that level change has completed.
&lt;p/&gt;
The valid run levels that the server can be set to through this method are &lt;code&gt;SystemRunlevel.GW_DB_MAINTENANCE&lt;/code&gt;,
&lt;code&gt;SystemRunlevel.GW_MAINTENANCE&lt;/code&gt;, and &lt;code&gt;SystemRunlevel.GW_MULTIUSER&lt;/code&gt;.  See the definitions of those constants
for more information.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="setRunlevelRequest" message="impl:ISystemToolsAPI-setRunlevelRequest"/>
      <wsdl:output name="setRunlevelResponse" message="impl:ISystemToolsAPI-setRunlevelResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ISystemToolsAPI-ServerStateException"/>
      <wsdl:fault name="PermissionException" message="impl:ISystemToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ISystemToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="submitAwrReportBatchJob" parameterOrder="awrReportUserSettings">
      <wsdl:documentation>Submit the Oracle AWR Performance Report batch job
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="submitAwrReportBatchJobRequest" message="impl:ISystemToolsAPI-submitAwrReportBatchJobRequest"/>
      <wsdl:output name="submitAwrReportBatchJobResponse" message="impl:ISystemToolsAPI-submitAwrReportBatchJobResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ISystemToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ISystemToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ISystemToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ISystemToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="submitDBCCBatchJob" parameterOrder="tablesToCheck consistencyCheckTypesToCheck">
      <wsdl:documentation>Submit the consistency checks batch job on the underlying physical database.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="submitDBCCBatchJobRequest" message="impl:ISystemToolsAPI-submitDBCCBatchJobRequest"/>
      <wsdl:output name="submitDBCCBatchJobResponse" message="impl:ISystemToolsAPI-submitDBCCBatchJobResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ISystemToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ISystemToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ISystemToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ISystemToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="submitDmvReportBatchJob">
      <wsdl:documentation>Submit the SQL Server DMV Performance Report batch job using defaults values for
includeDatabaseStatistics (true)
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="submitDmvReportBatchJobRequest" message="impl:ISystemToolsAPI-submitDmvReportBatchJobRequest"/>
      <wsdl:output name="submitDmvReportBatchJobResponse" message="impl:ISystemToolsAPI-submitDmvReportBatchJobResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ISystemToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ISystemToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ISystemToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ISystemToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="submitDmvReportBatchJobWithParams" parameterOrder="includeDatabaseStatistics">
      <wsdl:documentation>Submit the SQL Server DMV Performance Report batch job with parameters.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="submitDmvReportBatchJobWithParamsRequest" message="impl:ISystemToolsAPI-submitDmvReportBatchJobWithParamsRequest"/>
      <wsdl:output name="submitDmvReportBatchJobWithParamsResponse" message="impl:ISystemToolsAPI-submitDmvReportBatchJobWithParamsResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ISystemToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ISystemToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ISystemToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ISystemToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="submitUpdateStats" parameterOrder="description incremental">
      <wsdl:documentation>Run the update stats process on the underlying physical database. Please use isUpdateStatsRunning() to check on
the state of the run.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="submitUpdateStatsRequest" message="impl:ISystemToolsAPI-submitUpdateStatsRequest"/>
      <wsdl:output name="submitUpdateStatsResponse" message="impl:ISystemToolsAPI-submitUpdateStatsResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ISystemToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ISystemToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ISystemToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ISystemToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="updateLoggingLevel" parameterOrder="logger level">
      <wsdl:documentation>Dynamically updates the logging level of the given logger.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="updateLoggingLevelRequest" message="impl:ISystemToolsAPI-updateLoggingLevelRequest"/>
      <wsdl:output name="updateLoggingLevelResponse" message="impl:ISystemToolsAPI-updateLoggingLevelResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ISystemToolsAPI-ServerStateException"/>
      <wsdl:fault name="RequiredFieldException" message="impl:ISystemToolsAPI-RequiredFieldException"/>
      <wsdl:fault name="SOAPServerException" message="impl:ISystemToolsAPI-SOAPServerException"/>
      <wsdl:fault name="PermissionException" message="impl:ISystemToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ISystemToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="verifyDatabaseSchema">
      <wsdl:documentation>Verify that the data mode matches the physical database
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="verifyDatabaseSchemaRequest" message="impl:ISystemToolsAPI-verifyDatabaseSchemaRequest"/>
      <wsdl:output name="verifyDatabaseSchemaResponse" message="impl:ISystemToolsAPI-verifyDatabaseSchemaResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ISystemToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPServerException" message="impl:ISystemToolsAPI-SOAPServerException"/>
      <wsdl:fault name="PermissionException" message="impl:ISystemToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ISystemToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="ITableImportAPI" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>This interface provides methods for integrity checking and loading data via
the  staging tables.
&lt;p/&gt;
In particular, it allows the caller to instruct the server
to perform the following staging table operations:
&lt;ol&gt;
&lt;li&gt;Clear error table.&lt;/li&gt;
&lt;li&gt;Clear exclusion table.&lt;/li&gt;
&lt;li&gt;Clear staging tables.&lt;/li&gt;
&lt;li&gt;Delete rows from staging tables based on contents of exclusion table.&lt;/li&gt;
&lt;li&gt;Populate exclusion table with rows to be excluded.&lt;/li&gt;
&lt;li&gt;Integrity check the contents of the staging tables.&lt;/li&gt;
&lt;li&gt;Integrity check the contents of the Zone staging tables and load Zone source tables if no errors.&lt;/li&gt;
&lt;li&gt;Integrity check the contents of the staging tables and load source tables if no errors.&lt;/li&gt;
&lt;/ol&gt;
@deprecated Use WS-I webservice gw.wsi.pl.TableImportAPI instead.
</wsdl:documentation>
    <wsdl:operation name="clearErrorTable">
      <wsdl:documentation>Instructs the server to clear the error tables.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="clearErrorTableRequest" message="impl:ITableImportAPI-clearErrorTableRequest"/>
      <wsdl:output name="clearErrorTableResponse" message="impl:ITableImportAPI-clearErrorTableResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ITableImportAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ITableImportAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ITableImportAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ITableImportAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="clearExclusionTable">
      <wsdl:documentation>Instructs the  server to clear the exclusion table.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="clearExclusionTableRequest" message="impl:ITableImportAPI-clearExclusionTableRequest"/>
      <wsdl:output name="clearExclusionTableResponse" message="impl:ITableImportAPI-clearExclusionTableResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ITableImportAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ITableImportAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ITableImportAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ITableImportAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="clearStagingTables">
      <wsdl:documentation>Instructs the server to clear all staging tables.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="clearStagingTablesRequest" message="impl:ITableImportAPI-clearStagingTablesRequest"/>
      <wsdl:output name="clearStagingTablesResponse" message="impl:ITableImportAPI-clearStagingTablesResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ITableImportAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ITableImportAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ITableImportAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ITableImportAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="deleteExcludedRowsFromStagingTables">
      <wsdl:documentation>Instructs the server to delete rows from staging tables
based on the contents of the exclusion table (delete all rows in all
staging tables where the LUWID matches a LUWID in the exclusion table.)
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="deleteExcludedRowsFromStagingTablesRequest" message="impl:ITableImportAPI-deleteExcludedRowsFromStagingTablesRequest"/>
      <wsdl:output name="deleteExcludedRowsFromStagingTablesResponse" message="impl:ITableImportAPI-deleteExcludedRowsFromStagingTablesResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ITableImportAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ITableImportAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ITableImportAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ITableImportAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="deleteExcludedRowsFromStagingTablesAsBatchProcess">
      <wsdl:documentation>Instructs the server to delete rows from staging tables
based on the contents of the exclusion table (delete all rows in all
staging tables where the LUWID matches a LUWID in the exclusion table.)
&lt;p/&gt;
The same as deleteExcludedRowsFromStagingTables except that the operation
is done asynchronously in a batch process.  Note that this batch process
can't be terminated.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="deleteExcludedRowsFromStagingTablesAsBatchProcessRequest" message="impl:ITableImportAPI-deleteExcludedRowsFromStagingTablesAsBatchProcessRequest"/>
      <wsdl:output name="deleteExcludedRowsFromStagingTablesAsBatchProcessResponse" message="impl:ITableImportAPI-deleteExcludedRowsFromStagingTablesAsBatchProcessResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ITableImportAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ITableImportAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ITableImportAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ITableImportAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="encryptDataOnStagingTables">
      <wsdl:documentation>Encrypt columns configured to be encrypted in the staging tables
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="encryptDataOnStagingTablesRequest" message="impl:ITableImportAPI-encryptDataOnStagingTablesRequest"/>
      <wsdl:output name="encryptDataOnStagingTablesResponse" message="impl:ITableImportAPI-encryptDataOnStagingTablesResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ITableImportAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ITableImportAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ITableImportAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ITableImportAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="integrityCheckStagingTableContents" parameterOrder="clearErrorTable populateExclusionTable allowRefsToExistingNonAdminRows">
      <wsdl:documentation>Instructs the  server to check the integrity of the contents of the staging
tables, inserting details about any failures into the load error tables.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="integrityCheckStagingTableContentsRequest" message="impl:ITableImportAPI-integrityCheckStagingTableContentsRequest"/>
      <wsdl:output name="integrityCheckStagingTableContentsResponse" message="impl:ITableImportAPI-integrityCheckStagingTableContentsResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ITableImportAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ITableImportAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ITableImportAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ITableImportAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="integrityCheckStagingTableContentsAndLoadSourceTables" parameterOrder="clearErrorTable populateExclusionTable updateDBStatisticsWithEstimates allowRefsToExistingNonAdminRows">
      <wsdl:documentation>Instructs the server to check the integrity of the contents of the staging
tables, inserting details about any failures into the error tables. If no integrity check
errors are detected, the server will load the source tables (the main application
tables) with the contents of the staging tables.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="integrityCheckStagingTableContentsAndLoadSourceTablesRequest" message="impl:ITableImportAPI-integrityCheckStagingTableContentsAndLoadSourceTablesRequest"/>
      <wsdl:output name="integrityCheckStagingTableContentsAndLoadSourceTablesResponse" message="impl:ITableImportAPI-integrityCheckStagingTableContentsAndLoadSourceTablesResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ITableImportAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ITableImportAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ITableImportAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ITableImportAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="integrityCheckStagingTableContentsAndLoadSourceTablesAsBatchProcess" parameterOrder="clearErrorTable populateExclusionTable updateDBStatisticsWithEstimates allowRefsToExistingNonAdminRows">
      <wsdl:documentation>Instructs the server to check the integrity of the contents of the staging
tables, inserting details about any failures into the load error tables. If no integrity check
errors are detected, the server will load the source tables (the main application
tables) with the contents of the staging tables.  This method does the load asynchronously
via the batch process mechanism, and the process ID that is returned can be used to query
the status of the load and find out if it succeeded or failed (or is still running).  After
completion, the process status will indicate whether or not the load succeeded, and the
failedOps field will contain the number of validation errors that occurred (if any).  Note that this batch process
can't be terminated.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="integrityCheckStagingTableContentsAndLoadSourceTablesAsBatchProcessRequest" message="impl:ITableImportAPI-integrityCheckStagingTableContentsAndLoadSourceTablesAsBatchProcessRequest"/>
      <wsdl:output name="integrityCheckStagingTableContentsAndLoadSourceTablesAsBatchProcessResponse" message="impl:ITableImportAPI-integrityCheckStagingTableContentsAndLoadSourceTablesAsBatchProcessResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ITableImportAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ITableImportAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ITableImportAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ITableImportAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="integrityCheckStagingTableContentsAsBatchProcess" parameterOrder="clearErrorTable populateExclusionTable allowRefsToExistingNonAdminRows">
      <wsdl:documentation>Instructs the  server to check the integrity of the contents of the staging
tables, inserting details about any failures into the load error tables.  Works like
integrityCheckStagingTableContents, but does so in a batch process. After
completion, the process status will indicate whether or not the load succeeded, and the
failedOps field will contain the number of integrity check errors that occurred (if any).  Note that this batch process
can't be terminated.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="integrityCheckStagingTableContentsAsBatchProcessRequest" message="impl:ITableImportAPI-integrityCheckStagingTableContentsAsBatchProcessRequest"/>
      <wsdl:output name="integrityCheckStagingTableContentsAsBatchProcessResponse" message="impl:ITableImportAPI-integrityCheckStagingTableContentsAsBatchProcessResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ITableImportAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ITableImportAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ITableImportAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ITableImportAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="integrityCheckZoneStagingTableContentsAndLoadZoneSourceTables" parameterOrder="clearErrorTable populateExclusionTable updateDBStatisticsWithEstimates">
      <wsdl:documentation>Instructs the server to check the integrity of the contents of the Zone staging
tables, inserting details about any failures into the error tables. If no integrity check
errors are detected, the server will load the Zone source tables (the Zone main application
tables) with the contents of the staging tables.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="integrityCheckZoneStagingTableContentsAndLoadZoneSourceTablesRequest" message="impl:ITableImportAPI-integrityCheckZoneStagingTableContentsAndLoadZoneSourceTablesRequest"/>
      <wsdl:output name="integrityCheckZoneStagingTableContentsAndLoadZoneSourceTablesResponse" message="impl:ITableImportAPI-integrityCheckZoneStagingTableContentsAndLoadZoneSourceTablesResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ITableImportAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ITableImportAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ITableImportAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ITableImportAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="populateExclusionTable">
      <wsdl:documentation>Instructs the server to populate the exclusion table
with rows to be excluded (add rows to the exclusion table for every
unique LUWID in the load error tables that is not already in the exclusion table).
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="populateExclusionTableRequest" message="impl:ITableImportAPI-populateExclusionTableRequest"/>
      <wsdl:output name="populateExclusionTableResponse" message="impl:ITableImportAPI-populateExclusionTableResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ITableImportAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ITableImportAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ITableImportAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ITableImportAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="populateExclusionTableAsBatchProcess">
      <wsdl:documentation>Instructs the  server to populate the exclusion table
with rows to be excluded (add rows to the exclusion table for every
unique LUWID in the error tables that is not already in the exclusion table).
&lt;p/&gt;
The same as deleteExcludedRowsFromStagingTables except that the operation
is done asynchronously in a batch process. Note that this batch process
can't be terminated.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="populateExclusionTableAsBatchProcessRequest" message="impl:ITableImportAPI-populateExclusionTableAsBatchProcessRequest"/>
      <wsdl:output name="populateExclusionTableAsBatchProcessResponse" message="impl:ITableImportAPI-populateExclusionTableAsBatchProcessResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ITableImportAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ITableImportAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ITableImportAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ITableImportAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="updateStatisticsOnStagingTables">
      <wsdl:documentation>Instructs the  server to update the database statistics on the staging tables.
(Database statistics will not be updated on the other tables.)
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="updateStatisticsOnStagingTablesRequest" message="impl:ITableImportAPI-updateStatisticsOnStagingTablesRequest"/>
      <wsdl:output name="updateStatisticsOnStagingTablesResponse" message="impl:ITableImportAPI-updateStatisticsOnStagingTablesResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ITableImportAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ITableImportAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ITableImportAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ITableImportAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="updateStatisticsOnStagingTablesAsBatchProcess">
      <wsdl:documentation>Instructs the  server to update the database statistics on the staging tables.
(Database statistics will not be updated on the other tables.)  The same as updateStatisticsOnStagingTables
except that the process will be performed asynchronously in a batch process.  After completion,
the process status will contain the number of tables that were updated in the opsCompleted field.
Note that this batch process can't be terminated.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="updateStatisticsOnStagingTablesAsBatchProcessRequest" message="impl:ITableImportAPI-updateStatisticsOnStagingTablesAsBatchProcessRequest"/>
      <wsdl:output name="updateStatisticsOnStagingTablesAsBatchProcessResponse" message="impl:ITableImportAPI-updateStatisticsOnStagingTablesAsBatchProcessResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ITableImportAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ITableImportAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ITableImportAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ITableImportAPI-BadIdentifierException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="ITypelistToolsAPI" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>ITypelistToolsAPI provides methods that allow for the extraction of typelist data from the
system.
@deprecated Use WS-I webservice gw.wsi.pl.TypelistToolsAPI instead.
</wsdl:documentation>
    <wsdl:operation name="getAliasByInternalCode" parameterOrder="typelist namespace code">
      <wsdl:documentation>For use during exports, returns a string corresponding to an alias to an internal typecode given a typelist, a
namespace, and an internal code.  If no match is found, returns null.  If more than one match is found, throws a
SOAPException.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="getAliasByInternalCodeRequest" message="impl:ITypelistToolsAPI-getAliasByInternalCodeRequest"/>
      <wsdl:output name="getAliasByInternalCodeResponse" message="impl:ITypelistToolsAPI-getAliasByInternalCodeResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ITypelistToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ITypelistToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ITypelistToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ITypelistToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getAliasesByInternalCode" parameterOrder="typelist namespace code">
      <wsdl:documentation>For use during exports, returns an array of strings representing external aliases to internal typecodes given
a typelist, a namespace, and an internal code.  If no aliases are found, then a zero-length, non-null array is
returned.  A namespace generally corresponds to an external integration source, but multiple namespaces per source
are allowed. NOTE: this method allows multiple aliases to correspond to the same namespace-typecode tuple.  If you
require a namespace-typecode to resolve to a single alias, please use getAliasByInternalCode.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="getAliasesByInternalCodeRequest" message="impl:ITypelistToolsAPI-getAliasesByInternalCodeRequest"/>
      <wsdl:output name="getAliasesByInternalCodeResponse" message="impl:ITypelistToolsAPI-getAliasesByInternalCodeResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ITypelistToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ITypelistToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ITypelistToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ITypelistToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getTypeKeyByAlias" parameterOrder="typelist namespace alias">
      <wsdl:documentation>For use during imports, returns a TypeKeyData instance corresponding to a typecode in the given typelist that
matches the given namespace/alias.  If no match is found, returns null.  If more than one match is found, throws a
SOAPException.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="getTypeKeyByAliasRequest" message="impl:ITypelistToolsAPI-getTypeKeyByAliasRequest"/>
      <wsdl:output name="getTypeKeyByAliasResponse" message="impl:ITypelistToolsAPI-getTypeKeyByAliasResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ITypelistToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ITypelistToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ITypelistToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ITypelistToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getTypeKeysByAlias" parameterOrder="typelist namespace alias">
      <wsdl:documentation>For use during imports, returns an array of TypeKeyData objects given a typelist, a namespace, and an
alias.  If no typecodes are found, will return a zero-length, non-null array.  A namespace generally corresponds
to an external integration source, but multiple namespaces per source are allowed.  NOTE: this method allows
multiple typecodes to use the same namespace-alias tuple.  If you require a namespace-alias to resolve to a
single typecode, please use getTypeKeyByAlias.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="getTypeKeysByAliasRequest" message="impl:ITypelistToolsAPI-getTypeKeysByAliasRequest"/>
      <wsdl:output name="getTypeKeysByAliasResponse" message="impl:ITypelistToolsAPI-getTypeKeysByAliasResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ITypelistToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ITypelistToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ITypelistToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ITypelistToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getTypelistValues" parameterOrder="typelistName">
      <wsdl:documentation>Given the name of a typelist, returns an array of all the typekey instances contained within.  An exception is
thrown if no typelist exists with the given name.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="getTypelistValuesRequest" message="impl:ITypelistToolsAPI-getTypelistValuesRequest"/>
      <wsdl:output name="getTypelistValuesResponse" message="impl:ITypelistToolsAPI-getTypelistValuesResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ITypelistToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ITypelistToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ITypelistToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ITypelistToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="IUserAPI" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>UserAPI is used to perform operations on users.  This includes creating and modifying.
@deprecated Write your own Gosu class and publish it as a web service.
</wsdl:documentation>
    <wsdl:operation name="addRolesToUser" parameterOrder="userID roleIDs">
      <wsdl:documentation>Adds roles to an User.
If an role is already belongs to the user, it's ignored.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="addRolesToUserRequest" message="impl:IUserAPI-addRolesToUserRequest"/>
      <wsdl:output name="addRolesToUserResponse" message="impl:IUserAPI-addRolesToUserResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IUserAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IUserAPI-DataConversionException"/>
      <wsdl:fault name="SOAPException" message="impl:IUserAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IUserAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IUserAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="addUser" parameterOrder="userData rolePublicIds">
      <wsdl:documentation>Adds the given user to the system. Only the contact field and credential properties are required.
The user will be created and given the roles specified by the &lt;code&gt;roles&lt;/code&gt; parameter.
&lt;p&gt;
The Contact field should be set to an object of type UserContact, which should have at least its last
name set. The Credential field should be set to an object of type Credential which should have the
user name and password fields set. For example:
&lt;pre&gt;
User user = new User()
UserContact userContact = new UserContact()
userContact.FirstName = "John"
userContact.LastName = "Smith"
user.Contact = userContact
Credential credential = new Credential()
credential.UserName  = "jsmith"
credential.Password = "initialPassword"
user.Credential = credential
userAPI.addUser(user, new String[]{"rolex", "roley"})
&lt;/pre&gt;
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="addUserRequest" message="impl:IUserAPI-addUserRequest"/>
      <wsdl:output name="addUserResponse" message="impl:IUserAPI-addUserResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IUserAPI-ServerStateException"/>
      <wsdl:fault name="RequiredFieldException" message="impl:IUserAPI-RequiredFieldException"/>
      <wsdl:fault name="DataConversionException" message="impl:IUserAPI-DataConversionException"/>
      <wsdl:fault name="PermissionException" message="impl:IUserAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IUserAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="addUser" parameterOrder="data rolePublicIds credentialName">
      <wsdl:documentation>Adds the given user to the system. This method is included for backwards compatibility but
all new code should use the form of addUser that does &lt;em&gt;not&lt;/em&gt; take a credentialName parameter.
&lt;br&gt;@deprecated use the version of addUser with no credentialName parameter instead
@scriptable-all</wsdl:documentation>
      <wsdl:input name="addUserRequest1" message="impl:IUserAPI-addUserRequest1"/>
      <wsdl:output name="addUserResponse1" message="impl:IUserAPI-addUserResponse1"/>
      <wsdl:fault name="ServerStateException" message="impl:IUserAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IUserAPI-DataConversionException"/>
      <wsdl:fault name="PermissionException" message="impl:IUserAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IUserAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="addUserAsMemberOfGroup" parameterOrder="groupID userID">
      <wsdl:documentation>Adds the user as a member of the group.  Both the user and group must already exist.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="addUserAsMemberOfGroupRequest" message="impl:IUserAPI-addUserAsMemberOfGroupRequest"/>
      <wsdl:output name="addUserAsMemberOfGroupResponse" message="impl:IUserAPI-addUserAsMemberOfGroupResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IUserAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IUserAPI-DataConversionException"/>
      <wsdl:fault name="PermissionException" message="impl:IUserAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IUserAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="addUserAttributes" parameterOrder="userID attributeIDs">
      <wsdl:documentation>Adds attributes to an User.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="addUserAttributesRequest" message="impl:IUserAPI-addUserAttributesRequest"/>
      <wsdl:output name="addUserAttributesResponse" message="impl:IUserAPI-addUserAttributesResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IUserAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IUserAPI-DataConversionException"/>
      <wsdl:fault name="SOAPException" message="impl:IUserAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IUserAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IUserAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="doesExist" parameterOrder="publicId">
      <wsdl:documentation>Indicates whether the given user exists in the system.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="doesExistRequest" message="impl:IUserAPI-doesExistRequest"/>
      <wsdl:output name="doesExistResponse" message="impl:IUserAPI-doesExistResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IUserAPI-ServerStateException"/>
      <wsdl:fault name="PermissionException" message="impl:IUserAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IUserAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="findPublicIdByName" parameterOrder="userName">
      <wsdl:documentation>Finds the public id of a user by the user login name.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="findPublicIdByNameRequest" message="impl:IUserAPI-findPublicIdByNameRequest"/>
      <wsdl:output name="findPublicIdByNameResponse" message="impl:IUserAPI-findPublicIdByNameResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IUserAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IUserAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IUserAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IUserAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getUser" parameterOrder="userID">
      <wsdl:documentation>Retrieves a user given the user identifier
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="getUserRequest" message="impl:IUserAPI-getUserRequest"/>
      <wsdl:output name="getUserResponse" message="impl:IUserAPI-getUserResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IUserAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IUserAPI-DataConversionException"/>
      <wsdl:fault name="SOAPException" message="impl:IUserAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IUserAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IUserAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="isUserMemberOfGroup" parameterOrder="groupID userID">
      <wsdl:documentation>Returns &lt;code&gt;true&lt;/code&gt; if the user is a member of the group specified, &lt;code&gt;false&lt;/code&gt; if not.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="isUserMemberOfGroupRequest" message="impl:IUserAPI-isUserMemberOfGroupRequest"/>
      <wsdl:output name="isUserMemberOfGroupResponse" message="impl:IUserAPI-isUserMemberOfGroupResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IUserAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IUserAPI-DataConversionException"/>
      <wsdl:fault name="PermissionException" message="impl:IUserAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IUserAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="removeRolesFromUser" parameterOrder="userID roleIDs">
      <wsdl:documentation>Remove roles from a User.
If any of the roles does not belongs to the user, it will be ignored.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="removeRolesFromUserRequest" message="impl:IUserAPI-removeRolesFromUserRequest"/>
      <wsdl:output name="removeRolesFromUserResponse" message="impl:IUserAPI-removeRolesFromUserResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IUserAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IUserAPI-DataConversionException"/>
      <wsdl:fault name="SOAPException" message="impl:IUserAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IUserAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IUserAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="removeUserAsMemberOfGroup" parameterOrder="groupID userID">
      <wsdl:documentation>Removes the user as a member of the group.  Both the user and group must
already exist.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="removeUserAsMemberOfGroupRequest" message="impl:IUserAPI-removeUserAsMemberOfGroupRequest"/>
      <wsdl:output name="removeUserAsMemberOfGroupResponse" message="impl:IUserAPI-removeUserAsMemberOfGroupResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IUserAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IUserAPI-DataConversionException"/>
      <wsdl:fault name="PermissionException" message="impl:IUserAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IUserAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="removeUserAttributes" parameterOrder="userID attributeIDs">
      <wsdl:documentation>Remove attributes to an User.
If an attribute does not belongs to the user, it's ignored.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="removeUserAttributesRequest" message="impl:IUserAPI-removeUserAttributesRequest"/>
      <wsdl:output name="removeUserAttributesResponse" message="impl:IUserAPI-removeUserAttributesResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IUserAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IUserAPI-DataConversionException"/>
      <wsdl:fault name="SOAPException" message="impl:IUserAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IUserAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IUserAPI-BadIdentifierException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="IWorkflowAPI" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>External API for performing operations on workflows.
@deprecated Use WS-I webservice gw.wsi.pl.WorkflowAPI instead.
</wsdl:documentation>
    <wsdl:operation name="complete" parameterOrder="workflowID">
      <wsdl:documentation>Sets the state of the workflow with public ID &lt;code&gt;workflowID&lt;/code&gt;
to WorkflowState#TC_COMPLETED.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="completeRequest" message="impl:IWorkflowAPI-completeRequest"/>
      <wsdl:output name="completeResponse" message="impl:IWorkflowAPI-completeResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IWorkflowAPI-ServerStateException"/>
      <wsdl:fault name="RequiredFieldException" message="impl:IWorkflowAPI-RequiredFieldException"/>
      <wsdl:fault name="SOAPException" message="impl:IWorkflowAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IWorkflowAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IWorkflowAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="invokeTrigger" parameterOrder="workflowID triggerKey">
      <wsdl:documentation>Invokes the triggerKey on the current step of the specified workflow causing
the workflow to advance to the next step.
If a null or invalid workflow ID is passed in, an exception will be thrown.  In
addition, if the triggerkey is null or the trigger is not available, an
exception will be thrown.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="invokeTriggerRequest" message="impl:IWorkflowAPI-invokeTriggerRequest"/>
      <wsdl:output name="invokeTriggerResponse" message="impl:IWorkflowAPI-invokeTriggerResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IWorkflowAPI-ServerStateException"/>
      <wsdl:fault name="RequiredFieldException" message="impl:IWorkflowAPI-RequiredFieldException"/>
      <wsdl:fault name="SOAPException" message="impl:IWorkflowAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IWorkflowAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IWorkflowAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="isTriggerAvailable" parameterOrder="workflowID triggerKey">
      <wsdl:documentation>True if the given trigger is available in the Workflow; i.e. if it is OK to pass the
trigger ID to the invokeTrigger method.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="isTriggerAvailableRequest" message="impl:IWorkflowAPI-isTriggerAvailableRequest"/>
      <wsdl:output name="isTriggerAvailableResponse" message="impl:IWorkflowAPI-isTriggerAvailableResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IWorkflowAPI-ServerStateException"/>
      <wsdl:fault name="RequiredFieldException" message="impl:IWorkflowAPI-RequiredFieldException"/>
      <wsdl:fault name="SOAPException" message="impl:IWorkflowAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IWorkflowAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IWorkflowAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="resumeAllWorkflows">
      <wsdl:documentation>Resumes all workflows in the state
WorkflowState#TC_ERROR or WorkflowState#TC_SUSPENDED.

The workflow engine will subsequently attempt to advance these workflows
to their next steps. For each one, if an error occurs again, the error
will be logged and the workflow's state set to WorkflowState#TC_ERROR.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="resumeAllWorkflowsRequest" message="impl:IWorkflowAPI-resumeAllWorkflowsRequest"/>
      <wsdl:output name="resumeAllWorkflowsResponse" message="impl:IWorkflowAPI-resumeAllWorkflowsResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IWorkflowAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IWorkflowAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IWorkflowAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IWorkflowAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="resumeWorkflow" parameterOrder="workflowID">
      <wsdl:documentation>Resumes the workflow with public ID &lt;code&gt;workflowID&lt;/code&gt;.

The workflow engine will subsequently attempt to advance the workflow
to its next step. If an error occurs again, the error
will be logged and the workflow's state set to WorkflowState#TC_ERROR.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="resumeWorkflowRequest" message="impl:IWorkflowAPI-resumeWorkflowRequest"/>
      <wsdl:output name="resumeWorkflowResponse" message="impl:IWorkflowAPI-resumeWorkflowResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IWorkflowAPI-ServerStateException"/>
      <wsdl:fault name="RequiredFieldException" message="impl:IWorkflowAPI-RequiredFieldException"/>
      <wsdl:fault name="EntityStateException" message="impl:IWorkflowAPI-EntityStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IWorkflowAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IWorkflowAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IWorkflowAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="suspend" parameterOrder="workflowID">
      <wsdl:documentation>Suspends the workflow with public ID &lt;code&gt;workflowID&lt;/code&gt;.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="suspendRequest" message="impl:IWorkflowAPI-suspendRequest"/>
      <wsdl:output name="suspendResponse" message="impl:IWorkflowAPI-suspendResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IWorkflowAPI-ServerStateException"/>
      <wsdl:fault name="RequiredFieldException" message="impl:IWorkflowAPI-RequiredFieldException"/>
      <wsdl:fault name="SOAPException" message="impl:IWorkflowAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IWorkflowAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IWorkflowAPI-BadIdentifierException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="IZoneImportAPI" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>IZoneImportAPI is a remote interface to a set of tools to import zone data (in csv format)
into the staging tables.  See documentation for the zone data csv format.
@deprecated Use WS-I webservice gw.wsi.pl.ZoneImportAPI.
</wsdl:documentation>
    <wsdl:operation name="clearProductionTables" parameterOrder="countryCode">
      <wsdl:documentation>Clears the production tables that contain zone data in preparation for
zone data to be imported from the staging tables via the Table Import Tools.
This should be called after the staging tables have gone through an integrity check
and any offending rows are excluded/corrected.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="clearProductionTablesRequest" message="impl:IZoneImportAPI-clearProductionTablesRequest"/>
      <wsdl:output name="clearProductionTablesResponse" message="impl:IZoneImportAPI-clearProductionTablesResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IZoneImportAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IZoneImportAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IZoneImportAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IZoneImportAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="clearStagingTables" parameterOrder="countryCode">
      <wsdl:documentation>Clears the staging tables tables that contain zone data in preparation for
zone data to be imported to the staging tables.  If countryCode is specified
and is a valid value, only rows for that country are cleared.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="clearStagingTablesRequest" message="impl:IZoneImportAPI-clearStagingTablesRequest"/>
      <wsdl:output name="clearStagingTablesResponse" message="impl:IZoneImportAPI-clearStagingTablesResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IZoneImportAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IZoneImportAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IZoneImportAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IZoneImportAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="importToStaging" parameterOrder="countryCode zoneData clearStaging">
      <wsdl:documentation>Import csv formatted data containg zone information.  See the documentation
for details of the expected csv format.
This gives you the option of clearing out the staging tables before loading the data.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="importToStagingRequest" message="impl:IZoneImportAPI-importToStagingRequest"/>
      <wsdl:output name="importToStagingResponse" message="impl:IZoneImportAPI-importToStagingResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IZoneImportAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IZoneImportAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IZoneImportAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IZoneImportAPI-BadIdentifierException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="InvoiceAPI" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>
@deprecated (Since 8.0.1) Use gw.webservice.policycenter.bc801.BillingAPI instead.
</wsdl:documentation>
    <wsdl:operation name="previewInstallmentSchedule" parameterOrder="newPolicyPeriod charges accountBillingPlan invoiceDayOfMonth">
      <wsdl:documentation>Generates a preview of the installment schedule that'd be created for the given new policy.  The new policy is
encapsulated in an Issuance billing instruction, so that there is enough context to properly simulate the invoice
generation.
&lt;br&gt;@deprecated (Since 8.0.1) Use gw.webservice.policycenter.bc801.BillingAPI#previewInstallmentPlanInvoices instead.</wsdl:documentation>
      <wsdl:input name="previewInstallmentScheduleRequest" message="impl:InvoiceAPI-previewInstallmentScheduleRequest"/>
      <wsdl:output name="previewInstallmentScheduleResponse" message="impl:InvoiceAPI-previewInstallmentScheduleResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:InvoiceAPI-ServerStateException"/>
      <wsdl:fault name="PermissionException" message="impl:InvoiceAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:InvoiceAPI-BadIdentifierException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="IBillingCenterAPISoapBinding" type="impl:IBillingCenterAPI" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdlsoap:binding transport="http://schemas.xmlsoap.org/soap/http" style="rpc"/>
    <wsdl:operation name="addDocumentToAccount">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="addDocumentToAccountRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="addDocumentToAccountResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>if the document or accountID is null</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addDocumentToPolicyPeriod">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="addDocumentToPolicyPeriodRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="addDocumentToPolicyPeriodResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>if the document or policyPeriodID is null</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addDocumentToProducer">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="addDocumentToProducerRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="addDocumentToProducerResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>if the document or producerID id is null</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addNoteToAccount">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="addNoteToAccountRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="addNoteToAccountResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>if the note or account id is null</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addNoteToPolicyPeriod">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="addNoteToPolicyPeriodRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="addNoteToPolicyPeriodResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>if the note or policyperiod id is null</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addNoteToTroubleTicket">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="addNoteToTroubleTicketRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="addNoteToTroubleTicketResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>if the note or trouble ticket id is null</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>trouble ticket id is not valid</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="cancelPremiumReportDueDate">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="cancelPremiumReportDueDateRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="cancelPremiumReportDueDateResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createAccount">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="createAccountRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="createAccountResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createProducer">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="createProducerRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="createProducerResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createSharedActivity">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="createSharedActivityRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="createSharedActivityResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>if activityPatternID does not correspond to an existing activity pattern</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createTroubleTicket">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="createTroubleTicketRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="createTroubleTicketResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>if trouble ticket is null</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAccountInfo">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getAccountInfoRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getAccountInfoResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>if no account exists with given public ID</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAccountWithNumber">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getAccountWithNumberRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getAccountWithNumberResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>If the accountNumber is null.</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>If there are no Accounts with the given accountNumber.</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllActivityPatterns">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getAllActivityPatternsRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getAllActivityPatternsResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllCurrentBillingPlans">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getAllCurrentBillingPlansRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getAllCurrentBillingPlansResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllCurrentDelinquencyPlans">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getAllCurrentDelinquencyPlansRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getAllCurrentDelinquencyPlansResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllCurrentPaymentPlans">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getAllCurrentPaymentPlansRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getAllCurrentPaymentPlansResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getApplicableCommissionSubPlan">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getApplicableCommissionSubPlanRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getApplicableCommissionSubPlanResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>if the policy period already exists, or if the producerCodeID doesn't correspond to an existing producer code</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getChargePatternByCode">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getChargePatternByCodeRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getChargePatternByCodeResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getInvoiceItemsOnInvoice">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getInvoiceItemsOnInvoiceRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getInvoiceItemsOnInvoiceResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>if policyPeriodID is null or does not match an existing policyPeriodID</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getInvoiceItemsSortedByDate">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getInvoiceItemsSortedByDateRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getInvoiceItemsSortedByDateResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>if policyPeriodID is null or does not match an existing policyPeriodID</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getInvoicesSortedByDate">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getInvoicesSortedByDateRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getInvoicesSortedByDateResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>if accountID is null or does not match an existing account</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPolicyPeriodInfo">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getPolicyPeriodInfoRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getPolicyPeriodInfoResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>if no policyperiod exists with given public ID</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProducerInfo">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getProducerInfoRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getProducerInfoResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>if no producer exists with given public ID</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="loadAccount">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="loadAccountRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="loadAccountResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>if the accountID is null or does not correspond to a valid account</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>If there are no Accounts with the given Account ID.</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="loadAddress">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="loadAddressRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="loadAddressResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>if the addressID is null or does not correspond to a valid address</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>If there are no Addresses with the given Address ID.</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="loadPolicyPeriod">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="loadPolicyPeriodRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="loadPolicyPeriodResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>if the policyPeriodID is null or does not correspond to a valid policyperiod</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>If there are no Policy Periods with the given Policy Period ID.</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="loadProducer">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="loadProducerRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="loadProducerResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>if the producerID is null or does not correspond to a valid producer</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>If there are no Producers with the given Producer ID.</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="populateCommissionRateOverrides">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="populateCommissionRateOverridesRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="populateCommissionRateOverridesResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>if the policy period, policyRole, or charges variables are null</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="putHoldOnAccount">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="putHoldOnAccountRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="putHoldOnAccountResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>if holdTypes is null</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="putHoldOnAccount">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="putHoldOnAccountRequest1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="putHoldOnAccountResponse1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>if holdTypes is null</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="putHoldOnPolicyPeriod">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="putHoldOnPolicyPeriodRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="putHoldOnPolicyPeriodResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>if holdTypes is null</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="putHoldOnPolicyPeriod">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="putHoldOnPolicyPeriodRequest1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="putHoldOnPolicyPeriodResponse1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="releaseHoldOnAccount">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="releaseHoldOnAccountRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="releaseHoldOnAccountResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>if holdTypes is null</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="releaseHoldOnPolicyPeriod">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="releaseHoldOnPolicyPeriodRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="releaseHoldOnPolicyPeriodResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>if holdTypes is null</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="sendBillingInstruction">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="sendBillingInstructionRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="sendBillingInstructionResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <wsdl:documentation>if required data in BillingInstruction missing</wsdl:documentation>
        <wsdlsoap:fault name="RequiredFieldException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DuplicateKeyException">
        <wsdl:documentation>if policy already exists, and billing instruction attempts to create a duplicate</wsdl:documentation>
        <wsdlsoap:fault name="DuplicateKeyException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="sendBillingInstruction">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="sendBillingInstructionRequest1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="sendBillingInstructionResponse1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <wsdl:documentation>if required data in BillingInstruction missing</wsdl:documentation>
        <wsdlsoap:fault name="RequiredFieldException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DuplicateKeyException">
        <wsdl:documentation>if policy already exists, and billing instruction attempts to create a duplicate</wsdl:documentation>
        <wsdlsoap:fault name="DuplicateKeyException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="startDelinquency">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="startDelinquencyRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="startDelinquencyResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="triggerDelinquencyWorkflow">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="triggerDelinquencyWorkflowRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="triggerDelinquencyWorkflowResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>if workflowTrigger is null</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="EntityStateException">
        <wsdl:documentation>if entities are in a illegal state</wsdl:documentation>
        <wsdlsoap:fault name="EntityStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="ICollateralAPISoapBinding" type="impl:ICollateralAPI" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdlsoap:binding transport="http://schemas.xmlsoap.org/soap/http" style="rpc"/>
    <wsdl:operation name="createCollateralRequirement">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="createCollateralRequirementRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="createCollateralRequirementResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="IDataObjectAPISoapBinding" type="impl:IDataObjectAPI" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdlsoap:binding transport="http://schemas.xmlsoap.org/soap/http" style="rpc"/>
    <wsdl:operation name="find">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="findRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="findResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>If the entity type is invalid</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findIds">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="findIdsRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="findIdsResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>If the entity type is invalid</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getNextSequenceNumber">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getNextSequenceNumberRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getNextSequenceNumberResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getObjectById">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getObjectByIdRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getObjectByIdResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>If the entity type is invalid</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPathValues">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getPathValuesRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getPathValuesResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>If the entity type or public id is invalid</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setPathValues">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="setPathValuesRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="setPathValuesResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>If the entity type or public id is invalid</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setPathValues">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="setPathValuesRequest1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="setPathValuesResponse1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>If the entity type or public id is invalid</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="IGroupAPISoapBinding" type="impl:IGroupAPI" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdlsoap:binding transport="http://schemas.xmlsoap.org/soap/http" style="rpc"/>
    <wsdl:operation name="addGroup">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="addGroupRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="addGroupResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <wsdl:documentation>If any of the required fields are missing.</wsdl:documentation>
        <wsdlsoap:fault name="RequiredFieldException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DuplicateKeyException">
        <wsdl:documentation>If the group has a public id that exists already.</wsdl:documentation>
        <wsdlsoap:fault name="DuplicateKeyException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findPublicIdByName">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="findPublicIdByNameRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="findPublicIdByNameResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getGroup">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getGroupRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getGroupResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="IImportToolsAPISoapBinding" type="impl:IImportToolsAPI" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdlsoap:binding transport="http://schemas.xmlsoap.org/soap/http" style="rpc"/>
    <wsdl:operation name="csvToXml">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="csvToXmlRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="csvToXmlResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>If the user does not have SOAP Admin permission.</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="csvToXml">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="csvToXmlRequest1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="csvToXmlResponse1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>If the user does not have SOAP Admin permission.</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="importCsvData">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="importCsvDataRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="importCsvDataResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <wsdl:documentation>If csvData is null.</wsdl:documentation>
        <wsdlsoap:fault name="RequiredFieldException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>If the data can't be imported because it violates duplicate key constraints, contains nulls in non-nullable fields, or otherwise can't be safely inserted into the database.</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>If the user does not have SOAP Admin permission.</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="importXmlData">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="importXmlDataRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="importXmlDataResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <wsdl:documentation>If xmlData is null or empty.</wsdl:documentation>
        <wsdlsoap:fault name="RequiredFieldException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>If the data can't be imported because it violates duplicate key constraints, contains nulls in non-nullable fields, or otherwise can't be safely inserted into the database.</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>If the user does not have SOAP Admin permission.</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="importXmlDataAsByteArray">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="importXmlDataAsByteArrayRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="importXmlDataAsByteArrayResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <wsdl:documentation>If xmlData is null or empty.</wsdl:documentation>
        <wsdlsoap:fault name="RequiredFieldException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>If the data can't be imported because it violates duplicate key constraints, contains nulls in non-nullable fields, or otherwise can't be safely inserted into the database.</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>If the user does not have SOAP Admin permission.</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="rebuildRolePrivileges">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="rebuildRolePrivilegesRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="rebuildRolePrivilegesResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>If the user does not have SOAP Admin permission.</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="xmlToCsv">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="xmlToCsvRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="xmlToCsvResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>If the user does not have SOAP Admin permission.</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="ILoginAPISoapBinding" type="impl:ILoginAPI" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdlsoap:binding transport="http://schemas.xmlsoap.org/soap/http" style="rpc"/>
    <wsdl:operation name="WSSLogin">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="WSSLoginRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="WSSLoginResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="LoginException">
        <wsdl:documentation>if the user cannot be authenticated or was denied access for some reason.</wsdl:documentation>
        <wsdlsoap:fault name="LoginException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="WSSLogout">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="WSSLogoutRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="WSSLogoutResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>If the user does not have sufficient permissions</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="login">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="loginRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="loginResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="LoginException">
        <wsdl:documentation>if the user cannot be authenticated.</wsdl:documentation>
        <wsdlsoap:fault name="LoginException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="logout">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="logoutRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="logoutResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="IMaintenanceToolsAPISoapBinding" type="impl:IMaintenanceToolsAPI" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdlsoap:binding transport="http://schemas.xmlsoap.org/soap/http" style="rpc"/>
    <wsdl:operation name="batchProcessStatusByID">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="batchProcessStatusByIDRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="batchProcessStatusByIDResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPSenderException">
        <wsdlsoap:fault name="SOAPSenderException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="batchProcessStatusByName">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="batchProcessStatusByNameRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="batchProcessStatusByNameResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getValidBatchProcessNames">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getValidBatchProcessNamesRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getValidBatchProcessNamesResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdl:documentation>if there is an exception thrown during the processing</wsdl:documentation>
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getWQueueStatus">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getWQueueStatusRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getWQueueStatusResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getWorkQueueConfig">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getWorkQueueConfigRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getWorkQueueConfigResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getWorkQueueNames">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getWorkQueueNamesRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getWorkQueueNamesResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getWorkQueueStatus">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getWorkQueueStatusRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getWorkQueueStatusResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="importDefaultSampleData">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="importDefaultSampleDataRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="importDefaultSampleDataResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>If there is an issue while generating sample data.</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>If the user does not have SOAP ADMIN permissions</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="importSampleData">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="importSampleDataRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="importSampleDataResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <wsdl:documentation>If the required field dataSet is null.</wsdl:documentation>
        <wsdlsoap:fault name="RequiredFieldException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>If there is an issue while generating sample data.</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>If the user does not have SOAP ADMIN permissions</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isBatchProcessNameValid">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="isBatchProcessNameValidRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="isBatchProcessNameValidResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdl:documentation>if there is an exception thrown during the processing</wsdl:documentation>
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isPluginStarted">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="isPluginStartedRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="isPluginStartedResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>if user does not have toolspluginview</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="notifyQueueWorkers">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="notifyQueueWorkersRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="notifyQueueWorkersResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="requestTerminationOfBatchProcessByID">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="requestTerminationOfBatchProcessByIDRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="requestTerminationOfBatchProcessByIDResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPSenderException">
        <wsdlsoap:fault name="SOAPSenderException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="requestTerminationOfBatchProcessByName">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="requestTerminationOfBatchProcessByNameRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="requestTerminationOfBatchProcessByNameResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setWorkQueueConfig">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="setWorkQueueConfigRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="setWorkQueueConfigResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="startBatchProcess">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="startBatchProcessRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="startBatchProcessResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="startPlugin">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="startPluginRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="startPluginResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>if user does not have toolspluginedit</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="startWorkQueueWorkers">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="startWorkQueueWorkersRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="startWorkQueueWorkersResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="stopPlugin">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="stopPluginRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="stopPluginResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>if user does not have toolspluginedit</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="stopWorkQueueWorkers">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="stopWorkQueueWorkersRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="stopWorkQueueWorkersResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="IMessagingToolsAPISoapBinding" type="impl:IMessagingToolsAPI" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdlsoap:binding transport="http://schemas.xmlsoap.org/soap/http" style="rpc"/>
    <wsdl:operation name="acknowledgeMessage">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="acknowledgeMessageRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="acknowledgeMessageResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getMessageId">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getMessageIdRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getMessageIdResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getMessageStatisticsForSafeOrderedObject">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getMessageStatisticsForSafeOrderedObjectRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getMessageStatisticsForSafeOrderedObjectResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTotalStatistics">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getTotalStatisticsRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getTotalStatisticsResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="purgeCompletedMessages">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="purgeCompletedMessagesRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="purgeCompletedMessagesResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="resumeDestination">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="resumeDestinationRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="resumeDestinationResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="resyncAccount">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="resyncAccountRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="resyncAccountResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>If account cannot be found</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="resyncPolicyPeriod">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="resyncPolicyPeriodRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="resyncPolicyPeriodResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>If policy period cannot be found</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="resyncProducer">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="resyncProducerRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="resyncProducerResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>If producer cannot be found</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="retryMessage">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="retryMessageRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="retryMessageResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="retryRetryableErrorMessages">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="retryRetryableErrorMessagesRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="retryRetryableErrorMessagesResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="retryRetryableErrorMessages">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="retryRetryableErrorMessagesRequest1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="retryRetryableErrorMessagesResponse1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="retryRetryableErrorMessagesForCategory">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="retryRetryableErrorMessagesForCategoryRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="retryRetryableErrorMessagesForCategoryResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="skipMessage">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="skipMessageRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="skipMessageResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="suspendDestination">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="suspendDestinationRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="suspendDestinationResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="IPaymentAPISoapBinding" type="impl:IPaymentAPI" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdlsoap:binding transport="http://schemas.xmlsoap.org/soap/http" style="rpc"/>
    <wsdl:operation name="createAgencyPayment">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="createAgencyPaymentRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="createAgencyPaymentResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAccountWithNumber">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getAccountWithNumberRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getAccountWithNumberResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>If the accountNumber is null.</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>If there are no Accounts with the given accountNumber.</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProducerUnapplied">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getProducerUnappliedRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getProducerUnappliedResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="loadAccount">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="loadAccountRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="loadAccountResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>if the accountID is null or does not correspond to a valid account</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>If there are no Accounts with the given Account ID.</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="loadAddress">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="loadAddressRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="loadAddressResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>if the addressID is null or does not correspond to a valid address</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>If there are no Addresses with the given Address ID.</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="loadPolicyPeriod">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="loadPolicyPeriodRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="loadPolicyPeriodResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>if the policyPeriodID is null or does not correspond to a valid policyperiod</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>If there are no Policy Periods with the given Policy Period ID.</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="loadProducer">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="loadProducerRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="loadProducerResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>if the producerID is null or does not correspond to a valid producer</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>If there are no Producers with the given Producer ID.</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="payToFirstOpenStatement">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="payToFirstOpenStatementRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="payToFirstOpenStatementResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>Amount cannot be negative</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="payToProducerUnapplied">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="payToProducerUnappliedRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="payToProducerUnappliedResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>Amount cannot be negative</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="writeoffProducer">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="writeoffProducerRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="writeoffProducerResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="IPolicyPeriodAPISoapBinding" type="impl:IPolicyPeriodAPI" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdlsoap:binding transport="http://schemas.xmlsoap.org/soap/http" style="rpc"/>
    <wsdl:operation name="changeBillingMethodToAgencyBill">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="changeBillingMethodToAgencyBillRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="changeBillingMethodToAgencyBillResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <wsdl:documentation>Policy period public id cannot be null</wsdl:documentation>
        <wsdlsoap:fault name="RequiredFieldException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Policy period public id is not valid</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="changeBillingMethodToDirectBill">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="changeBillingMethodToDirectBillRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="changeBillingMethodToDirectBillResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <wsdl:documentation>Policy period public id cannot be null</wsdl:documentation>
        <wsdlsoap:fault name="RequiredFieldException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Policy period public id is not valid</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="IProfilerAPISoapBinding" type="impl:IProfilerAPI" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdlsoap:binding transport="http://schemas.xmlsoap.org/soap/http" style="rpc"/>
    <wsdl:operation name="setEnableProfilerForBatchProcess">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="setEnableProfilerForBatchProcessRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="setEnableProfilerForBatchProcessResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setEnableProfilerForBatchProcessAndWorkQueue">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="setEnableProfilerForBatchProcessAndWorkQueueRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="setEnableProfilerForBatchProcessAndWorkQueueResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setEnableProfilerForMessageDestination">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="setEnableProfilerForMessageDestinationRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="setEnableProfilerForMessageDestinationResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setEnableProfilerForStartablePlugin">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="setEnableProfilerForStartablePluginRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="setEnableProfilerForStartablePluginResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setEnableProfilerForSubsequentWebSessions">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="setEnableProfilerForSubsequentWebSessionsRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="setEnableProfilerForSubsequentWebSessionsResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setEnableProfilerForWebService">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="setEnableProfilerForWebServiceRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="setEnableProfilerForWebServiceResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setEnableProfilerForWorkQueue">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="setEnableProfilerForWorkQueueRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="setEnableProfilerForWorkQueueResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="IStagingTableEncryptionAPISoapBinding" type="impl:IStagingTableEncryptionAPI" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdlsoap:binding transport="http://schemas.xmlsoap.org/soap/http" style="rpc"/>
    <wsdl:operation name="encryptDataOnStagingTables">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="encryptDataOnStagingTablesRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="encryptDataOnStagingTablesResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="encryptDataOnStagingTablesAsBatchProcess">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="encryptDataOnStagingTablesAsBatchProcessRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="encryptDataOnStagingTablesAsBatchProcessResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="ISystemToolsAPISoapBinding" type="impl:ISystemToolsAPI" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdlsoap:binding transport="http://schemas.xmlsoap.org/soap/http" style="rpc"/>
    <wsdl:operation name="cancelUpdateStats">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="cancelUpdateStatsRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="cancelUpdateStatsResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="checkDatabaseConsistency">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="checkDatabaseConsistencyRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="checkDatabaseConsistencyResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="checkPartialDatabaseConsistency">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="checkPartialDatabaseConsistencyRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="checkPartialDatabaseConsistencyResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>SOAPException</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getActiveSessionData">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getActiveSessionDataRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getActiveSessionDataResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>if the caller does not have all of the following permissions: ADMIN</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDBCCState">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getDBCCStateRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getDBCCStateResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>SOAPException</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getHighestRunlevel">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getHighestRunlevelRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getHighestRunlevelResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLoggingCategories">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getLoggingCategoriesRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getLoggingCategoriesResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRecentAWRSnapshotInfo">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getRecentAWRSnapshotInfoRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getRecentAWRSnapshotInfoResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>SOAPException</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRunlevel">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getRunlevelRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getRunlevelResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUpdateStatsState">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getUpdateStatsStateRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getUpdateStatsStateResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>SOAPException</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getVersion">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getVersionRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getVersionResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="recalculateFileChecksums">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="recalculateFileChecksumsRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="recalculateFileChecksumsResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="reloadLoggingConfig">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="reloadLoggingConfigRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="reloadLoggingConfigResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="reportDatabaseCatalogStatistics">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="reportDatabaseCatalogStatisticsRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="reportDatabaseCatalogStatisticsResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>SOAPException</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="reportPartialDatabaseCatalogStatistics">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="reportPartialDatabaseCatalogStatisticsRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="reportPartialDatabaseCatalogStatisticsResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setRunlevel">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="setRunlevelRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="setRunlevelResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>if the server is already at that level or if the specified run level is not one of the allowed constants.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="submitAwrReportBatchJob">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="submitAwrReportBatchJobRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="submitAwrReportBatchJobResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>SOAPException</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="submitDBCCBatchJob">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="submitDBCCBatchJobRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="submitDBCCBatchJobResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>SOAPException</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="submitDmvReportBatchJob">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="submitDmvReportBatchJobRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="submitDmvReportBatchJobResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>SOAPException</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="submitDmvReportBatchJobWithParams">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="submitDmvReportBatchJobWithParamsRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="submitDmvReportBatchJobWithParamsResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>SOAPException</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="submitUpdateStats">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="submitUpdateStatsRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="submitUpdateStatsResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>SOAPException</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateLoggingLevel">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="updateLoggingLevelRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="updateLoggingLevelResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <wsdl:documentation>If the logger field is null.</wsdl:documentation>
        <wsdlsoap:fault name="RequiredFieldException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdl:documentation>If the logging level is not valid.</wsdl:documentation>
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="verifyDatabaseSchema">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="verifyDatabaseSchemaRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="verifyDatabaseSchemaResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="ITableImportAPISoapBinding" type="impl:ITableImportAPI" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdlsoap:binding transport="http://schemas.xmlsoap.org/soap/http" style="rpc"/>
    <wsdl:operation name="clearErrorTable">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="clearErrorTableRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="clearErrorTableResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearExclusionTable">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="clearExclusionTableRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="clearExclusionTableResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearStagingTables">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="clearStagingTablesRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="clearStagingTablesResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteExcludedRowsFromStagingTables">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="deleteExcludedRowsFromStagingTablesRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="deleteExcludedRowsFromStagingTablesResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteExcludedRowsFromStagingTablesAsBatchProcess">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="deleteExcludedRowsFromStagingTablesAsBatchProcessRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="deleteExcludedRowsFromStagingTablesAsBatchProcessResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="encryptDataOnStagingTables">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="encryptDataOnStagingTablesRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="encryptDataOnStagingTablesResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="integrityCheckStagingTableContents">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="integrityCheckStagingTableContentsRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="integrityCheckStagingTableContentsResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="integrityCheckStagingTableContentsAndLoadSourceTables">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="integrityCheckStagingTableContentsAndLoadSourceTablesRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="integrityCheckStagingTableContentsAndLoadSourceTablesResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="integrityCheckStagingTableContentsAndLoadSourceTablesAsBatchProcess">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="integrityCheckStagingTableContentsAndLoadSourceTablesAsBatchProcessRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="integrityCheckStagingTableContentsAndLoadSourceTablesAsBatchProcessResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="integrityCheckStagingTableContentsAsBatchProcess">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="integrityCheckStagingTableContentsAsBatchProcessRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="integrityCheckStagingTableContentsAsBatchProcessResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="integrityCheckZoneStagingTableContentsAndLoadZoneSourceTables">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="integrityCheckZoneStagingTableContentsAndLoadZoneSourceTablesRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="integrityCheckZoneStagingTableContentsAndLoadZoneSourceTablesResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="populateExclusionTable">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="populateExclusionTableRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="populateExclusionTableResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="populateExclusionTableAsBatchProcess">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="populateExclusionTableAsBatchProcessRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="populateExclusionTableAsBatchProcessResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateStatisticsOnStagingTables">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="updateStatisticsOnStagingTablesRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="updateStatisticsOnStagingTablesResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateStatisticsOnStagingTablesAsBatchProcess">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="updateStatisticsOnStagingTablesAsBatchProcessRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="updateStatisticsOnStagingTablesAsBatchProcessResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="ITypelistToolsAPISoapBinding" type="impl:ITypelistToolsAPI" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdlsoap:binding transport="http://schemas.xmlsoap.org/soap/http" style="rpc"/>
    <wsdl:operation name="getAliasByInternalCode">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getAliasByInternalCodeRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getAliasByInternalCodeResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdl:documentation>if more than one result is found for the given namespace/typecode</wsdl:documentation>
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>if the caller does not have all of the following permissions: ADMIN</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAliasesByInternalCode">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getAliasesByInternalCodeRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getAliasesByInternalCodeResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>if the caller does not have all of the following permissions: ADMIN</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTypeKeyByAlias">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getTypeKeyByAliasRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getTypeKeyByAliasResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdl:documentation>if more than one result is found for the given namespace/alias</wsdl:documentation>
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>if the caller does not have all of the following permissions: ADMIN</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTypeKeysByAlias">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getTypeKeysByAliasRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getTypeKeysByAliasResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>if the caller does not have all of the following permissions: ADMIN</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTypelistValues">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getTypelistValuesRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getTypelistValuesResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdl:documentation>if no typelist exists with the given name</wsdl:documentation>
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>if the caller does not have all of the following permissions: ADMIN</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="IUserAPISoapBinding" type="impl:IUserAPI" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdlsoap:binding transport="http://schemas.xmlsoap.org/soap/http" style="rpc"/>
    <wsdl:operation name="addRolesToUser">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="addRolesToUserRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="addRolesToUserResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>if the userID or roleID does not exist</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addUser">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="addUserRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="addUserResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <wsdl:documentation>if the passed in User is null, or if the passed in User.Contact is null, or if the passed in User.Credential is null.</wsdl:documentation>
        <wsdlsoap:fault name="RequiredFieldException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>if a user already exists with the given credential name or if one of the specified roles doesn't exist.</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addUser">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="addUserRequest1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="addUserResponse1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>if a user already exists with the given credential name or if one of the specified roles doesn't exist.</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addUserAsMemberOfGroup">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="addUserAsMemberOfGroupRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="addUserAsMemberOfGroupResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>if the user or group is not found</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addUserAttributes">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="addUserAttributesRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="addUserAttributesResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>if the userID or attributeID does not exist</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="doesExist">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="doesExistRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="doesExistResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findPublicIdByName">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="findPublicIdByNameRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="findPublicIdByNameResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUser">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getUserRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getUserResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>if the userID does not exist</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdl:documentation>If multiple users match the given user id.</wsdl:documentation>
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>if the user does not have permission</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isUserMemberOfGroup">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="isUserMemberOfGroupRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="isUserMemberOfGroupResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>if the user or group is not found</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeRolesFromUser">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="removeRolesFromUserRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="removeRolesFromUserResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>if the userID or one of the roleIDs does not exist</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeUserAsMemberOfGroup">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="removeUserAsMemberOfGroupRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="removeUserAsMemberOfGroupResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>if the user or group is not found</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeUserAttributes">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="removeUserAttributesRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="removeUserAttributesResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>if the userID or attributeIDs do not exist</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="IWorkflowAPISoapBinding" type="impl:IWorkflowAPI" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdlsoap:binding transport="http://schemas.xmlsoap.org/soap/http" style="rpc"/>
    <wsdl:operation name="complete">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="completeRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="completeResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <wsdl:documentation>If the workflow id is null.</wsdl:documentation>
        <wsdlsoap:fault name="RequiredFieldException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>If the workflow id did not match a valid workflow.</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="invokeTrigger">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="invokeTriggerRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="invokeTriggerResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <wsdl:documentation>If the trigger key or workflow id is null.</wsdl:documentation>
        <wsdlsoap:fault name="RequiredFieldException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdl:documentation>If no workspace matches the given workflow id or the trigger is invalid or not available.</wsdl:documentation>
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isTriggerAvailable">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="isTriggerAvailableRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="isTriggerAvailableResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <wsdl:documentation>If the trigger key or workflow id is null.</wsdl:documentation>
        <wsdlsoap:fault name="RequiredFieldException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdl:documentation>If no workspace matches the given workflow id.</wsdl:documentation>
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="resumeAllWorkflows">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="resumeAllWorkflowsRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="resumeAllWorkflowsResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="resumeWorkflow">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="resumeWorkflowRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="resumeWorkflowResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <wsdl:documentation>If the workflow id is null.</wsdl:documentation>
        <wsdlsoap:fault name="RequiredFieldException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="EntityStateException">
        <wsdl:documentation>If the workflow is not currently in the error or suspended state.</wsdl:documentation>
        <wsdlsoap:fault name="EntityStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>If the workflow id did not match a valid workflow.</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="suspend">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="suspendRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="suspendResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <wsdl:documentation>If the workflow id is null</wsdl:documentation>
        <wsdlsoap:fault name="RequiredFieldException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>If the workflow id did not match a valid workflow.</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="IZoneImportAPISoapBinding" type="impl:IZoneImportAPI" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdlsoap:binding transport="http://schemas.xmlsoap.org/soap/http" style="rpc"/>
    <wsdl:operation name="clearProductionTables">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="clearProductionTablesRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="clearProductionTablesResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdl:documentation>If the country code is not null and does not have a zone configuration defined or does not correspond to a valid country.</wsdl:documentation>
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearStagingTables">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="clearStagingTablesRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="clearStagingTablesResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdl:documentation>If the country code is not null and does not correspond to a valid country.</wsdl:documentation>
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="importToStaging">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="importToStagingRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="importToStagingResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdl:documentation>If the country code provided does not correspond to a valid country that has a zone configuation defined.</wsdl:documentation>
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="InvoiceAPISoapBinding" type="impl:InvoiceAPI" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdlsoap:binding transport="http://schemas.xmlsoap.org/soap/http" style="rpc"/>
    <wsdl:operation name="previewInstallmentSchedule">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="previewInstallmentScheduleRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="previewInstallmentScheduleResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.bc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.bc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="IBillingCenterAPIService" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>
@deprecated (Since 8.0.1) Use gw.webservice.bc.bc801.BCAPI, gw.webservice.policycenter.bc801.BillingAPI,
gw.webservice.bc.bc801.TroubleTicketAPI, gw.webservice.bc.bc801.InvoiceDetailsAPI as appropriate instead
</wsdl:documentation>
    <wsdl:port name="IBillingCenterAPI" binding="impl:IBillingCenterAPISoapBinding">
      <wsdlsoap:address location="local:///IBillingCenterAPI"/>
    </wsdl:port>
  </wsdl:service>
  <wsdl:service name="ICollateralAPIService" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>
@deprecated (Since 8.0.1) Use gw.webservice.bc.bc801.BCAPI instead
</wsdl:documentation>
    <wsdl:port name="ICollateralAPI" binding="impl:ICollateralAPISoapBinding">
      <wsdlsoap:address location="local:///ICollateralAPI"/>
    </wsdl:port>
  </wsdl:service>
  <wsdl:service name="IDataObjectAPIService" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>Deprecated interface. There is no replacement. Instead, you should write your own Gosu class and publish
it as a web service by marking it with the &lt;code&gt;@RpcWebService&lt;/code&gt; annotation.
&lt;p/&gt;
Methods in this class use XPath.  The notation draws heavily from
the new "Service Data Object" spec from BEA and IBM. See their
&lt;a href="http://xml.coverpages.org/IBM-BEA-SDOv10.pdf"&gt;Service Data Ojbects&lt;/a&gt;
specification.
Please note that certain characters need to be escaped in XPath notation.  Specifically:
' goes to &amp;apos; &lt;br/&gt;
" goes to &amp;qout; &lt;br/&gt;
&lt; goes to &amp;lt; &lt;br/&gt;
&gt; goes to &amp;gt; &lt;br/&gt;
&amp; goes to &amp;amp;  &lt;br/&gt;

@author mshaw
@version Jan 16, 2004 4:15:21 PM
@deprecated Write your own Gosu class and publish it as a web service.
</wsdl:documentation>
    <wsdl:port name="IDataObjectAPI" binding="impl:IDataObjectAPISoapBinding">
      <wsdlsoap:address location="local:///IDataObjectAPI"/>
    </wsdl:port>
  </wsdl:service>
  <wsdl:service name="IGroupAPIService" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>IGroupAPI provides mechanisms for adding new Groups to and obtaining information for
existing Groups from ClaimCenter
@deprecated Write your own Gosu class and publish it as a web service.
</wsdl:documentation>
    <wsdl:port name="IGroupAPI" binding="impl:IGroupAPISoapBinding">
      <wsdlsoap:address location="local:///IGroupAPI"/>
    </wsdl:port>
  </wsdl:service>
  <wsdl:service name="IImportToolsAPIService" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>IImportToolsAPI is a remote interface to a set of tools to import XML data to the
server.
&lt;p/&gt;
The XML import format is defined by dynamically-generated XML Schema Definition (XSD) files. Regenerate the XSD
files with the regen-xsd task. After XSD regeneration, you will find the XSD files in dist/xsd/import,
including the three XSD files: xx_typelists.xsd, xx_entities.xsd, xx_import.xsd (with "xx" replaced by the Guidewire
product code, e.g., "cc" for ClaimCenter).
@deprecated Use WS-I webservice gw.wsi.pl.ImportToolsAPI instead.
</wsdl:documentation>
    <wsdl:port name="IImportToolsAPI" binding="impl:IImportToolsAPISoapBinding">
      <wsdlsoap:address location="local:///IImportToolsAPI"/>
    </wsdl:port>
  </wsdl:service>
  <wsdl:service name="ILoginAPIService" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>&lt;p&gt;
A remote interface that allows a user to log in and out of a system. The system uses conversations to implement SOAP
authentication in a Guidewire application  (e.g. BillingCenter, ClaimCenter, PolicyCenter). When connecting to Guidewire
applications the caller must first authenticate using the &lt;code&gt;ILoginAPI.login()&lt;/code&gt; method.  This method returns the
the session ID of the server session.
&lt;/p&gt;
&lt;p&gt;
On each successive call in the conversation, pass the session ID in the SOAP header
{@link gw.pl.util.webservices.Globals#GW_AUTHENTICATION_SECURITY_TOKEN_CONTEXT_PROPERTY}. You must call
&lt;code&gt;logout()&lt;/code&gt; when you are done with the conversation.
&lt;/p&gt;
&lt;p&gt;&lt;b&gt;NOTE:&lt;/b&gt; This API is intended for users who are using Guidewire's web services from languages other
than Java.   If you are using Java, you should use the &lt;code&gt;APILocator&lt;/code&gt; instead.
&lt;/p&gt;
@deprecated Use WS-I webservice gw.wsi.pl.LoginAPI instead.
</wsdl:documentation>
    <wsdl:port name="ILoginAPI" binding="impl:ILoginAPISoapBinding">
      <wsdlsoap:address location="local:///ILoginAPI"/>
    </wsdl:port>
  </wsdl:service>
  <wsdl:service name="IMaintenanceToolsAPIService" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>An API used for managing the application. This is distinct from
ISystemToolsAPI which is concerned with managing the application platform.
@deprecated (Since 8.0.1) Use gw.webservice.bc.MaintenanceToolsAPI instead.
</wsdl:documentation>
    <wsdl:port name="IMaintenanceToolsAPI" binding="impl:IMaintenanceToolsAPISoapBinding">
      <wsdlsoap:address location="local:///IMaintenanceToolsAPI"/>
    </wsdl:port>
  </wsdl:service>
  <wsdl:service name="IMessagingToolsAPIService" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>MessagingTools is a remote interface to a set of tools to get messaging
statistics and perform operations on messages.
@deprecated (Since 8.0.1) Use gw.webservice.bc.MessagingToolsAPI instead.
</wsdl:documentation>
    <wsdl:port name="IMessagingToolsAPI" binding="impl:IMessagingToolsAPISoapBinding">
      <wsdlsoap:address location="local:///IMessagingToolsAPI"/>
    </wsdl:port>
  </wsdl:service>
  <wsdl:service name="IPaymentAPIService" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation/>
    <wsdl:port name="IPaymentAPI" binding="impl:IPaymentAPISoapBinding">
      <wsdlsoap:address location="local:///IPaymentAPI"/>
    </wsdl:port>
  </wsdl:service>
  <wsdl:service name="IPolicyPeriodAPIService" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>
@deprecated (Since 8.0.1) Use gw.webservice.bc.bc801.BCAPI instead
</wsdl:documentation>
    <wsdl:port name="IPolicyPeriodAPI" binding="impl:IPolicyPeriodAPISoapBinding">
      <wsdlsoap:address location="local:///IPolicyPeriodAPI"/>
    </wsdl:port>
  </wsdl:service>
  <wsdl:service name="IProfilerAPIService" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns2="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>API to access services offered by the Guidewire Profiler.
@deprecated Use WS-I webservice gw.wsi.pl.ProfilerAPI instead.
</wsdl:documentation>
    <wsdl:port name="IProfilerAPI" binding="impl:IProfilerAPISoapBinding">
      <wsdlsoap:address location="local:///IProfilerAPI"/>
    </wsdl:port>
  </wsdl:service>
  <wsdl:service name="IStagingTableEncryptionAPIService" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>This interface provides methods for encrypting data in the  staging tables.
@deprecated (Since 8.0.1) Use gw.webservice.bc.bc801.BCAPI instead.
</wsdl:documentation>
    <wsdl:port name="IStagingTableEncryptionAPI" binding="impl:IStagingTableEncryptionAPISoapBinding">
      <wsdlsoap:address location="local:///IStagingTableEncryptionAPI"/>
    </wsdl:port>
  </wsdl:service>
  <wsdl:service name="ISystemToolsAPIService" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>System maintenance interface.
@deprecated Use WS-I webservice gw.wsi.pl.SystemToolsAPI instead.
</wsdl:documentation>
    <wsdl:port name="ISystemToolsAPI" binding="impl:ISystemToolsAPISoapBinding">
      <wsdlsoap:address location="local:///ISystemToolsAPI"/>
    </wsdl:port>
  </wsdl:service>
  <wsdl:service name="ITableImportAPIService" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>This interface provides methods for integrity checking and loading data via
the  staging tables.
&lt;p/&gt;
In particular, it allows the caller to instruct the server
to perform the following staging table operations:
&lt;ol&gt;
&lt;li&gt;Clear error table.&lt;/li&gt;
&lt;li&gt;Clear exclusion table.&lt;/li&gt;
&lt;li&gt;Clear staging tables.&lt;/li&gt;
&lt;li&gt;Delete rows from staging tables based on contents of exclusion table.&lt;/li&gt;
&lt;li&gt;Populate exclusion table with rows to be excluded.&lt;/li&gt;
&lt;li&gt;Integrity check the contents of the staging tables.&lt;/li&gt;
&lt;li&gt;Integrity check the contents of the Zone staging tables and load Zone source tables if no errors.&lt;/li&gt;
&lt;li&gt;Integrity check the contents of the staging tables and load source tables if no errors.&lt;/li&gt;
&lt;/ol&gt;
@deprecated Use WS-I webservice gw.wsi.pl.TableImportAPI instead.
</wsdl:documentation>
    <wsdl:port name="ITableImportAPI" binding="impl:ITableImportAPISoapBinding">
      <wsdlsoap:address location="local:///ITableImportAPI"/>
    </wsdl:port>
  </wsdl:service>
  <wsdl:service name="ITypelistToolsAPIService" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>ITypelistToolsAPI provides methods that allow for the extraction of typelist data from the
system.
@deprecated Use WS-I webservice gw.wsi.pl.TypelistToolsAPI instead.
</wsdl:documentation>
    <wsdl:port name="ITypelistToolsAPI" binding="impl:ITypelistToolsAPISoapBinding">
      <wsdlsoap:address location="local:///ITypelistToolsAPI"/>
    </wsdl:port>
  </wsdl:service>
  <wsdl:service name="IUserAPIService" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://entity.webservices.bc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>UserAPI is used to perform operations on users.  This includes creating and modifying.
@deprecated Write your own Gosu class and publish it as a web service.
</wsdl:documentation>
    <wsdl:port name="IUserAPI" binding="impl:IUserAPISoapBinding">
      <wsdlsoap:address location="local:///IUserAPI"/>
    </wsdl:port>
  </wsdl:service>
  <wsdl:service name="IWorkflowAPIService" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>External API for performing operations on workflows.
@deprecated Use WS-I webservice gw.wsi.pl.WorkflowAPI instead.
</wsdl:documentation>
    <wsdl:port name="IWorkflowAPI" binding="impl:IWorkflowAPISoapBinding">
      <wsdlsoap:address location="local:///IWorkflowAPI"/>
    </wsdl:port>
  </wsdl:service>
  <wsdl:service name="IZoneImportAPIService" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>IZoneImportAPI is a remote interface to a set of tools to import zone data (in csv format)
into the staging tables.  See documentation for the zone data csv format.
@deprecated Use WS-I webservice gw.wsi.pl.ZoneImportAPI.
</wsdl:documentation>
    <wsdl:port name="IZoneImportAPI" binding="impl:IZoneImportAPISoapBinding">
      <wsdlsoap:address location="local:///IZoneImportAPI"/>
    </wsdl:port>
  </wsdl:service>
  <wsdl:service name="InvoiceAPIService" xmlns="" xmlns:impl="http://api.webservices.bc.guidewire.com/" xmlns:intf="http://api.webservices.bc.guidewire.com/" xmlns:tns1="http://entity.webservices.bc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.bc.guidewire.com/" xmlns:tns3="http://fault.webservices.bc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>
@deprecated (Since 8.0.1) Use gw.webservice.policycenter.bc801.BillingAPI instead.
</wsdl:documentation>
    <wsdl:port name="InvoiceAPI" binding="impl:InvoiceAPISoapBinding">
      <wsdlsoap:address location="local:///InvoiceAPI"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>