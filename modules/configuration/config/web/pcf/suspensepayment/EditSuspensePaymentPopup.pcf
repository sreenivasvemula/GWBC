<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../pcf.xsd">
  <Popup
    beforeCommit="finalizeSuspensePayment()"
    canEdit="true"
    id="EditSuspensePaymentPopup"
    startInEditMode="true"
    title="displaykey.Web.EditSuspensePaymentPopup.Title">
    <LocationEntryPoint
      signature="EditSuspensePaymentPopup(suspensePayment : SuspensePayment)"/>
    <Variable
      name="suspensePayment"
      type="SuspensePayment"/>
    <Variable
      initialValue="suspensePayment.CurrentApplyTo"
      name="applyTo"/>
    <Variable
      initialValue="suspensePayment.AccountNumber"
      name="accountNumber"/>
    <Variable
      initialValue="suspensePayment.PolicyNumber"
      name="policyNumber"/>
    <Variable
      initialValue="suspensePayment.ProducerName"
      name="producerName"/>
    <Variable
      initialValue="suspensePayment.Amount"
      name="amount"/>
    <Variable
      initialValue="suspensePayment.Description"
      name="description"/>
    <Screen
      id="EditSuspensePaymentScreen">
      <Toolbar>
        <EditButtons/>
      </Toolbar>
      <DetailViewPanel
        id="EditSuspensePaymentDV">
        <InputColumn>
          <Label
            label="displaykey.Web.EditSuspensePaymentPopup.Target"/>
          <Choice
            id="AccountChoice"
            option="SuspensePaymentApplyTo.TC_ACCOUNT.Code"
            value="applyTo">
            <Input
              conversionExpression="(PickedValue as Account).AccountNumber"
              editable="true"
              id="AccountNumber"
              label="displaykey.Web.EditSuspensePaymentPopup.AccountNumber"
              value="accountNumber">
              <MenuItem
                action="AccountSearchPopup.push()"
                icon="&quot;search.png&quot;"
                id="AccountPicker"/>
            </Input>
          </Choice>
          <Choice
            id="PolicyChoice"
            option="SuspensePaymentApplyTo.TC_POLICY.Code"
            value="applyTo">
            <Input
              conversionExpression="(PickedValue as PolicyPeriod).PolicyNumber"
              editable="true"
              id="PolicyNumber"
              label="displaykey.Web.EditSuspensePaymentPopup.PolicyNumber"
              value="policyNumber">
              <MenuItem
                action="PolicySearchPopup.push()"
                icon="&quot;search.png&quot;"
                id="PolicyPicker"/>
            </Input>
          </Choice>
          <Choice
            id="ProducerChoice"
            option="SuspensePaymentApplyTo.TC_PRODUCER.Code"
            value="applyTo">
            <Input
              conversionExpression="(PickedValue as Producer).Name"
              editable="true"
              id="ProducerName"
              label="displaykey.Web.NewSuspensePayment.ProducerName"
              value="producerName">
              <MenuItem
                action="ProducerSearchPopup.push()"
                icon="&quot;search.png&quot;"
                id="ProducerPicker"/>
            </Input>
          </Choice>
        </InputColumn>
        <InputColumn>
          <MonetaryAmountInput
            currency="suspensePayment.Currency"
            editable="true"
            id="Amount"
            label="displaykey.Web.EditSuspensePaymentPopup.Amount"
            required="true"
            value="amount"/>
          <TextAreaInput
            editable="true"
            id="Description"
            label="displaykey.Web.EditSuspensePaymentPopup.Description"
            numRows="4"
            value="description"/>
        </InputColumn>
      </DetailViewPanel>
      <DetailViewPanel>
        <InputColumn>
          <ListViewInput
            def="SuspensePaymentTransactionsLV(suspensePayment)"
            id="suspensePaymentTransactions">
            <Toolbar/>
          </ListViewInput>
        </InputColumn>
      </DetailViewPanel>
    </Screen>
    <Code><![CDATA[function finalizeSuspensePayment() {
  suspensePayment.setApplyToTarget(applyTo, accountNumber, policyNumber, producerName)
  suspensePayment.updateAmount(amount)
  suspensePayment.Description = description
}]]></Code>
  </Popup>
</PCF>